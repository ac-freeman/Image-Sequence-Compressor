(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24633,        567]
NotebookOptionsPosition[     23663,        542]
NotebookOutlinePosition[     24005,        557]
CellTagsIndexPosition[     23962,        554]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mSize", " ", "=", " ", "500"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "255"}], "}"}], "]"}], "&"}], ",", " ", "mSize"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", " ", "=", " ", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"{", "M1", "}"}], ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"im2", " ", "=", " ", 
     RowBox[{"Lighter", "[", "im", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"M2", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"ImageData", "[", 
       RowBox[{"im2", ",", " ", "\"\<Byte\>\""}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M2", " ", "=", " ", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{"x", "+", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}]}], "]"}], "/@", 
     "M1"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M1diff", " ", "=", " ", 
    RowBox[{"M2", "-", "M1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TwosComplement", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Positive", "[", "n", "]"}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "2", ",", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{
               RowBox[{"IntegerLength", "[", 
                RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "0"}], ",", 
              RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], 
         "+", "\[IndentingNewLine]", "1"}], ",", "2", ",", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BitSize", "[", "a_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"TwosComplement", "[", "a", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlock", "[", 
    RowBox[{"a_List", ",", "start_Integer", ",", " ", "blockFactor_Integer"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"(", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"twosArray", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"start", "+", "blockFactor", "-", "1"}], ")"}], ">", 
        "mSize"}], ",", " ", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"twosArray", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"TwosComplement", ",", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"start", ";;", "mSize"}], "]"}], "]"}]}], "]"}]}], 
         ";"}], "\[IndentingNewLine]", ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"twosArray", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"TwosComplement", ",", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"start", ";;", 
               RowBox[{"(", 
                RowBox[{"start", "+", "blockFactor", "-", "1"}], ")"}]}], 
              "]"}], "]"}]}], "]"}]}], ";"}], " ", ")"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blockUnitLength", " ", "=", " ", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", " ", "twosArray"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blockDef", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"blockUnitLength", ",", " ", "2", ",", " ", "9"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"twosArray", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"PadLeft", "[", 
         RowBox[{"#", ",", " ", "blockUnitLength", ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       "twosArray"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Pads", " ", "left", " ", "with", " ", 
        RowBox[{"0", "'"}], "s", " ", "if", " ", "positive"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "'"}], "s", " ", "if", " ", "negative"}], ";", " ", 
        RowBox[{
        "makes", " ", "each", " ", "number", " ", "to", " ", "be", " ", 
         "blockUnitLength"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{"twosArray", ",", " ", "blockDef"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BlockSpace", "[", 
     RowBox[{
     "a_List", ",", "start_Integer", ",", " ", "blockFactor_Integer"}], "]"}],
     " ", ":=", " ", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"start", "+", "blockFactor", "-", "1"}], ")"}], ">", 
       "mSize"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"BitSize", ",", " ", 
           RowBox[{"a", "[", 
            RowBox[{"[", 
             RowBox[{"start", ";;", "mSize"}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], "]"}], "*", "blockFactor"}], " ", "+",
        "9"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"BitSize", ",", " ", 
           RowBox[{"a", "[", 
            RowBox[{"[", 
             RowBox[{"start", ";;", 
              RowBox[{"(", 
               RowBox[{"start", "+", "blockFactor", "-", "1"}], ")"}]}], 
             "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], "*", 
        "blockFactor"}], " ", "+", "9"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GetBlockSpace", "[", 
     RowBox[{
     "a_List", ",", " ", "blockNumber_Integer", ",", " ", 
      "blockFactor_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"BlockSpace", "[", 
     RowBox[{"a", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"blockNumber", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
       "1"}], ",", " ", "blockFactor"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlockNumberData", "[", 
    RowBox[{
    "a_List", ",", " ", "blockNumber_Integer", ",", " ", 
     "blockFactor_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"GetBlock", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumber", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", "blockFactor"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetBlockSpace", "[", 
     RowBox[{
     "a_List", ",", " ", "blockNumber_Integer", ",", " ", 
      "blockFactor_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"GetBlockNumberData", "[", 
       RowBox[{"a", ",", " ", "blockNumber", ",", " ", "blockFactor"}], "]"}],
       ";"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetOptimumBlockFactor", "[", "m_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentMin", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"currentBlockFactor", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
       RowBox[{"i", " ", "<", " ", 
        RowBox[{"mSize", "/", "2"}]}], ",", " ", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tempSize", " ", "=", " ", 
          RowBox[{"GetImageSize", "[", 
           RowBox[{"M1diff", ",", " ", "i"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentMin", " ", "\[Equal]", " ", 
            RowBox[{"-", "1"}]}], ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
             RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], ",",
            " ", "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tempSize", " ", "<", " ", "currentMin"}], ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
               RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
             ",", " ", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"tempSize", " ", ">", " ", 
                RowBox[{"2", "*", "currentMin"}]}], ",", " ", 
               RowBox[{"i", " ", "=", " ", 
                RowBox[{"mSize", "/", "2"}]}], ","}], "]"}]}], "]"}]}], 
          "]"}]}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "currentBlockFactor", "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFullEncodedImage", "[", "m_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"blockFactor", " ", "=", " ", 
      RowBox[{"GetOptimumBlockFactor", "[", "m", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fullImage", " ", "=", 
      RowBox[{"{", "}"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"fullImage", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"fullImage", ",", " ", 
          RowBox[{"GetBlock", "[", 
           RowBox[{"m", ",", " ", "k", ",", " ", "blockFactor"}], "]"}]}], 
         "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], ";",
      " ", 
     RowBox[{"(*", 
      RowBox[{
      "Do", " ", "this", " ", "join", " ", "function", " ", "for", " ", "k", 
       " ", "values", " ", "1", " ", "through", " ", "Ceil", 
       RowBox[{"(", 
        RowBox[{"mSize", "/", "blockFactor"}], ")"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "fullImage"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetImageSize", "[", 
    RowBox[{"m_List", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=", 
   "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"GetBlockSpace", "[", 
         RowBox[{"m", ",", "  ", "n", ",", " ", "blockFactor"}], "]"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], 
      " ", "+", "8"}], ";"}], ")"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7589772492309756`*^9, 3.75897733842875*^9}, {
   3.758977431367025*^9, 3.7589774332285576`*^9}, {3.7589781500829277`*^9, 
   3.758978164323367*^9}, {3.7589789317059655`*^9, 3.758978948282484*^9}, {
   3.7589913027414503`*^9, 3.7589914319627132`*^9}, {3.758991833264929*^9, 
   3.7589920188096123`*^9}, {3.758992373457159*^9, 3.758992451112569*^9}, {
   3.7589924873963485`*^9, 3.7589924956420617`*^9}, {3.7589926955393667`*^9, 
   3.758992723377573*^9}, 3.758992844977169*^9, {3.7589929374169745`*^9, 
   3.7589929445414696`*^9}, {3.75899299172818*^9, 3.7589930186101584`*^9}, {
   3.758993052017373*^9, 3.7589930771824813`*^9}, {3.7589931522696314`*^9, 
   3.75899316251612*^9}, {3.75899364206619*^9, 3.758993642799247*^9}, {
   3.7589937107554092`*^9, 3.7589937137656355`*^9}, {3.758993843997575*^9, 
   3.75899384517218*^9}, {3.75899390398055*^9, 3.7589939115086155`*^9}, {
   3.7589953377103634`*^9, 3.7589953457161455`*^9}, {3.75899989010415*^9, 
   3.7589999044407516`*^9}, {3.759000000928757*^9, 3.7590000109549723`*^9}, {
   3.7590000417836204`*^9, 3.7590000982310996`*^9}, {3.759000164651244*^9, 
   3.7590001660971375`*^9}, {3.759000242185158*^9, 3.7590002533988867`*^9}, {
   3.7590003465427976`*^9, 3.759000375536374*^9}, {3.759000440864897*^9, 
   3.7590004423265233`*^9}, {3.7590004782647667`*^9, 3.759000491193451*^9}, {
   3.759000611415778*^9, 3.759000620791229*^9}, {3.759000655407099*^9, 
   3.7590007573504453`*^9}, {3.759000945591099*^9, 3.75900100587983*^9}, {
   3.759001536205309*^9, 3.7590016373495407`*^9}, {3.759001678390257*^9, 
   3.759001680558457*^9}, {3.7590017240045652`*^9, 3.759001731623968*^9}, {
   3.759002090558895*^9, 3.759002091716821*^9}, {3.7590023105508795`*^9, 
   3.759002310695003*^9}, 3.759002569984885*^9, {3.759002717748419*^9, 
   3.7590027182410994`*^9}, {3.7590027844691916`*^9, 
   3.7590027848840814`*^9}, {3.7590028548292046`*^9, 3.759002855613106*^9}, {
   3.759011808678236*^9, 3.7590118094152904`*^9}, {3.759011873056448*^9, 
   3.759011873586038*^9}, {3.759011976389518*^9, 3.759011976811063*^9}, {
   3.759012038782615*^9, 3.7590120389642353`*^9}, {3.7590120720023136`*^9, 
   3.759012080966284*^9}, {3.759014391015216*^9, 3.7590144708487473`*^9}, {
   3.7590145541549807`*^9, 3.7590146286915736`*^9}, {3.759014969108798*^9, 
   3.759014981009347*^9}, {3.759015042357397*^9, 3.759015090571883*^9}, {
   3.759015154298724*^9, 3.7590151806975574`*^9}, {3.759015553351217*^9, 
   3.75901558804668*^9}, {3.7590156413145313`*^9, 3.759015672463519*^9}, {
   3.7590157147298822`*^9, 3.759015716546432*^9}, {3.7590158363872766`*^9, 
   3.759015850735077*^9}, {3.75901590287648*^9, 3.759015941035616*^9}, {
   3.7590160582004137`*^9, 3.759016121803862*^9}, {3.7590161525754595`*^9, 
   3.759016166066966*^9}, {3.759016206647125*^9, 3.7590162277502117`*^9}, {
   3.759016261971603*^9, 3.7590162679654245`*^9}, {3.759016437753399*^9, 
   3.7590164460922265`*^9}, {3.759016598597017*^9, 3.759016601455989*^9}, {
   3.759016631676732*^9, 3.759016633017149*^9}, {3.759016670666733*^9, 
   3.759016727857525*^9}, {3.759017222144306*^9, 3.7590172285186205`*^9}, {
   3.7590173004193335`*^9, 3.7590173011282425`*^9}, {3.759061614880348*^9, 
   3.7590616153311424`*^9}, {3.7590616701884336`*^9, 
   3.7590617442516403`*^9}, {3.7590618171238585`*^9, 3.7590618181075573`*^9}, 
   3.7590619114126177`*^9, {3.759061954100791*^9, 3.7590619550113645`*^9}, {
   3.7590635982047606`*^9, 3.7590636006444473`*^9}, {3.7590636981410694`*^9, 
   3.759063723189645*^9}, {3.7590647958853655`*^9, 3.75906481163659*^9}, {
   3.7590649384436803`*^9, 3.759064977032415*^9}, {3.7590650620157146`*^9, 
   3.759065083363764*^9}, {3.759065124147683*^9, 3.7590651719484787`*^9}, {
   3.7590652348684497`*^9, 3.7590652665247707`*^9}, {3.7590653062526674`*^9, 
   3.7590654036207905`*^9}, {3.759065468700883*^9, 3.759065581254486*^9}, {
   3.7590656625347767`*^9, 3.7590656652934723`*^9}, {3.7590657347344446`*^9, 
   3.759065778165574*^9}, {3.7590658293745356`*^9, 3.7590658835487356`*^9}, {
   3.7590659185727854`*^9, 3.7590660080455694`*^9}, {3.759066147910651*^9, 
   3.7590661626536217`*^9}, {3.7590664649909215`*^9, 3.75906647680177*^9}, {
   3.759066567503355*^9, 3.759066572037426*^9}, {3.759067227769377*^9, 
   3.7590672545259156`*^9}, {3.759067329915345*^9, 3.7590673417409544`*^9}, {
   3.759067428945265*^9, 3.7590674614132423`*^9}, {3.759067492879455*^9, 
   3.7590674931896257`*^9}, {3.759067572358611*^9, 3.759067687053295*^9}, {
   3.7590678220304785`*^9, 3.7590678480060062`*^9}, {3.759067885209214*^9, 
   3.759067890452074*^9}, {3.7590679391090574`*^9, 3.75906798919351*^9}, {
   3.7590680965243883`*^9, 3.7590680985826426`*^9}, 3.759068388788424*^9, {
   3.7590687622883034`*^9, 3.759068762742329*^9}, {3.759069306333847*^9, 
   3.75906937782031*^9}, {3.7590694254606576`*^9, 3.759069477895775*^9}, 
   3.7590695134602394`*^9, {3.7590697419198*^9, 3.75906977872677*^9}, {
   3.759069812713431*^9, 3.7590698335453253`*^9}, 3.759069914855235*^9, {
   3.759070091298519*^9, 3.759070091922223*^9}, {3.7590999665530615`*^9, 
   3.7590999741574554`*^9}, {3.759100082219204*^9, 3.759100100651366*^9}, {
   3.7591001325385075`*^9, 3.7591001330162954`*^9}, {3.759444175317484*^9, 
   3.7594442363349075`*^9}, {3.7594443034673605`*^9, 3.759444361918532*^9}, {
   3.759444437584547*^9, 3.759444453654539*^9}, {3.7594445264826593`*^9, 
   3.7594445283576813`*^9}, {3.759444682774888*^9, 3.7594446946308346`*^9}, {
   3.759444730051041*^9, 3.7594447306804466`*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"e617e23e-041d-4206-acc1-d548565b4fc3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwBLALT/SFib1JmAgAAAHMIAAAAUmF3QXJyYXlTEAAAAFVuc2lnbmVkSW50
ZWdlcjhiAgAAAAEAAAD0AQAAisjcrtcw3eeS8lf8tEPIr4icxUTBvkjY9ytI
xFZWSJkfckaSCsXGETichekFDQsQL7NO3qwVUrnhazy8fl0KWcOuwkMZuVkv
eEfmuWWgBpYcdWaLw4prayWEIZcAaMkHljdhFRJp/zUccJcZxoVTLl5YvVHR
OegNOY+uX0aTV9jznvj4M5uU9EjRjsysFr21DjrBCYe8jBaoHOAOQ0o+uJwP
pvBaoRF68oQnveM4Tvq9CBaq733ekfmeu1yGma5Hc8WLbzqVGaLHmhGT7b1s
ryf6Q9bnRH2Bv6ZrxfmNB04ZrP4LRfnT06Hn8FGlsGe6eJYA4fbS81J0iN5o
docUHrAul6cEO+ICLZLzr804w5/0fAN/WcZzLoEUXNUf5tVPRJvqi+I93pc9
aT+T0pY/E5CFMSAyAL5s5wwm4d23QHMmAOoN8J6mnWVMraJ1fIJcSRyUiNaw
l0LViid4kzF3ctxn7rtPv8Kcq79cYY1+vWfLcrJFVurXTBIlljk2YWBf3Gx4
Pwi1fomC3Oynx7+XsM3CnRqDbSCN3N8k+tovgcQqxF0Q+3RfilYYj9Ve+A1m
6e3CxWrrWzR/Ic8u52/9hXg0FXIA/tG//MqB/ME2gEipYzt481aWc/awvqRH
y1Z9L8lS5SQf4NX5LvJy+f91ckhw5NUNlA9b
    "], {{0, 1}, {500, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{500, 1},
  PlotRange->{{0, 500}, {0, 1}}]], "Output",
 CellChangeTimes->{{3.7594446440408154`*^9, 3.759444661256811*^9}, {
  3.7594446985046225`*^9, 3.759444733533703*^9}},
 CellLabel->
  "Out[712]=",ExpressionUUID->"8e045c31-d001-463e-bd28-88a6daef1124"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"originalImageSize", " ", "=", " ", 
  RowBox[{"mSize", 
   RowBox[{"(", "8", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7590204645167704`*^9, 3.7590204722881536`*^9}},
 CellLabel->
  "In[724]:=",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],

Cell[BoxData["4000"], "Output",
 CellChangeTimes->{
  3.7594435739620748`*^9, {3.7594436307275777`*^9, 3.7594436407748995`*^9}, 
   3.759443754980695*^9, {3.7594438225904503`*^9, 3.7594438378878775`*^9}, 
   3.7594438687451053`*^9, 3.7594439472622213`*^9, {3.759444077104797*^9, 
   3.7594441133507214`*^9}, {3.7594441789172935`*^9, 
   3.7594442389653816`*^9}, {3.7594443096661987`*^9, 3.759444364648122*^9}, {
   3.7594444420470037`*^9, 3.759444456223257*^9}, 3.759444531393202*^9, {
   3.759444644324646*^9, 3.759444661482129*^9}, {3.75944469871445*^9, 
   3.7594447337703943`*^9}},
 CellLabel->
  "Out[724]=",ExpressionUUID->"bf8c9699-5d0c-46dd-b091-14f2c2d8c879"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"file", ",", " ", 
    RowBox[{"GetFullEncodedImage", "[", "M1diff", "]"}], ",", " ", 
    "\"\<Bit\>\""}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Note", " ", "that", " ", 
    RowBox[{"0", "'"}], "s", " ", "will", " ", "automatically", " ", "be", 
    " ", "padded", " ", "to", " ", "the", " ", "end", " ", "until", " ", 
    "the", " ", "file", " ", "contains", " ", "a", " ", "multiple", " ", "of",
     " ", "8", " ", "bits", " ", 
    RowBox[{"(", 
     RowBox[{"byte", " ", "representation"}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileImport", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Length", "[", "fileImport", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.759064058876412*^9, 3.7590640743552003`*^9}, {
   3.7590681013963747`*^9, 3.7590681258881207`*^9}, {3.759068220372489*^9, 
   3.7590682218259583`*^9}, {3.759068361734479*^9, 3.759068393267211*^9}, {
   3.759068634942246*^9, 3.759068640808556*^9}, {3.7590686942515154`*^9, 
   3.7590687468672056`*^9}, {3.759100037178607*^9, 3.759100049437554*^9}, 
   3.759444070465461*^9, {3.759444109569455*^9, 3.7594441628159533`*^9}, {
   3.7594446358120775`*^9, 3.7594446408911033`*^9}, {3.759444753043398*^9, 
   3.759444753458494*^9}},ExpressionUUID->"f0d682da-6d61-47af-9285-\
e1bdf5bf82b4"],

Cell[BoxData["\<\"C:\\\\Users\\\\AcFre\\\\AppData\\\\Local\\\\Temp\\\\test1\"\
\>"], "Output",
 CellChangeTimes->{
  3.75944357407506*^9, {3.7594436309160776`*^9, 3.7594436409086404`*^9}, 
   3.759443755072218*^9, {3.7594438227156043`*^9, 3.759443838033082*^9}, 
   3.7594438689781556`*^9, 3.759443947484863*^9, {3.7594440773271875`*^9, 
   3.7594441134467025`*^9}, {3.759444165148086*^9, 3.7594442396528425`*^9}, {
   3.759444310102003*^9, 3.759444365342534*^9}, {3.75944444330227*^9, 
   3.759444457364913*^9}, 3.7594445333285446`*^9, {3.7594446449955373`*^9, 
   3.7594446620611687`*^9}, {3.7594446993022957`*^9, 3.759444735439243*^9}},
 CellLabel->
  "Out[726]=",ExpressionUUID->"55cc3f66-d533-4467-a78c-1cbab80cd8c5"],

Cell[BoxData["3200"], "Print",
 CellChangeTimes->{{3.759444165156087*^9, 3.7594442396658087`*^9}, {
   3.7594443101245775`*^9, 3.7594443653664713`*^9}, {3.7594444433182254`*^9, 
   3.7594444573848505`*^9}, 3.759444533345499*^9, {3.7594446450125184`*^9, 
   3.759444662076126*^9}, {3.759444699326233*^9, 3.7594447354542046`*^9}},
 CellLabel->
  "During evaluation of \
In[725]:=",ExpressionUUID->"717ac687-fdac-4614-9ad1-15bf758294eb"]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 17905, 402, 1188, "Input",ExpressionUUID->"e617e23e-041d-4206-acc1-d548565b4fc3"],
Cell[18488, 426, 1312, 26, 32, "Output",ExpressionUUID->"8e045c31-d001-463e-bd28-88a6daef1124"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19837, 457, 274, 6, 28, "Input",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],
Cell[20114, 465, 668, 11, 32, "Output",ExpressionUUID->"bf8c9699-5d0c-46dd-b091-14f2c2d8c879"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20819, 481, 1666, 36, 86, "Input",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],
Cell[22488, 519, 722, 11, 32, "Output",ExpressionUUID->"55cc3f66-d533-4467-a78c-1cbab80cd8c5"],
Cell[23213, 532, 434, 7, 22, "Print",ExpressionUUID->"717ac687-fdac-4614-9ad1-15bf758294eb"]
}, Open  ]]
}
]
*)


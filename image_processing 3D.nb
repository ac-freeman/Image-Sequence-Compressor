(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    233676,       4283]
NotebookOptionsPosition[    231597,       4247]
NotebookOutlinePosition[    231992,       4264]
CellTagsIndexPosition[    231949,       4261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\Edits\\\\IMG_1738-3.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\Edits\\\\IMG_1739-3.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m1diff", " ", "=", " ", 
    RowBox[{"ImageSubtract", "[", 
     RowBox[{"image2", ",", "image1"}], "]"}]}], ";"}], " ", "//", " ", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image1", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image1", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"m1diff", " ", "=", " ", 
     RowBox[{"image2", " ", "-", "image1"}]}], " ", ";"}], "//", 
   "AbsoluteTiming"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "store", " ", "m1diff", " ", "as", " ", "its", " ", "twos", " ", 
    "complement", " ", "array"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nSize", " ", "=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"file", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulativeArr", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwosComplement", "[", "n_", "]"}], ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"elemLength", " ", "=", " ", 
     RowBox[{
      RowBox[{"IntegerLength", "[", 
       RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Positive", "[", "n", "]"}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "2", ",", "elemLength"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"n", ",", "2", ",", "elemLength"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "0"}], ",", 
              RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], 
         "+", "\[IndentingNewLine]", "1"}], ",", "2", ",", "elemLength"}], 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BitSize", "[", "a_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"TwosComplement", "[", "a", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TwosComplementSuperList", "[", "aa_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"TwosComplement", ",", " ", "aa", ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PadElem", "[", 
    RowBox[{"a_List", ",", " ", "blockUnitLength_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"PadLeft", "[", 
       RowBox[{"#", ",", " ", "blockUnitLength", ",", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", "a"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Pads", " ", "left", " ", "with", " ", 
       RowBox[{"0", "'"}], "s", " ", "if", " ", "positive"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "'"}], "s", " ", "if", " ", "negative"}], ";", " ", 
       RowBox[{
       "makes", " ", "each", " ", "number", " ", "to", " ", "be", " ", 
        "blockUnitLength"}]}]}], "*)"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WriteElem", "[", 
    RowBox[{
    "mat_List", ",", " ", "z_Integer", ",", " ", "m_Integer", ",", " ", 
     "n_Integer", ",", " ", "blockUnitLength_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", "\[LessEqual]", 
        RowBox[{
         RowBox[{"Dimensions", "[", "mat", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], " ", "&&", " ", 
       RowBox[{"n", " ", "\[LessEqual]", " ", 
        RowBox[{
         RowBox[{"Dimensions", "[", "mat", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"elem", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mat", "[", 
           RowBox[{"[", "m", "]"}], "]"}], "[", 
          RowBox[{"[", "n", "]"}], "]"}], "[", 
         RowBox[{"[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Positive", "[", "elem", "]"}], ",", " ", 
         RowBox[{"cumulativeArr", " ", "=", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"cumulativeArr", ",", " ", "0"}], "]"}]}], ",", " ", 
         RowBox[{"cumulativeArr", " ", "=", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"cumulativeArr", ",", " ", "1"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cumulativeArr", " ", "=", " ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"cumulativeArr", ",", " ", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"elem", ",", "2", ",", 
            RowBox[{"blockUnitLength", "-", "1"}]}], "]"}]}], "]"}]}], ";"}], 
      ","}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlock", "[", 
    RowBox[{
    "a_List", ",", "startR_Integer", ",", " ", "startC_Integer", ",", " ", 
     "blockFactor_Integer"}], "]"}], ":=", 
   RowBox[{"(", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subArray", " ", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"startR", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", 
            RowBox[{"(", 
             RowBox[{"startR", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}], " ", ",", 
         RowBox[{"startC", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"nSize", ",", 
            RowBox[{"(", 
             RowBox[{"startC", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"blockUnitLength", " ", "=", " ", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"BitLength", ",", " ", "subArray", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "+", "1"}]}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Look", " ", "at", " ", "the", " ", "length", " ", "of", " ", "arrays", 
       " ", "at", " ", "level", " ", "2", " ", 
       RowBox[{"(", 
        RowBox[{"the", " ", "lists", " ", "of", " ", "bits", " ", "in", " ", 
         RowBox[{"two", "'"}], "s", " ", "complement", " ", "for", " ", 
         "each", " ", "matrix", " ", "element"}], ")"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"blockDef", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"blockUnitLength", ",", " ", "2", ",", " ", "4"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", "blockDef"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"WriteElem", "[", 
        RowBox[{
        "subArray", ",", "z", ",", " ", "m", ",", "n", ",", 
         "blockUnitLength"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "1", ",", " ", "blockFactor"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", "blockFactor"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "1", ",", "3"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteBlockNumberData", "[", 
   RowBox[{
   "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
    "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"GetBlock", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", "blockFactor"}], "]"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlockSpace", "[", 
    RowBox[{
    "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
     "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"startR", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}], "+",
        "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"startC", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}], "+",
        "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"blockFactorWidth", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"mSize", "-", "startR", "+", "1"}], ",", "blockFactor"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"blockFactorHeight", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"nSize", "-", "startC", " ", "+", "1"}], ",", "blockFactor"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"subArray", " ", "=", " ", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"startR", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", 
            RowBox[{"(", 
             RowBox[{"startR", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}], " ", ",", 
         RowBox[{"startC", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"nSize", ",", 
            RowBox[{"(", 
             RowBox[{"startC", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"BitLength", ",", " ", "subArray", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "+", "1"}], ")"}], "*", 
       "3", "*", 
       RowBox[{"(", 
        RowBox[{"blockFactorWidth", "*", "blockFactorHeight"}], ")"}]}], "+", 
      "4"}]}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetOptimumBlockFactor", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentMin", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"currentBlockFactor", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "change", " ", "max", " ", "blockfactor", " ", "size", " ", 
       "calculation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
       RowBox[{"i", " ", "<=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"mSize", ",", "nSize"}], "]"}]}], ",", " ", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tempSize", " ", "=", " ", 
          RowBox[{"GetImageSize", "[", 
           RowBox[{"mat", ",", " ", "i"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentMin", " ", "\[Equal]", " ", 
            RowBox[{"-", "1"}]}], ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
             RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], ",",
            " ", "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tempSize", " ", "<", " ", "currentMin"}], ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
               RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
             ",", " ", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"tempSize", " ", ">", " ", 
                RowBox[{"2", "*", "currentMin"}]}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"i", " ", "=", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"mSize", ",", "nSize"}], "]"}]}], "*)"}], ","}], 
              "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Optimum block factor is \>\"", ",", "currentBlockFactor"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "currentBlockFactor", "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFullEncodedImage", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"blockFactor", " ", "=", " ", 
      RowBox[{"GetOptimumBlockFactor", "[", "mat", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"mSize", ",", " ", "2", ",", " ", "16"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"nSize", ",", " ", "2", ",", " ", "16"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"blockFactor", ",", " ", "2", ",", " ", "8"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Encode", " ", "the", " ", "block", " ", "factor", " ", "in", " ", 
        "binary", " ", "at", " ", "beginning"}], ",", " ", 
       RowBox[{"using", " ", "8", " ", "bits"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"WriteBlockNumberData", "[", 
        RowBox[{
        "mat", ",", " ", "m", ",", " ", "n", ",", " ", "blockFactor"}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], ";",
      " ", 
     RowBox[{"(*", 
      RowBox[{
      "Do", " ", "this", " ", "join", " ", "function", " ", "for", " ", "k", 
       " ", "values", " ", "1", " ", "through", " ", "Ceil", 
       RowBox[{"(", 
        RowBox[{"mSize", "/", "blockFactor"}], ")"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "cumulativeArr"}], "\[IndentingNewLine]", ")"}]}],
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetImageSize", "[", 
   RowBox[{"mat_List", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=", 
  "  ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"GetBlockSpace", "[", 
         RowBox[{
         "mat", ",", "  ", "m", ",", " ", "n", ",", " ", "blockFactor"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], 
      " ", "+", "8", " ", "+", "32"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Add", " ", "8", " ", "for", " ", "the", " ", "block", " ", "factor", 
      " ", "definition", " ", "that", " ", "would", " ", "be", " ", "at", " ",
       "the", " ", "beginning"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Add", " ", "32", " ", "to", " ", "encode", " ", "the", " ", 
      "dimensions", " ", 
      RowBox[{"(", 
       RowBox[{"2", " ", "bytes", " ", "per", " ", "dimension"}], ")"}]}], 
     "*)"}], "\[IndentingNewLine]", "s"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7589772492309756`*^9, 3.75897733842875*^9}, {
   3.758977431367025*^9, 3.7589774332285576`*^9}, {3.7589781500829277`*^9, 
   3.758978164323367*^9}, {3.7589789317059655`*^9, 3.758978948282484*^9}, {
   3.7589913027414503`*^9, 3.7589914319627132`*^9}, {3.758991833264929*^9, 
   3.7589920188096123`*^9}, {3.758992373457159*^9, 3.758992451112569*^9}, {
   3.7589924873963485`*^9, 3.7589924956420617`*^9}, {3.7589926955393667`*^9, 
   3.758992723377573*^9}, 3.758992844977169*^9, {3.7589929374169745`*^9, 
   3.7589929445414696`*^9}, {3.75899299172818*^9, 3.7589930186101584`*^9}, {
   3.758993052017373*^9, 3.7589930771824813`*^9}, {3.7589931522696314`*^9, 
   3.75899316251612*^9}, {3.75899364206619*^9, 3.758993642799247*^9}, {
   3.7589937107554092`*^9, 3.7589937137656355`*^9}, {3.758993843997575*^9, 
   3.75899384517218*^9}, {3.75899390398055*^9, 3.7589939115086155`*^9}, {
   3.7589953377103634`*^9, 3.7589953457161455`*^9}, {3.75899989010415*^9, 
   3.7589999044407516`*^9}, {3.759000000928757*^9, 3.7590000109549723`*^9}, {
   3.7590000417836204`*^9, 3.7590000982310996`*^9}, {3.759000164651244*^9, 
   3.7590001660971375`*^9}, {3.759000242185158*^9, 3.7590002533988867`*^9}, {
   3.7590003465427976`*^9, 3.759000375536374*^9}, {3.759000440864897*^9, 
   3.7590004423265233`*^9}, {3.7590004782647667`*^9, 3.759000491193451*^9}, {
   3.759000611415778*^9, 3.759000620791229*^9}, {3.759000655407099*^9, 
   3.7590007573504453`*^9}, {3.759000945591099*^9, 3.75900100587983*^9}, {
   3.759001536205309*^9, 3.7590016373495407`*^9}, {3.759001678390257*^9, 
   3.759001680558457*^9}, {3.7590017240045652`*^9, 3.759001731623968*^9}, {
   3.759002090558895*^9, 3.759002091716821*^9}, {3.7590023105508795`*^9, 
   3.759002310695003*^9}, 3.759002569984885*^9, {3.759002717748419*^9, 
   3.7590027182410994`*^9}, {3.7590027844691916`*^9, 
   3.7590027848840814`*^9}, {3.7590028548292046`*^9, 3.759002855613106*^9}, {
   3.759011808678236*^9, 3.7590118094152904`*^9}, {3.759011873056448*^9, 
   3.759011873586038*^9}, {3.759011976389518*^9, 3.759011976811063*^9}, {
   3.759012038782615*^9, 3.7590120389642353`*^9}, {3.7590120720023136`*^9, 
   3.759012080966284*^9}, {3.759014391015216*^9, 3.7590144708487473`*^9}, {
   3.7590145541549807`*^9, 3.7590146286915736`*^9}, {3.759014969108798*^9, 
   3.759014981009347*^9}, {3.759015042357397*^9, 3.759015090571883*^9}, {
   3.759015154298724*^9, 3.7590151806975574`*^9}, {3.759015553351217*^9, 
   3.75901558804668*^9}, {3.7590156413145313`*^9, 3.759015672463519*^9}, {
   3.7590157147298822`*^9, 3.759015716546432*^9}, {3.7590158363872766`*^9, 
   3.759015850735077*^9}, {3.75901590287648*^9, 3.759015941035616*^9}, {
   3.7590160582004137`*^9, 3.759016121803862*^9}, {3.7590161525754595`*^9, 
   3.759016166066966*^9}, {3.759016206647125*^9, 3.7590162277502117`*^9}, {
   3.759016261971603*^9, 3.7590162679654245`*^9}, {3.759016437753399*^9, 
   3.7590164460922265`*^9}, {3.759016598597017*^9, 3.759016601455989*^9}, {
   3.759016631676732*^9, 3.759016633017149*^9}, {3.759016670666733*^9, 
   3.759016727857525*^9}, {3.759017222144306*^9, 3.7590172285186205`*^9}, {
   3.7590173004193335`*^9, 3.7590173011282425`*^9}, {3.759061614880348*^9, 
   3.7590616153311424`*^9}, {3.7590616701884336`*^9, 
   3.7590617442516403`*^9}, {3.7590618171238585`*^9, 3.7590618181075573`*^9}, 
   3.7590619114126177`*^9, {3.759061954100791*^9, 3.7590619550113645`*^9}, {
   3.7590635982047606`*^9, 3.7590636006444473`*^9}, {3.7590636981410694`*^9, 
   3.759063723189645*^9}, {3.7590647958853655`*^9, 3.75906481163659*^9}, {
   3.7590649384436803`*^9, 3.759064977032415*^9}, {3.7590650620157146`*^9, 
   3.759065083363764*^9}, {3.759065124147683*^9, 3.7590651719484787`*^9}, {
   3.7590652348684497`*^9, 3.7590652665247707`*^9}, {3.7590653062526674`*^9, 
   3.7590654036207905`*^9}, {3.759065468700883*^9, 3.759065581254486*^9}, {
   3.7590656625347767`*^9, 3.7590656652934723`*^9}, {3.7590657347344446`*^9, 
   3.759065778165574*^9}, {3.7590658293745356`*^9, 3.7590658835487356`*^9}, {
   3.7590659185727854`*^9, 3.7590660080455694`*^9}, {3.759066147910651*^9, 
   3.7590661626536217`*^9}, {3.7590664649909215`*^9, 3.75906647680177*^9}, {
   3.759066567503355*^9, 3.759066572037426*^9}, {3.759067227769377*^9, 
   3.7590672545259156`*^9}, {3.759067329915345*^9, 3.7590673417409544`*^9}, {
   3.759067428945265*^9, 3.7590674614132423`*^9}, {3.759067492879455*^9, 
   3.7590674931896257`*^9}, {3.759067572358611*^9, 3.759067687053295*^9}, {
   3.7590678220304785`*^9, 3.7590678480060062`*^9}, {3.759067885209214*^9, 
   3.759067890452074*^9}, {3.7590679391090574`*^9, 3.75906798919351*^9}, {
   3.7590680965243883`*^9, 3.7590680985826426`*^9}, 3.759068388788424*^9, {
   3.7590687622883034`*^9, 3.759068762742329*^9}, {3.759069306333847*^9, 
   3.75906937782031*^9}, {3.7590694254606576`*^9, 3.759069477895775*^9}, 
   3.7590695134602394`*^9, {3.7590697419198*^9, 3.75906977872677*^9}, {
   3.759069812713431*^9, 3.7590698335453253`*^9}, 3.759069914855235*^9, {
   3.759070091298519*^9, 3.759070091922223*^9}, {3.7590999665530615`*^9, 
   3.7590999741574554`*^9}, {3.759100082219204*^9, 3.759100100651366*^9}, {
   3.7591001325385075`*^9, 3.7591001330162954`*^9}, {3.759444175317484*^9, 
   3.7594442363349075`*^9}, {3.7594443034673605`*^9, 3.759444361918532*^9}, {
   3.759444437584547*^9, 3.759444453654539*^9}, {3.7594445264826593`*^9, 
   3.7594445283576813`*^9}, {3.759444682774888*^9, 3.7594446946308346`*^9}, {
   3.759444730051041*^9, 3.7594447306804466`*^9}, 3.7599613666592865`*^9, {
   3.760118950363157*^9, 3.7601189538090544`*^9}, {3.760119078199824*^9, 
   3.7601190828010683`*^9}, {3.7601191128737545`*^9, 
   3.7601191189375715`*^9}, {3.7601191504099846`*^9, 
   3.7601191806519737`*^9}, {3.7601192817275124`*^9, 3.760119282730657*^9}, {
   3.7601196096959567`*^9, 3.7601196464842987`*^9}, {3.76011972670989*^9, 
   3.76011975368054*^9}, {3.760119824797968*^9, 3.760119852297536*^9}, {
   3.760120355495578*^9, 3.7601204127254734`*^9}, {3.7601207491112475`*^9, 
   3.7601208016306515`*^9}, {3.761309582371811*^9, 3.761309585606168*^9}, {
   3.761310066854187*^9, 3.7613100973315163`*^9}, {3.7613101522277207`*^9, 
   3.76131015783864*^9}, 3.7613106539199257`*^9, {3.761310814257621*^9, 
   3.7613108803517704`*^9}, {3.761310954666375*^9, 3.7613109552910557`*^9}, {
   3.761310988157421*^9, 3.761311090961219*^9}, {3.7613114647292833`*^9, 
   3.7613114785686803`*^9}, {3.76131169169587*^9, 3.7613117335110044`*^9}, {
   3.761311857669954*^9, 3.761311876039673*^9}, {3.7613119072356105`*^9, 
   3.7613119074291058`*^9}, {3.761312463066698*^9, 3.761312504959165*^9}, {
   3.7613126048821034`*^9, 3.7613126363294992`*^9}, {3.7613128313361444`*^9, 
   3.7613128436122704`*^9}, {3.761312908206738*^9, 3.7613129092369823`*^9}, {
   3.7613129822838373`*^9, 3.7613129935729675`*^9}, {3.76131302373458*^9, 
   3.761313025799858*^9}, 3.7613131418635645`*^9, 3.7613132021504774`*^9, {
   3.761313851086648*^9, 3.7613139589700146`*^9}, {3.7613139923912897`*^9, 
   3.7613140343404274`*^9}, {3.761314181206275*^9, 3.7613142073807135`*^9}, 
   3.7613145539848504`*^9, {3.761314630349142*^9, 3.7613146330798197`*^9}, {
   3.761314838538715*^9, 3.7613148417250757`*^9}, {3.7613148936244717`*^9, 
   3.7613148954944715`*^9}, {3.761314967959156*^9, 3.7613149785172157`*^9}, {
   3.761315185612893*^9, 3.7613151954012012`*^9}, {3.7613152818608932`*^9, 
   3.7613153561017227`*^9}, {3.761315428639282*^9, 3.7613154519918118`*^9}, {
   3.76131575399368*^9, 3.7613157558038692`*^9}, {3.761317188001231*^9, 
   3.761317202061838*^9}, {3.7613175905266542`*^9, 3.761317593812871*^9}, {
   3.7613176403171325`*^9, 3.761317641886937*^9}, {3.7613176913919783`*^9, 
   3.761317694655343*^9}, 3.761317940424056*^9, {3.761317981851396*^9, 
   3.7613179856612835`*^9}, {3.7613183677469587`*^9, 3.761318387817007*^9}, {
   3.7613184303130894`*^9, 3.761318432137141*^9}, {3.761318485344798*^9, 
   3.76131849038371*^9}, {3.7613185331564035`*^9, 3.761318579424454*^9}, {
   3.76131876766531*^9, 3.761318775920885*^9}, 3.7613188949093747`*^9, {
   3.761318942744819*^9, 3.761318944385399*^9}, {3.761318987170261*^9, 
   3.761318987696884*^9}, 3.7613193241870294`*^9, 3.761319364947676*^9, {
   3.761319440163461*^9, 3.76131944934731*^9}, {3.761319552821763*^9, 
   3.7613195890901504`*^9}, {3.761319619885064*^9, 3.76131962203432*^9}, 
   3.761319669428198*^9, {3.7613197068123302`*^9, 3.761319752627117*^9}, {
   3.761488483658651*^9, 3.761488492389369*^9}, 3.761488604492166*^9, {
   3.761488735459992*^9, 3.7614887830413995`*^9}, {3.7614888656891336`*^9, 
   3.7614888892512436`*^9}, {3.761489767752776*^9, 3.761489781462866*^9}, {
   3.7614898327005415`*^9, 3.761489861506132*^9}, {3.7614899340350633`*^9, 
   3.761489939684507*^9}, {3.761490043424137*^9, 3.761490052364056*^9}, {
   3.7614909134879985`*^9, 3.761490916137181*^9}, {3.7614909917844505`*^9, 
   3.7614910079565516`*^9}, {3.7614914521162395`*^9, 
   3.7614914688133087`*^9}, {3.761491583764248*^9, 3.7614915883449945`*^9}, {
   3.7614917948608294`*^9, 3.761491804100845*^9}, {3.7614918394771338`*^9, 
   3.761491865830454*^9}, {3.761492193459685*^9, 3.761492206241184*^9}, 
   3.7614958624833565`*^9, {3.761496018089308*^9, 3.7614960983524113`*^9}, {
   3.7614964192826643`*^9, 3.761496451702784*^9}, {3.7614965566379104`*^9, 
   3.7614965640075827`*^9}, {3.7614966591098547`*^9, 
   3.7614966862427216`*^9}, {3.761496818211677*^9, 3.761496822370574*^9}, {
   3.761497831126195*^9, 3.761497833029591*^9}, {3.7614982337499623`*^9, 
   3.7614982374963093`*^9}, {3.76149831154078*^9, 3.761498320570985*^9}, {
   3.7614983619811316`*^9, 3.761498368762437*^9}, {3.7614984889284954`*^9, 
   3.761498511514776*^9}, {3.76149863499238*^9, 3.761498648022817*^9}, {
   3.761566471718782*^9, 3.7615665178789024`*^9}, 3.7615666098080373`*^9, {
   3.761566688168392*^9, 3.761566698791378*^9}, {3.7615667830210295`*^9, 
   3.761566785427495*^9}, {3.7615672634535885`*^9, 3.7615673195758142`*^9}, {
   3.7615673598146305`*^9, 3.761567400719414*^9}, 3.761567486975661*^9, {
   3.7615675789099073`*^9, 3.761567608161683*^9}, {3.7615676888259726`*^9, 
   3.7615677012230854`*^9}, {3.7615678141681004`*^9, 
   3.7615678431653433`*^9}, {3.7615679059026833`*^9, 3.761567954113883*^9}, {
   3.761568150182979*^9, 3.761568154527174*^9}, {3.761568348934163*^9, 
   3.7615683876690426`*^9}, {3.761568428655776*^9, 3.761568429246192*^9}, 
   3.7615684749570284`*^9, {3.7615685338677635`*^9, 3.761568553780421*^9}, {
   3.7615685982926908`*^9, 3.7615686836699634`*^9}, {3.7615687194239864`*^9, 
   3.761568757894896*^9}, {3.761568845227644*^9, 3.7615688455916677`*^9}, {
   3.7615689041594915`*^9, 3.7615690302967296`*^9}, {3.7617762128447747`*^9, 
   3.7617762133850894`*^9}, {3.761776303892296*^9, 3.761776350930961*^9}, {
   3.7617765028792114`*^9, 3.7617765441551437`*^9}, {3.7617765915331306`*^9, 
   3.761776678755672*^9}, {3.7618384359215603`*^9, 3.761838437502389*^9}, {
   3.7618385600051994`*^9, 3.761838563151613*^9}, 3.7618391837888746`*^9, {
   3.7618393998972416`*^9, 3.761839406591798*^9}, {3.761839455203106*^9, 
   3.7618394998549304`*^9}, {3.761839625944219*^9, 3.761839676388794*^9}, {
   3.761839716282501*^9, 3.761839717250905*^9}, {3.7618397501190295`*^9, 
   3.7618397513128705`*^9}, {3.761839919079262*^9, 3.761839923629141*^9}, {
   3.761839988281865*^9, 3.761840017834416*^9}, {3.761840077342952*^9, 
   3.761840087564396*^9}, {3.7618401487273083`*^9, 3.761840155399679*^9}, {
   3.761840275395416*^9, 3.7618402953999987`*^9}, {3.761840390764683*^9, 
   3.7618404746357093`*^9}, {3.761840518629179*^9, 3.7618405317061043`*^9}, {
   3.7618405760063195`*^9, 3.7618405797686605`*^9}, {3.7618406113090167`*^9, 
   3.7618406157405972`*^9}, {3.7618414588957815`*^9, 3.761841486056322*^9}, {
   3.7618415313118114`*^9, 3.76184153136065*^9}, 3.761841571692608*^9, {
   3.761841676349825*^9, 3.761841705431568*^9}, {3.7618418144986734`*^9, 
   3.761841837657113*^9}, {3.7618421062446675`*^9, 3.761842109602171*^9}, {
   3.7618421534952145`*^9, 3.7618421824679294`*^9}, {3.761842325491337*^9, 
   3.76184232879914*^9}, {3.761842367399472*^9, 3.76184239795043*^9}, {
   3.761842632960408*^9, 3.761842633302494*^9}, {3.7618427572870455`*^9, 
   3.7618427857058463`*^9}, {3.7618430221946216`*^9, 
   3.7618430788291545`*^9}, {3.761843178919182*^9, 3.7618432057360163`*^9}, {
   3.761843248814437*^9, 3.761843300868615*^9}, 3.761844249763647*^9, 
   3.761844531062317*^9, {3.7618448097066126`*^9, 3.7618448157919226`*^9}, 
   3.7618449017759376`*^9, {3.761844993804389*^9, 3.761845001259095*^9}, {
   3.761845303972525*^9, 3.7618453409857087`*^9}, {3.7618453754023476`*^9, 
   3.7618454045058002`*^9}, {3.7618454440742183`*^9, 
   3.7618454592280273`*^9}, {3.761845581817724*^9, 3.7618455876944456`*^9}, {
   3.7618456328708334`*^9, 3.761845636130163*^9}, {3.7618478421491933`*^9, 
   3.7618478466638184`*^9}, {3.7618479107097473`*^9, 
   3.7618479969349594`*^9}, {3.7618483183139567`*^9, 
   3.7618483831724367`*^9}, {3.761848536024787*^9, 3.76184854165259*^9}, {
   3.7619154810206013`*^9, 3.7619155165714827`*^9}, {3.7619155663735857`*^9, 
   3.761915594964961*^9}, {3.761915647121399*^9, 3.7619156500030255`*^9}, 
   3.761915892151801*^9, {3.761940911542486*^9, 3.7619409151574707`*^9}, {
   3.7619410189874496`*^9, 3.761941183142308*^9}, {3.7619412235391407`*^9, 
   3.761941223747549*^9}, {3.7619413495166216`*^9, 3.7619413684979343`*^9}, {
   3.761941403573279*^9, 3.76194147232329*^9}, {3.761941523516047*^9, 
   3.7619415504921727`*^9}, {3.7619416009073706`*^9, 
   3.7619416288133535`*^9}, {3.7619416650882826`*^9, 
   3.7619416752323523`*^9}, {3.7619417193018703`*^9, 3.76194173589217*^9}, {
   3.761941832109049*^9, 3.761941843200484*^9}, {3.7619418948113427`*^9, 
   3.761941903821105*^9}, {3.761941973956043*^9, 3.7619419776394806`*^9}, {
   3.761942021003428*^9, 3.7619421197535343`*^9}, {3.7619421614728236`*^9, 
   3.7619422557232804`*^9}, {3.7619422960604315`*^9, 3.761942296396527*^9}, {
   3.761942329992264*^9, 3.761942368973976*^9}, {3.761945096161311*^9, 
   3.761945104424889*^9}, {3.7619451431608696`*^9, 3.7619453037649474`*^9}, {
   3.7619454089189663`*^9, 3.7619454986157155`*^9}, {3.7619456350381007`*^9, 
   3.7619456624852824`*^9}, {3.7619460652721615`*^9, 3.7619461570352106`*^9}, 
   3.761946211676131*^9, {3.7619462507597504`*^9, 3.7619462745582743`*^9}, 
   3.761946536196935*^9, {3.7619465973231487`*^9, 3.7619465979473414`*^9}, {
   3.76203134297762*^9, 3.7620313789349084`*^9}, {3.762031501578807*^9, 
   3.7620315067299814`*^9}, {3.7620317374713445`*^9, 3.762031764826499*^9}, {
   3.762031809549098*^9, 3.7620318154202776`*^9}, {3.7620318594388695`*^9, 
   3.7620318682954545`*^9}, {3.762031920460724*^9, 3.762031948843961*^9}, {
   3.7620320099065695`*^9, 3.7620320128934703`*^9}, {3.7620324734473486`*^9, 
   3.762032473709648*^9}, 3.762032511449171*^9, {3.762032542363635*^9, 
   3.7620325468902225`*^9}, {3.7620326768211346`*^9, 3.7620326775462*^9}, {
   3.7620327898767138`*^9, 3.7620327902906046`*^9}, {3.762032983227151*^9, 
   3.76203300462891*^9}, 3.7620359683886595`*^9, {3.7628142454582872`*^9, 
   3.7628142563490276`*^9}, {3.762814381558861*^9, 3.7628144153353033`*^9}, {
   3.7628164880129795`*^9, 3.7628164912737684`*^9}, 3.7632025182915583`*^9, {
   3.763297358310047*^9, 3.7632973592350855`*^9}, {3.7633340177969284`*^9, 
   3.763334033278937*^9}, {3.7633345247713027`*^9, 3.7633345395784645`*^9}, {
   3.7633346314160724`*^9, 3.7633346378709908`*^9}, {3.7633353777482815`*^9, 
   3.7633353902769003`*^9}, {3.763838382663605*^9, 3.7638383833815145`*^9}, {
   3.763838694971041*^9, 3.763838719597167*^9}, {3.7638395224163523`*^9, 
   3.763839523468011*^9}, {3.763902197276475*^9, 3.763902229478753*^9}, {
   3.7639026003689303`*^9, 3.7639026054991713`*^9}, {3.763902639235998*^9, 
   3.76390264582694*^9}, {3.7639026966018457`*^9, 3.7639027114477177`*^9}, {
   3.7639027485569253`*^9, 3.7639027875219297`*^9}, {3.763902840722458*^9, 
   3.7639029654102483`*^9}, {3.7639030422557116`*^9, 3.763903044421113*^9}, {
   3.7639030896638484`*^9, 3.763903089850664*^9}, {3.7639034432084856`*^9, 
   3.763903444066371*^9}, {3.763903822776678*^9, 3.76390382294028*^9}, {
   3.764166563263245*^9, 3.7641666232918825`*^9}, {3.7643347607482166`*^9, 
   3.764334784797673*^9}, {3.764335387451208*^9, 3.7643353904401875`*^9}, {
   3.7643357475381594`*^9, 
   3.7643357494259963`*^9}},ExpressionUUID->"e617e23e-041d-4206-acc1-\
d548565b4fc3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxsvVmPJFuWnUdIL3rUX9BfEKvuzYzB59l8Mp/nIdxjjoycM+9QXdXV1VMV
m2x1i02Qotgk9KIBEAURepIgQHrgbxCgV/0RfWsvC79XhJAnDRbm5ubmZ6+z
9tr77GP+n129Hdz8R//gH/yDj/8Jm8H+a/HDh/33w/+UP8bPH+9vn6+PzedP
17fXH15d/ccc/HfZf+0XX53Tcq/O8q/PL755VT67rF7kq2eF8qtc/aJQuyzR
BvVOu1ht5PLtUrlfqfXK1UGtMe/0knyxUyx3S6W0Wh1W6v1CeVppDPLlYbky
rTc23e4ySSa12mE43PX7i1Zr1W7T9r3e9XB4Ox6/na/Wrfai3ly1O/vBeNsb
LJJu8zJf4jZeXai9Piu9Piu+es2N1XPF0usLbo9t8fySI9x29fXlqNRtnVXq
5/naeT7/i1eFX76+/MW3hW9f0Spn5618mePFb86qZzkuyKucw8nV1+f1y1zl
9SXfixMa+VL+F2fFby5yvzwrfHtx/svXOU4+u2iWq2xrl4Vho70dzTiT2+BS
nVItOqpY5ENfX3Jy8dUl+5xcOc8Vvj2rnBf80qkVznI68xcXhW9yuW9znMkV
it/m9cZvLpJCpXyZ53v55Fxck51qno/QB3FBWiNfYb/0mrfnShcFTihfFmnV
fLn8usifrWqziNWK1Uq+zA3w3tJ5qfSqUMmVOJ/GqwUd172x5ZpJqc41y2f5
eqHOyeWLMo2vbCTkfvkq/81rOorWqzQEifM8X3/WGS77E44kxVKnXOmWKgZD
Wq2DDRqo6BSLg3JtUKoCie55flKrj6s18AASaMADMFwNBvs0BSfHwUCoGA5+
e7h+v1ruxsPr8WzbHlylU4AxqFQqr85K35xhQVAh251fgA3uEBhwq6DXGGaf
1r6sNM/y3BV3UqcDzzHQa84vn50Dg8qrCzBQ+vacL8XX4bIgpHFR4EwA07gs
cryZKwXksOYFLf/N+eW35/QYn4KlShc5PgVbg8ZOpT5u97gT3sL5lbNS8ayI
gehSupf3yhCvznnJJrNlwzr5wusCZxZeF8/+88vLbwJI3+ZBiD93PZpXcgJS
Zrt4Czth8SJWY2zWc+VWsYYRjUAsLqPHyVyZmznZHVDlz3L1Uq1WKmPoQq6c
DxT5VSBUPS/rZrjzyyKXNYbTVgoeDAw6BDzwlfXFvz2no8Btp1jlixe/fcUR
rJMUahykGwHJsNkaNxMYgwYw4I0kn++Vy3DFsFwbVxu9fAl4rDvdTbcHBtad
zq6f7tPB3Wy+7fXf7fZ34+khTa+H6V89vfmy2dzOZ9f98d1wcT9fccKoVmvl
CnwuQ5K7ql5g+nNGfeEXr0CmhvyZcFsM+2IgXgKl7Vyuc5nrFyu1Cyx4EUC6
4CKTVreF0c/z5W/P2Qo2Z7kGhv72tXYCFewwNDwGsS99Diqi0y7c83QRTTTF
Gy8BAEDNQafr4XLem/IWzIpRkmLTg47raPBeFk8sAQZ4r2B2Xntz/Fx8XRFI
XhcC5GqXoqaMATyEDYA6hihgozJ3BTA4zgke+KBFN5Mr8UHik/hEw0k7wQml
XD7D2Mu7gDHNqHh5r0DF2/XnRVl3dVG+/JaRxQB5DTbAeTNfoGM1SIHWq9fs
YwvwAEj6tXq3XMeJMDABwzTpDOtNLAhv0OAKgDGpNcEG23mSXI1G2zS9mUxB
yKE/2HV6+26fHVBxPRjtut3HweR+OHmarm4HU4ABeNa93qjawGpyB9+8fv0P
f8kWQs7/8htujAYP4BrkSi7hwHMasMEdgEb8V+s8h5vjnjmIU8Di5eCKcbMD
zmtnF1yZ1i6U8FN8QZqxAbpsTTrfQ75TT/gI2dEu9SJvUnXjXaACZq5fVs3t
GHE32TQLVY3lMA0NdNWwBq7wssiWq1XPK+1ir3xREbGfl/i4RqmG+cT5YSMb
q1dp+U/ugY/GcQAMOYKzko9rvOeLgVJ5kBNU2NK4iJEAKrjCot7h5ILcX7lk
5ARjcCZbgEc7sZPu6qwIKgADXzkpVTUSg7TZVl7n1auvzzAQkGgVit1Kla1a
rgBdQxTQBQgxSLDmpN5ad1MMNK23FkgIHEe3C0tg7mM6vJ/M2IIKmnZ66a4/
fL/a/92v//Tz7vpxtuA0sMR45/q1GL8MScMVVNRzogUcRDm8Q+7Vq1qhIDfB
HZ7l0lIVSGBrUEHjK0h+QOb4jlcXQCIY45Irs228voBexkkbVAAJWnBF3kSB
B8GU8Dl9TrOeMV0wJLklowIkMHjtO+RNYivOP8t79J2w4dEqDXCWx/vjNfKv
8vQ8+4xZDvLSsDto11piiXyZ87vVVjiUS9+DvH+h8eH2be28bCp4AUbZxq0H
qHRmriAhVKjQ7EropU/bG7BRzgXVBPCEQ33Hkps+N0DFZWu88rogphVR5+0+
wADWp6u75eZmONXQO89batKQFmm9QZfCEvgRsMG4gyhARa8gJ7Js98AGCEnL
5VlL2MCPPM2XQILtqpnAGFcwRi+9HY6hDjTntt0FGx/WV9eDCcoTQZJcXnby
efH8K5EY9zPttC//4S8Y7G93B0BoFYqbACQQGmzQLcmdgQpAKylyds4b3fhe
o0YbVCBXOKddkA7h4nwX+Y7zvClFTkGcULRHsKJwg5FOBjJv0LrVBvzAKPYb
6XCxTehzD96fiwSDRBA6K42TYbuU0PPyWa8KP9elJgp5h4viCxVY2ORHSX8/
2YAKYabehWGMBzODnUitwEfnYxt+4cVx+MYywXlZHvcnlctKplFPYjV2OG6u
YCTqS714aoaPdEW5Mkl6ktyXOYgCeaYOzxXo8yRfNlEABqsLXEknJ2Cwf5wt
po2kVywy6jfEHe02DAA53AzHeA12sPuu3QUVgOHz4fA4n0qI9lIY49P+GpxY
qfahpnxJIgG0X1zCFZDD5S9+qcjiXGKDvmJQSA6dSYFAF00UUV48FvSOLzjH
9UQ4IHSBCgIW8LPujuetXuucb1T0mYKEBvJlCAYZlyiGP80S0L7FLY1PVAzy
4lCs03iXxapDEl3kZQBqwJ5nUKHDOd+N46KO16CieEKOyZyXbO6wY8HCBkNz
BRCIe9JwNhWcG7ca4OEL5G5CaRROgqEULxVxpmF34a1Qmw5mjVwtg4HFRtxk
NVcFD9wndMEnAnv6kK8zqCf0knuSb4o54AdQAQMbAKjNQa3VK0tkQhccGTVa
abXZK1QnrfaylwIYvMa4XgcPk0aDtmglm6QDBsQSvZR27A+gC3CC/sSVEKje
DIa36QgmWbQ6tFkjQa/iSmzciOCkebALSsOO3v69GOqRO9SQD9PTiKml0l9p
gGNQ9gWeiK3gjXGtMyi3oItmSE3eKHfwWlaWz+IcBQVnP1Hoa4WohoQFOefU
YzhjX285jtWqpvezLDTwKM5o+VIePGQw2iAzOp2P+GlWGrZXKSSiww3jqipv
gg4sEiDb4tp5oX0MVy+WbdlAQqGcl5DwG08eoRioQ7cYTtYVmP502svVKoZE
wr/LSuHs7PyX38K07l5Ju9fn3IwCt3wJsQHTGhJQN4IThNBwFuCBI4tunzau
NXEcu8HgOJut+oN5qzOq1KGL43iG1FwmhKVD8AAVrFttEHLV7xOcXo/Hz6vV
7XB0M0if57MfjjecQ2SKMpk12ylxtIj30iSPlZFAeQLPc25Plsq4ImwUQUHu
xBJyHCGhJe+/PQ9OzpsTat9edPPKb0hpXBQMDGPGDkUNI76kCOw7TB3mEwse
awna6UxLiwhpLzIGuMxFFiLzLw4iRDX5YlIlvsAoBdQ7UYZUJY6+UKRVC6Z3
jFjiT0wgdZ0v4DWUr8grfDipApO/QWIYlF+IQifkJS91JJrlh3UIV5DOvKzW
C/UXBBbAA4yhsPobqU0xw7n6ja8MIFsVwqIqB8EJDZ+CB8G/IyrS4Aog4XSW
6QIjLpLuDH8xGm0iGYX74OD1ZH41UHAxb7Z2nfRhunyary04b0ajp8WC9jid
HfspOCFcnVUjhCnX4YpJvS3OzxXb5Vq30XLyClQACYDhZILigshN0dWOKcpK
KJ3jFu0+BCQhSpEFL4kWfnnWvizZg7TCOUIycpFBOI5KIE9HHLL+hePWvKnj
RUX8f1CBxV9Io2Bmzgg8pIjCmbNMsXAOY40L8hE0roPoXQ7GGukvLt4RotIU
0fjcd8c7+rxxWT5d3B5EYz9IyT4la2F6hRt+qVgV3gIeXLxZ/skHZR+Uq77E
O5KaBgZ9ztdXyiK4kXseNNtitkKZl8AG3YXadHzKDqigDevJKfpAds476e1s
idRctXuH4QRteej1N61k1eys2h0ggeacN9ubpEeDMeAE3Mr3t7dwBe7j2O0D
DLSEAsyikh6gon1ZCG6XpwCoyEsJv3MoQjGIhnCYyfzA3dLDoFfAOLvMuCJU
YiQnS51KEzdR+vbyj99/WbbTxmvpEBgDPFiTmHMckog3LvLWFYZBq1ghLjAS
GLDObwgSZ2pc2cEItrBlHeuJzYiF8xUi1l4tURyqGLMYmkRBDf2cdXUEIPXg
+ZOD6LfaPoE+mVWT5kW58hJOnraWnY44eDt/WjFCAhIPF2VzAsfZOmYBGMNO
6psM+JVPULSoEE6U86wyrJCaAMM3TD+M271FOuKlUbPTLdedxWIrSDTa06R3
UpuzNizRR2QuE+LQEaHo+9Xy94+P3283q1YL94G0ABgABmDIszSV8Fx2OmDj
YTZ7XiyfJjMYY1SpDop16F2i4iKH2gSQlW9zyjzk2Basyav5bMBGekGxp/v5
RS7mshDSoWXIAxsRvUGzLgr9LCa01zAlGoRKdV6ULDPsm8J9ZEIR6wcqSvYI
nEljFGdTA81uCABFf0HXyjX5JQsGdy8wMGNwBMBgslalwfZlCBdCXioH0syF
TS8Kf/Hhx7SSlAMMmNWmtDRlKzDETrPUxCOgcIbNtJmvn6jAVz7FGo1iw2jx
232CxMalriBcvVa3O+MNNnq1JnfFbfvOaYYHvNGH3utJr9SkV0EFapNIBKKg
EYagNlcdYeM4mfz66eGh37vt9fZpuu31p/UGkYWcQq2JmGR/0+2u9VIPqXkc
DJZJMqvVkBzLRpsId5Yv/8Xdm0WtwT0YCfgv/C83c+Jz++hTCOCUi0MDqeVc
wTxvqLBV+lEZmHz1VT7zHQrD1QwGwyPy/FmGOWaCSoacxYY/NCBxebK1ScP7
JQ3YEAn5Mo6jUQoTXxYigM1uD5xkiqLWEiTyFRtIxs1XQALY43grXzXJ6NVc
uZOrQndp0jMqaAaDzapzzAY5DX/i39Vg0S61GPhKX79YX8okTjMh1MKzZPI1
HActuWzXX7ekMy+I0F+SeHHP8UWEB7iCnU6lToMouqVaO19T0FFWCouIw1kL
UEHQMW02d/0hnAA/YGjkxLY34AgeAbUASyya8i9gY9Zo7rrdbdq/CkgoK86f
SYczeTW9zD9O58jOdrkiThAwLpWICNa1bhy303l/jK2tN2jcvweg+EGZn5xZ
wgQSeXLN+iV88ZxGX+McfqjVL4h0ZHQn0kNyVywO591Ju9g02HzEKuLnXGE5
Yc+iBLWiTgWJLwyvUS8w+05ypzS1tCiokN7LFVfDSWQR67RuOUlr3VZeKsIg
MdXrpUZbaClmlFJ/CStooIVXT9oA3wFdJMWmbQ0wgGhSbfpSEAV8QrMIEWAM
knyNMOS6+/gXb/8aEsDiHlmnbucgN8DWR/Dp4oqKnP71ZD1vD0EF4hMnQjQK
JJa9Idpyq8kvQoz+ppsCEnzE7Wh2O11YJ4wisvh4uJnWW7DHNmmvuh2QsCnW
1vUWUpP9dac/QG3WW9VIStQjYUtAV7tUKpvudbwMKsI1yNaEGHSIDBHWt32d
jTQY/Oew1Ylw9TIwUIQEAAn9f7s6+joOLn5u606pgWliojY7aOuzI24vKCyl
lxyfGiejpMsHBc1qmCuoLJTRJGbdXjNxZKHgIgQhpyFXsLiRNuuNho3+ojft
lFrxEVXDQJ9SxBwNTqOxow/9WVx52s88S77Wr3WVjQ+ngMw4Acm0YFRwJtSh
CbLL6qI/0/lQaL4/bK3Xw5H77UQX9n0WzHyjVpHPAicVUDGpJqvOaJYMOqUa
qCD68OQpngUCIUTd9ofrbkpb4SM6nZvJ5G62BAPQCJAggO3lS/CGj4Ccx1b6
r9//+uNoIflRb86IaMrNXq7iiEBEkVPOBJDAFXZqTWK0XGb6EJxFvpoiwdc5
j3oLVGkD+QLHCxfGjINHj3r1eb4O2UZuMO8cyCmEVAwY+PGfRsUpusR8RBCh
SMu2XVKowTM4WblgyZ5ivFS2PjH3CkjBFWwNG+w7aY+beQ1epAUX54jHo84J
KlB+QE6EPzXSPWtG43z8CN/dJGDZYLuzz2kCTzgLUcHP9AN/8nF89yxmuai8
PT4N6j0YJrirzBFu0oE/8Z2qETLCVHFFM5yvpsZsjssiUnDe6gEPGJgtyo2o
pF+rwxgEIMEbySSU5DxJEJnjau1+uVQYkiTDanXo7FatPsX7VCoEJm+74//l
r/7uWWmNDtKU43iQTk4ZVEfEIdRBab5XraF72+fV3evu6ixRrlJ8kn8JG2Vr
BYBnijQxkCsBuM/W63xLYBB+gIoTXFEzkMfoBkzgJGCTK5ymrU+uxxxyylnx
auki0zOnXBZWYASFJMNwFec/AzBlT3o2Slwz7z8VcmqslTGu4whPq5kNbFDn
i+L8qimCKAYY8Cqali1/4he4CPCwi/HbuWDaSrG7c6HGCd7qlDvNKCX3Aphc
9e7qhkv5OGgBHlZE9BLdOMD7RDwibAce0rA70OWbdghLS/VBudEuVK7nayAx
aXWJR3gXeDhM5whOIAEwZq2Wp8aQmkgIUAEkRrXauF6nOSrBoSAv950ugeqi
nsxrrXmtMcgXx0iXi3wnV+ZTpGQIf4p0TtEurPdt9f/8u3/7Lz/9vvlLhZMx
cmU4VzWIN4BB8IyTllzkT95/5WpCy3nB0oIWxKi5sEgUiDqK32YEElFDFimc
kttWth7LLn1xtsT48Tams5VhoEtNDlwkyFa00CBUvFSBBJ8YalNvUcVL0LjB
YGygKmnKCQSErD/5xElngJriBnA6hoo1p0IP9GfEMhaimFiC5FwmNio8MQo2
IBZrVGtLxyyWH1lqCzgVG0rk5gqRGT63L7ZmU5oC+jovLfuT9WAGQxJ3TOrt
QbXdLTagSqLRRXcAJKw8URfzTg9UuBkYMAMAgDqABOQANhSPNOr9UnFULS1x
K63mJGlOAEypMixXdp20e55PcyVCVD6LK9fPNSWH16hf5sBn67w0u2wPLhrO
LdiJOCsuhLzOO+R0fYj+PC/1CvX9YL7ojTXeL0oj+uY8mzp3PkE5jW8vDvOr
7XgdqSHJReurMEfenGBF4dIX8ZIzioEfbYvlU1zJvh2B5ETJGYmQH+CtVLb7
sJNqlqsOEDyuT1zBvhESFFQzYOx0fAKw0ckRzAKDSX9ExJEFMqWar9AqNMwY
fJY16ikSsfUNCTBAa5VbbNvVNo3jmnX69rUTyFl5z2sxMCMOGtfMQr7aryZK
ZJXrij5KzUG902PYVhrzTjoBKq020gKJiGzA+qOGivc2g8H1dAo2FFOU0R5V
zaI2mtN6PS2X2sV8WiyyM6xW+oUCIBFOKpXeRW7V7Izgw/Nc+7yIuNVMaAgJ
zcgENhKCwfMLopLSq9fB9oVQEQXPgmWQiGSU0x31syJI5luoCiJfvRqv4Arl
QM5zL+VMoSGhzWLDqWYGu+WrE1Z2UhaHYU0F8i/STpRiAWlyjlFZtimDDeRQ
wsrihHrEhu1ao19vtSo1j27eZXMzkBnmHvgmDQPDcvSkPMGDGcPSgnc5qjVC
NJN7WSW26pQTmT5kT4aEYAyrCxOF01anqARsQC+0/OvX+fOzwsW5Rw1QVyQV
lUv0LaQNFSdB5u2o0QIh/tO6AtkZCfA2HmGRdK9GIyQETgQJIT3ZQp32k4t8
H6Ko1ycAptkcVMq9SgmQjJr1edKSN6lUB4XCqFCclKubpDPIl4lZurkiAkP1
PI0mytbz3d2YmIM9iq9eY3eCU+e6lX8Ll+F0ZTNKAjgBSBBKty4lHSHwqNJ0
eiEb4x7azg/HLFXu1OwC7CBegFE8zaR7gDu4CPtmkAj1K7WW5Rwu5QUwFnHu
uDXAZYc4LHbqTUnHQsOWchrBJM9+v94GEieWOJEGOwShVpsWnAbGSVtq7Odq
N4vjcbrHg3CEAM0xrJMVFqigAk7gTG6ApqRWYINGPAvtaFrh8uLi1bfKJF9m
pKreiK4WGIqqxoEZLP8QG7RFbwhRgAoLTjjEgeemrxK7cbM5lneQxV1FM6jV
uoVCr1js5PPwQ8YSpeI8aSyTZJnvvO/cbkuTtFDDj3Quc2x5o1Gh0ql8oXZ2
4fk7S1AIrRFzW4xolX+8VGDGfHoZoFpwCiTEZa8LgQolrAIAOctpFWLlNfNI
z3vKw8mESDhkMDD5n0jD0tHzGk5fW4GE3ynbvq5wUHQga1aU6qk262WB5+QR
zC1+C5YVXYQkcAR68iBuHLHL0PHyT27FkNCRAuwh/YlNiWgW3dmyNyfSNHuo
zC8oxS4m0yF5vUvC41KyE5YQV3Ck1BSH5HLKIeeQ3znTqasI2qWyay1UbgHG
ciULP3pG8+l15GIL1w8e3lzdDRtd4DFvdfbDIVwBBmAG4IGKUP1erpiWqv1S
qZ3LzUOLDqMqeFiooChQF9vc8H/9m//tN7vf4DjSIqErsCl3lf9XjS6iJXwH
d/UybfGiJ2uXESMELXgLmyVRpqubR1FHAhNR1CUwf3VxSsh4jJsB7Pet7jii
hNhlJjKTYGaHn5GkKhoVPmKowAxutrL285VpMl4PV1YO8gXFRBMTGqrVwIn0
ZPBDViBn3WgpyJV34/Uo6fN2MwZR8Ik9DIMMMNWmnE45wbjGDM2ZCpFSUQ7I
fk3IqTRO9XiOT3mXzoEcqu2kkijXGkzCmVAETqRehDzDWQcqFHQUih6bAIBI
JJsKiViAPqeTQcUi6a/7U+RoWhMqXIVFlIG/GEVxBa5BU6tRpoXytOAkMl3U
m5NGddUkdG1IkVa748vOON8e5AqggohVxFIog6UTV8hApYrmTyvVSHAVHbhF
IF80XbSjEs+oUG7wvCT3EX8msQRA0eJlUZOnChvLFpNCyKVyVs4wcEFGd0yC
SFNhiLTRMQwcjDgLbX+NWXVXNc5oOtOoIxe1eWOx6q4J/Hm1mav1872Poy/T
4qSF+WrCBlZ2KkwYC8GZaRKkSKExbQ1xNxYSjnkzhRmGixJfUYoRAgywLCNd
kKi3Z72RjWs2sOM4iUynMqQ9QkvYfQAt046vTLv4RmVOxfNzIGH3EWUeZSWv
IrvYyBdO0qKjGEpJjJhDb0AUhBvsb9Llr979OslVXWnjIJTtrJGwBQZRYdXQ
6oBKBa54s1zu+ikHCVrBQL9QHJTQEuWu2OACMEAU5gou7mJRVfNK+kobOADx
tAXMz13pOM4uJAS3wVYOPRcp+oKqKSyKOG1wVv+a3kzzHemBolSiIsfQe1KS
gkdt0umHqMBANcs8OxEb8SWBUHJz2O4oUhdBzr0u/qOv/8XN9MHCErJaVbf/
/e//3VVyjQ5MqjBDFlCcIhf+JI6wunC2s12UlXEKx/m6HcaSvAxpwUH2zTCW
IlK2kKRyaAlniovKiWMKWbzcCniUGpxfUHCU1NoKYMsJEgJW6be6tPJFWVAJ
MokYRKICD5KVvWUFihkk2PFQhTGsK+CNSGk2EZnDelPVOMXGsNZT7Q0AqCaL
Zg+NMW+2PCnmFLdC1KStfEWnM69pvoyQhCN+ad3pggoOJvl8J3SmUBGlPkCi
V2VYFZ1Vsx4wA7jGxjOeUYguMGiAg41CrR3eBHJoxwxOK04bnzf+xz/8/eNw
jxBVkJWv0v+BtJImKLOtXWftNEVlOcfAD46qRMYgS+5B7zFBUA4fVHUYmJb7
7UJmRDDTznX23avWhVwAF+FMPrRXaYUgqXiEKskQM6fWlictQZQHd2n24UVy
2JWwNSSEh6IGO0ckLRy2FJtGRbfehccEDFpV/kLfq1ix8tRpkb4wpRgVmpdX
sH9eOb8AHggMa29lXGP2AUh0KlVIG5lBwzqdciWiVJXkWW0y/NOY5sCsIOF6
tPjrX//5rN6xuT01hrl3nZ7mT0OFjip1QlREBSHJuKpkBScgJ3r5AnK0XSg0
LnKxKq2iUiUwWcq4XR6k2pAkOM8bGPw566Se5beJCZxjpqMQc+KFRXew7A2T
ALNCGPr/otYttsKatnKUFeUyepHruSzHEhhNZJ+y0IrOJB403XC7OUTIadvV
zRWydZypUqtS1bbmInFCzYVtjilkbvqw1iQ+dS7LXsnpa4PQ8x0WqzToxf7C
Yakx46zmvDeddsYWFQRlOBHth1pANwKGbqPFjpgBJVBpS5GWmpmGiWtmCAmV
YldiVKg+Ngqn2Yc/h61ONVZswbFYhC0Dlghx1ELYFGAJp63gimmjg2aQayg3
GPuYGITMml3aRBTRmjfbkaZoLBstrR9sKRPOkVMTJMrVWbWOoqAhSgMYJRri
1us7mi+TIPSPVaLShuFNwIkLgSJBIeOK9s0YARWiJ+5TMxSVhs7HVTXbhgQI
t2pSpXqphrQAVIaWIWHf8VIFUXGppGWA9SfbcbuHfT2UMJaCPlF6xbKNDzJd
uLyNExjOnpF03nLSGVgkODRQBjv8/otssDrVjlIZRlRAwnp10O4DiVFrwJ8w
GC8hU8U5kZhCQyoFUWr2qh1nvUwmjRCfTnUaGDRi2FNQAyqwe7YE7+zcO/VY
UiEwFPmyeD0kVtEIaeZz5gokpep7i2Ucx7iWjMpNrRJqSD0KD42E4+tu6qQ3
aFFau9K86mleFYrQBFnUXQCJUbE8rdSQpqYLAljoonl5icaox2ypp/hPczRO
I1tgGB6QQJBDNuRdCcO+17tBwsNGm51+1AAoiKs02FGyJdJxnZAf2kZ20ah4
KXUoe+Rm0xwasxrX6vl8lp7KCAcx8CLjtQCzpMyz+AFslOuDZtdWszvgIlHq
Jn1ov+CBf0o+YL5gdUEC1CVVXU3sEVfOfFa1bimS+ZEY7EpohJZIWyl0EXqy
2a10fHtwRafQap+YJLBxSmVkcS6IDopwgzEwfTkW4xgVwAM/wlZ+BPehhUJK
QcPtabU+a/fRFfNW726+2/cn66i6UVFWrAoBIcp7tzvAYNXuTSut3zy8vx1M
j+kQRwMkDAPU5ibpgA0nvZWpgJcqFS9fdVhKDzhqPs34q0+g3Fj2la2CpH9i
ntT1eN1y0yBxVaE5QbTAOK03lUNA02ogaxtJ+4BHjEFIg7fbWP+BqmQrgar0
Uc0Jxqz4pKRR7LRkzFVlk5sA7DSpEUnOqjOW4v98FawOWz3LSL8dQ9sXEPhg
L5DgCk/JhkAF5uNMXA9QUdgbnH8a+N4KOZUERUHTpVrpuDsWdVQZv8un4Q8P
g0/8KczEG53o7jU7J7dSVN7Y7uPCNf/KJJ9rnUU98ABRRCuZwHElkhalcow+
pTdxJfiRTTfV4qBSVZOn7R68gYQ4TsaaC9NsSAeu+P7q7n4ww4+gLV22d/Ij
mi0tV1GhuBKOzxMFLzQJzoomFE6lNUBCleeFSlZp/LIf6bXqqWIqyysGKgDM
tN1HfqgAQJ1c69fodhnLq+x3/eG2r6IROwW7EgdcRoJMEMpBrcpoqsUqIQ1k
79jXL9KJScZZbvujwEDdb+w1E/OA4QdRBK6aWbaq1hAniEwavUZvv9jD6pyg
ZEVdqsAM7xjE4TBbNGQzMCMwRM5cp5WUoqRllFWVlsCtLJKr/+5v/vf3iz+F
QECOREi1afz4NOMEVEAOyt68OgeBAnksv/KclMoq6vrWngTUxGWt3i4Vacv+
5M3+cdpKBzVlJCCHYQUoqmpCeapqdT8c7sdjGT0Wke07veve4Mfru7vRZN/t
R30vsrOKc4E3hoUSXAEk1rG+bKrEuJIboAuJq6mHqExQCjHowtGolEPUG7sK
FxO40FqB5M8gAQngRCAKPAgkwBYwp0nHvp4Tbier43hmnxKz2NVQF9VQAuJq
E4J7IDLY2UtmG4tMlUtV2sJDsTlJhohebJfW2hISxXokoxB+9heSmozKtD2w
TuAcyCHGfvgLEMLgbfSGnWyS9GRuuYmAEEOb+++1ugn8EICRg+D6se+oU9qy
kjRLrV61mxT157A+bF+OuqVJp9blHINT4rOSXdwepKKl/RISdPV2vAZOUAcC
r/5S/nRKAzYCJDiRpFiALuyv+daTVhdvQhs1WrRp5CiuxxM0A0Ne0yJNLUbG
lWyTzuN49mmzv+r2d4PBCRXs4DiABA3SoHFEEyW1bHFB5BhL2ex2FB7UY7LM
oaUGdUjNcB8/pSt5SY5AczdNPIhLTMfNDpo5bSR0vrxJKVvq4kAbdTFu9N5d
v9kMVs2cPtcRqMvdX1p9OZhG6UIZeY+xrA28YsKpNv7sVxNiz3GrP26nzlq3
akpQREza8AW7MfCFikoLha8cZstK2PlMHWQLISi9EHpy0Oj747B+v9UV/4ej
MTB+ciiAqtoRNuwdqh0aqKBxBa1qdNBa69CkMcp1ex8DA9+R/0aPAUE/5L95
nT0t5PyCPsf0p06OeLDAORxk8DpEhZPHre6wnrhjXcYJKrQ2pKHcBRQxrtfN
FbgS9MOhl37cXbFznEwcm1hLKKMVLAEwpDGqNXsQPyujlSGhGLluRZ1CbMyK
wmnOsHnhvGcuPN6BBAM2rNMYNVVGqKcr1BuDcNB8IxDOt4jS01pE2RIYvVJz
M1wu+7N5d7Tsjzzpafy8MEZWRqXMg/Re5UUq1A0MD3Y+PcRJlpkU+chBiNgd
VJ6iCYRo7NfMFcDAwAC6Dpe4IExCQ4RgXGe/AwwyIvxgJnH1po17goGtn9Z7
clvlhJ3Ms1QS8KCItdYxtHyRoKAGhsaJRCSiTHK2Nv8sZ2CYM18KSFT9wiBl
p1cTsXuBIQEIHsQLAVRiEVPqTnLCEuyzFV00FZmCh10/xX1oxkRLABSlKtFR
U+i6YFtvsqNUZ0WzIZoQKVValg3FSghLMYOepNFoexrUIaqjjyzGrydOX6AQ
QiRoVHKrSEreNWmN1ukSW/DVQIvmdLToKVbZ1+oQC6qVwQuWLFN7EURoXFeM
pVPSoJYRToxiV9YZObx90RuH+5Cy1bxYNWlWQ6AyYBvZcWAgL9PoOAEFbNz8
qhIa1aar/owEtpiVO+fkcBkNLnXSAxjU+7qfSrtfE9jEBmFraxhzxbCZghkp
0hcUWbfQjAo/GaaRqx3me0yvx/5ILZdiIiwXAYhnHIqGBJ4FPEw7+KmSquZa
0vbsRN+2saCXkrkhO53lxoNEoa8qrw7DEd4EDrkaDO/nC+evCE5pk1Jl02oj
MEBFv6TZdlV6F0qxHKnu/BUdokmESHFjPj9xRc/hEQBaES1GGW2udMrSy6Yl
TZD1Zd/m3erm4+1HjaOyXoJPnNBQnFJv+C0AgD9pIUXqhpbTI3YiL2yjXEQM
6q4Nx8GId7hgvLeaGRoSiFGf2CP0y+3Oeb1bBHJtICR7VVthmoZ9h9HlT1f0
FFzhxmedIhTJ11rrZFMaDkufUjP/vAQv4W7GvaHlCs2RMgcduWRuKPY1j3Zx
WTg7K54V6aWooj+PYtRLV1Y7LI2HhCjB6PXIUVtLfFrwKiE89SCmzzTuwolA
FzgRtgh7sGFdoYx3o4WbgC5wHBzZ9vrwBgiRu4lElhRFqAtQgdQEGGwhIoBR
P790IhoP4uxBZKUQ+WUXbGNuV/Q5m6EHsISicPIKUOHpNoMJLgMgpbXuKOnj
QQaNJkc0qIMZvDUznLIZ8aexUTNO2jFbYaKwRDnFFIbTsNENYDSNHCDRxhtW
lT+EMYDBujj7F+/+9lf99yBZRU3lhrxDxCae6XBljlrQBa9y8VPTx/1sdHvI
y7LBWievZH0rhxJRJ2+ZDSaOOKxvFeO8vPdEO+wrc3WRQwVFifu5s9yRB7iM
6tPiaULETwtJi5VdOqqfn6fVarsQwKg2Y0FZl34bNuWdI4nRWXX60p9VrVJX
lW9DyU/5jnTgsj1QQfMkiJeugxlQAVfE6kLlyZW4IDyM56gw0pOzwiBX14KO
cCKqhn1dfH/8/Lh517ioGQmRBaq4M80SnhpDT9KIc00L2EKjsqaRSDw17w5s
UEMCR2NIxMFMnDiKMdhM7G5BCxCLBjJDY9TsTZKUI4guXrUwAH6KKOU+wF57
UZz++3/1f/zN3V/CQrp4LXG8aSYMKmj44kaduchEYWCwb0NL7sb0FjCAKOxf
fClhI05wAxvz4RRI9Jt9OdAAw6DdNx5+zjm4D5fn+bkQzk7EpHNGFwpJYkvE
Wn59pm9HqBgIaV7mUYMEAuvBjKGhLq3o8XqAYdEdTPAFmiuvWWOoICeWEzo2
cU2virXaneNoDDyUx2i10RVvFiuOy61UqpqLL1ZiSr1aO8v9ePP2j+8/1s+K
LitVeuGyfrd8czN/XHQXjEFPaUECnhGTy0AlBldIAslknWCDDDMa3dF7JoqT
6Vfp2PAIo2SWErG/OBdD68XRcM12EE5LZWnN3rQ9YJhkXqnWElSSfubZg2TG
1X7vVWtw2Tbk4uJ6O+/y/VhavEBCn84ViGh4adodQh2TzsDD3EGQt3IxcSfi
ASuWMDRnokVNBUpTNPvojZMU8UVORMFWDxaL2jyvhpCiC4ufIGF4SGQWtELH
vFHJ5bxyR4yd19JaukJ6rKrHqY1iIapXHR7TIVbGuDFJmkzRopGg0Bx60nm3
3hoe0IVTWNNy9aqXTvBHEbTyLiCBE0Fwti9Ly0p3Ve1FsbQkaKSmK1m9Talh
eSmdqSn4uls8fKPheX9QATkMQ0WINGp1xXrN7gCsdujwtjWeBnhoy/D4DQ/k
IPnOiYJO7sYSAuMaGypRi32jAjxI3ya9ZXc8bcusyEVbMCgCB6cklb18jKyO
h7kZxhqDGwvctlXdFKIi7lmDPW1JN6IirCc5GKTdNEKMZ73U6v4EoWYfXWHG
MEtAFycy8WmIilqhUC8WURQxNVmM3IUg8XNpcTpYvhR12KGgzVCbmR+vNiBh
e15ho65FQ0piqC6rqVbJlprOm+0vN/doDFDxqNUibYgCt8LWLoOGonBKnCOu
tQAbYoxcEWykkYbyHIfVBS1SE3WnnuCKeL5f3XiI5yNl1rRriFHc8ZDnbtep
FrupOr3dMQNkGjWyBGGIbErLOuHkXEK3tKbtEcGsipwjWMB8jJFQF7LyojOa
NHGmbfpn1hv9XB6EchA88DgAxkRhSrHGMDOwhSg89rEaJpb1HaXWFHUu0/mo
NeCI0aJLtXoEGrz0k0yNuBW7GwNWFFxKx+tdi1L2OUEe5OKims9ja+MBi7uU
2khwcYVhACqITaIM48KORnGKJjTLluLKAziXWK05r3Xa8TMYbVyvGQQks1YL
t+KaPY6gS3lJcx8v0QccAor8dD6OqGCvXPPWS8vd8+Hr6xGD1BylRtGvKtK7
UWysgJQRoQUsbajMDwO06e0QD9M5bZy0PY8WYam8DFvHjOFoNHLn/WEWosaV
UQ5BCL15dyJHENRBW/SGXMoeZN4dTVspzCkCCUnpCzovwRGjSJCoZLqCg9C4
kWN4mAdOcDIPyO/AEtWOp00tKnyasSTMvJxpGAw7qXJf5YYJJGOeRl/sFJjx
aVGuqUIsiMLSoh7AsINw9rsRshMtyhiMGowLi40TkzA8Tz5XSeN4+iJcQQB7
ev4JzSUTTlfShnV8vVSHnpxTbXhGHlR0S6V+peLn5+B0tHK52rBDYcsRoOKp
Fq+Dzux7ig6sB8JfyGVUGp7DnSad7XAMa1nwMHhPXsZTY+PoJXF4WVNXs06W
tbZRnJcWpUdcw7eI+cHupCVrOpMJoriIMnu1DvyAocX5dT66N0sGwQbtU9LS
z3zwCSdxYlSwP+mP4IefvEAtEw+eFjFybHdQoSRGo28Tgw3eKLBZq1g1xXWs
IjgY8VfmZZQca6aOcRzaAEg8iKt5sbXdhNdf1F7y3j9Ni+hpPGWDB49jbvEk
O1sRBWCI+hxGn5954ql2OtA5B/b1xNRsX9Z3qkpriIIQiEPTaFpPFHPx6BA0
qqu8LEj87Kxl0iX4HZQb9iaAwfko48HMQJPojWpSrUoYToiMxpHknERK1vpn
3h4ep5vQCdIYuAPi1n61sx0tFFzIrWdRXnSj/AsXOc4WfjqxPk6WtZZoS1jW
uzSEBDCw5NDxeteYscyw3kAwCCFxXPrkhRnYXw7Gtqybk5mMbkhgkU4yBqj3
QAVNkAhUYG7TBa+e3u5FZ4YH3wIvxhVOnKNW751QZKUBJDAxXMFOE5auN0CF
HnhbLEG2RkUtAhCVY8U8iDNaRkUzplDdXK+lhEC++PJgZ+Wro/yyrEfwxSNb
8SO8BBsIGFoiVHK9VqgOVWgQtLKNso0mHscz8tOo2oIooowncT3PuJYsEi1h
wzRmKj+HB6NjODOJVjC1lFKDuxjaERx1daTdzVRxK133p2Z+7LjszwbVLg3m
xxYMapos5QyS445aa9Uf9KNII/JgiYNTRbvl5n605IK0m+UeSMA5ik2aPUNC
eGgiRcQbzmmPkq5nxn8yU0QQmXqMUWzj4vez4DTkBNv1cGlRsRxMf/72kyiV
wIjkyQkk5pkTKnQ88qV+CeBBKVHXrepu6AJUdDVBWXDxVRIZTj1Dr1TzFGoz
FgInesBIwSzRjamEXsxN9yMNbqKw928XCnraXrWqlSBlXSGe+w1gVKThJ/q2
L7Ny7kF4CthA8yNBFHIc1RdI1BWMzM0SrQ6o8DNSZvXOqNpi+NPJflITttaz
dxQBiTH8KE4/eoXGS5vByHlXtqoDgVEZQU0N8H65lVY66/4c/reSVypSc1Wt
6EAtmtuN50BiEPBLs9RH02kKewFQgcLEidCywCHCT1Ax66ScOe/1M0cTkBvj
DWPH9spkgGLnGO9Jzxzy82RFpiTDcUhRJIjdqR2H7Wt+kFxp9SxaxGYvrsQX
4YQsnIkZN3a4iM/Rw4VKJUsFz39lmsH8EM+RVvY11EIrKrJMEc52Or4DCah3
P+fEmgFUjEMqqOZfgWcHCWEk4EFaBc94ypsACS8NMCpUuOUn8qUjdjjezuW8
iECPOGgk624KGDbdFHisW91FvbPvTzZo+0hCepYcNgAVpgLX8faD9vUIr1a6
6gwWzd7NZL7rD9ed/ipJ543upjOc0cllFEivX27boC6qyXx9WIQR/RP/Q0ov
+/6Tzp+2B2klsa4YN2QO+IeDdnCcDxi0DBOl0UlpRMTTLtbRNO4pT8W7vn94
T2AiK7f7p4Hv8OTkJkwFJ8ehhEabCw5MCzoYiTWuBjAE2niLwXPSHjqtoX2/
lz/n/bFhMNTkctMzXyYB1zRWznPXqz0na94wUBEVsHnrilZJ86pGRTcLBuOp
elkFbwz5amPf7e+6dEXTqJC6KOJKiriVnn8sIJoEQEXEsukNDqOpfAfj9LIA
wJT6LldW8TQ2rhmP0+nuOnp653V/+nF3g1kxOrRsrmAfBzHvpOPmT5zP0ObI
sNy5SufH4XzXGe67I7aH/mTd6q+avVUjnda6k3p3/DLMT/GCs4XRGk4r2Vs5
26/kGK4hk5pgoK8VuK14XFh4Cg4GmeBN0kWoGqJUFwKZK1wrKx/RyPIen66f
cG2ieq4Zg/rnVOAsloLQdnoKSP9/EELA2wZ7Q4e9nIAs8UsnYLCFbZwZE720
BvPeVNFooYDvyKp2Y1IsSEOr8DqFQbswUhV9SbyBNU81nJ45dV0T8Z1FhR6e
hqOs1ewCGO/+U+V25UoznxtWtBp9UNGvimQ1eOiKeCY8asEVnmL1liba4JDn
7VFP7xTMKnD+QiKzD1cwxoHEIU13SX/b7uvJS/2RPHW9YbWJXTAK2MBrWBZG
cWnnr3/1t9/dfNl2Z0+rLYRzM5zu28NDd7xtD47pFJCs29zzSSV27eKdkHSm
UfNfTS15mIcDchzhrOl6MFEhR6t/mKzhCkxvTyGaanWNilU6NiSgC1hCNJJg
RKVEzPPOcFrJ2Nb2+BjOO0bFCQkyazT2UZJGhSMR+xEHUyBE84BJP+hrgA8a
xZaTUVA6rTuZdaeKR5opHsTSgsjCdTUYXfFm/qL8qvD59tffv/mz6jkWL/J9
Wy8KU74j1mhYVGiCqR5ZnYqK9LKgstkGG5pYr8Mh5RAe1XG99rxdpWX90AwH
B1FE4SkS8LBqd5Sj0JoCzWurXJyxVqn7Yb9aY9LqaIal3QMV/h2B68HkzWKD
fa8ms81ofHqG20wDtmeFaUWx7Y+x+N30/jjaL9tD2GYLKfVHEMW2Be2Mb0eL
h+ka5xJOpGVgmCWc7nZQaWCgGD8eb+8X26vpEgDMMk4IEmil+I6ZMplZxCFz
NDt2H1qi2x0YMLNY1G+fIswkA7D9tDuicDKh+GL009D+OS2cTsis3xvZBfhM
9vVns4dHOJVnuPWaGfMoQIaFWoNJe7QZrTgTb8L+aZFpPLHwAt6gdVQqqaVz
9ctGK5ZZMcwtNVWNU1HykGjFS0VOMYhZeuhAst4iEmRoWxvoseoRnnTyeT2U
oAH9ViYtzs8s7jkRVXK2VNDlh7D5J0i0yqCpR6Osez0rAQx6GE6Oo7Ee+TsY
H0dTDgIAZKSf5hdzMe2IOPp+lDSfdRzPDoPZ/fw4qfXnrd6q09+no/vJ4phC
FP3H2YYGKjhnHmZF73lC4eRBHDLQk9o2tBwGXtJAa/zMssFRTpUo7A0AME4N
ACgCsarjITu3o9myP7Irkeuvd1ed0f16b2fEGLdPMeFzEcsD6wRIhiP2LAaA
seFmJ2Le2A7mnzd3v334ZJek97JTF1dYhAADN703GSJi4/Es+eL5OWBoVSpJ
tQpvSGxESaSePpS/pOE7pp32MGn6JyHQIbBKqnlAmdsBiPJFUa3noFILASDY
yHV7CVj8FJFyFMpf1as0sKGFh63WttebN5tan97RuMYlGQ8a7HpASmef6qdn
aNeD0d14fjPUI39vJlPZejjBVek3qvpDNAlkAh4IE8CDn7WiR/GMx1xHq+YH
EwNGqxK6o+vBLGObzhB98rt3X27Gy2VbqLAHsWCz0gsyVwbD4tDxr2xU75ol
FhEKReQrVaPkVUgLh6WWl8JAuw8n0PbjeUyw9gSAZPi0vVPuq6ZrAjYOOq7B
JQWuhqt06swYf2YgCZHggX+CBL7GqoMtBMLb3y4Ov7n7oExaO7W/mLZHg3rv
xB5EH4v+zG4FeMRSx5J+fiUv1zDu9XAoWByQuNjGgSrbbkX5iqRcjOcR6bGH
XiFidSE7hvjXSEePxUhn35SuaLRYAj/EpLGQpAIeepUSbdKoLzttQ2Iaz7iY
tSUPFORG/lDPax0N7+fzm9HodjShPS9Wz8u1fkdgPAEJ8ejX0TUxRTrCKQAM
hZwtJSiARJgGG3X0Kzb9oX/DgnY1nAEAwPA0316PZ0/LPSDhT7YwiUKYZk+x
YSSiPSRfEgIJ4lAZwiz66IYd24omIriQ2uwOML0FpxFi0siYod0/zlYLfE1k
SyLNjqGHD9vbRW/scFIBSFjfcY3qPyOWARtKoceONWTmKZK+wXDyJvzJ9jjf
6jgQqndxEOBKH9HRw/r4RDsdR1iAYTteL9IJ53s9FNsoUGS/SMPKbSRiNSth
PaWqpEiJO6qSpirrLSnrpWq9EJwe4FoP0ulEkkeVWnpyRWS5X/KZFcsJ64pu
1NVMm3qKxUbP0WJc9zw30Y317JKsg8FxNLqfTu8mE5p+IGA4epot3ixW9/MF
TmQfYLibLSGNq95wF6U+UAGQiJbiWdZpStuPp/NePwAzgBA2vcmmM35c7O6m
axQCEe7tZIX8mIUUtB0dWp6E/UuYnzijZc0wqMqhTPWJ6SnqnEbOJD59ImZI
x+YKGge3wykfRIxMTL1OxwEnA0AfTVTChxoAGJGdFzC8YKw9ZOCfECLCCTCw
xfRssaz/BBVKZnZGvEWE0JvOEthj8LD4tOrt550pYJYPao/mvdnj/p638+fp
OR6xuqFqXQE8QlzVwICz3PC/HvhfLXdrFROFoo+QFmxxJYxuabwQhJIKSVdz
HzHeCUU9GyJURACLThiGBB3FAnahqC26WHc6i243Jrg1I897gwr063Xvt1uA
ceynP9zcPs3mtHebzd1sFtJCwHiz3oGN5+X2ZjK3KPV8Bx2e/TBBM9IFSVsV
hsHtu3S2Jvroj4/jxS6doDMhCixl6QgkjvM1BKgURK19CvAjW6jBpRREU4wx
CVEx60krgjcXOZsliJiuwsHZv8AVm+GU0zbpbJGAzCE3cAJhAKNtmYEr0Zxa
G3qZAAzJ1FgwG19Hd2hDmzSEwO7Q5GBIODF+RwQH9oZRmdwdx/k4pjHK4Q/f
/4vn3de0qgcvHxZr5IR0RSIsHRZb//CEnwQVD/Op+DEFmjiOXESsgilFHYXm
2fEgVpuqjk7ai36qcqZ6Y9LuGBXYaNvrqyiiXJVlq66ub4RPUcDCDm4iyqo5
XgEhWqXebPqXLkUjdS3kgWdge4Y8+sEscdXvs/2w2dLuRuPH8Cn7bl+/VTRf
oDmJRB6m8+fNHqaS0G0m63ToSg+OzLo9EXinm8n+VhfTqOyhlTLuGLP4FAJh
QDKOeEFxLj5RbJA4BZR54ZjP0kQDmrAdLiNizHl/CP9YM8hYGLfZJVz6fH0H
aMUeXYh9ACpk3FZqVGCpeaDI6tH3JjDE04SACtGum1HBZdnyEdw5tw02wikM
16M5MJCKCPdhDwIkOG03XKx6E/sOUEGbdyfD6mRcF0I4uB5N/S7IhB22L890
UiJi0GzZNXjxIBGHOeG0BjlWDJX8qh+Ayd1iREJOnIhmFir1bbv7m7fvsDto
SWLy9OdzZP4tVFFEo+GHZY2bzWmCo2+OYgZk2tZMtwKHJFq7t+p2D2lHvyQy
HoMKGIP9h9nMUMG5XI/HT6s1HkRZi46q/kCmNEb8ieBUriDpOjYUQgZ0lxge
o2z7MKr8O2B4s7k+jJbEpJOXGMFSP8Zjaj2ZZSfk5bP0NfzvBBpHsLhHuolC
fiG2ikMDP7T9ZCHypzV1Aza0PQs36euM4oKhT0bb0YK3cD8WqBla4s+F+Cfz
LyIHjB6OA6hwz0BCfBKq9edbsLcZztnXnwGeDD+DKdCyOPGaLC2qxUfUG85F
tENCnCZJPfHhHIW9BkiIstgKQy9KvtuIAVUvRNUEUsHzHQ4t/XNUVheaXteP
G+p5OKlOqxkY5g0fhGHkZeqNz9c3oEJ1v50OkIAZPh/2T4vZ02Lx5XjEg7xd
L583m5uJfntCOrPLAIRwugStu1ChRCjyI5FKUtgYSm+ZDlAXIS1E4KqKCWdt
Y9Gfp/SjowN6z1GnB3KWJwyqt3JQyjSmvWzTcSDB5vMnKgxJdMFZDH8CnLlZ
opXZ18czUdHqwmkOYdAkNEKV3WjGaSBQ3mcw8cV1mhatyMVI64YfgbKUQUU0
dsZQRGZ9eZnMGXkHpAk53dFJpp4Yhn2v+ne4ccKAqMB5y3rDYPCfaTys4DQR
5kkQ/MioJWE/rCcaOIkiCM+JqAqi3vSvDvmXRCIc6I3Cg5gujA2LTxASeUil
tswVm77WHh76khbHweB2PHyzRFGsPl3t2GH7YcfOksDkajDWr5OEH0F2AhKO
4E2UT3MiMSy4Uk8qFuBg/AZZeHBGcbN/NV4FACJ47BLFd06a0/QOGOhe6JG3
OzUx/1kzAE4jXSKzN4HA2TpfgeCETGTuViYXMxH4ktdygouLgwHrh71m4kbG
gx3HaZ8WQkWGFmP0xA+ZosChDJfL3lxeRqgeZBFxJ5Un6o3jGaoTzrdbMWyQ
H7wXuvCTCf2QqFb2CNyKHYcnzS0mT/DAxWB0P3xG86Rh+lCSlZiw7vLFs2Kn
eMr3fjDmHEarHQfNqMD6VpsusAESgI0AIcLY6qyT3M5nSky1EhzE1WDw9XgH
G4QHGb3frj/vd+/Xq3erJTsAAyFKPKKU1GItVMQPDdxOFxzBg0TWQiJhE67Z
ne8stGfVRctt5S7W/ak1P+fwRbCOo4kwdM+AkeZnOJvhX2DmkRuTL32/ZRQp
LFvfNG7m0Q0wxnsiilUQAoaTDoyBP4uXQj+kxoC1xHY4llLq9pdCxcDYMMy4
WyyLRxBv9OUIZN8eph/q1X4aLibcZX9E4HOz2KgfOla/4g3euxsv95OVZYkP
dip1yCeWDRYMDCWmXtIRFhVWF66p8FOqRBHxC8iu82ffdbx+6jv7QR2aCney
wuVY5o14qR60oAIb5bWCN2bttp7J2ULza+p83R4QJxKAHIajj4cbUAEtfNxv
8SAfNmtQ8Wm3BRjf3RzfrtcRpa6AxDZWl6MxkBbX4wkI0a9UdAe23XG2WoXg
pIfX3eF+MCXiAA83w/nTfIvg9NiZvKQdTnmnSEP1nU3C+vM4aCT44nR4lqCI
+S/7IB9h4PMnxz/ePvo2Tha3aOS9dgo+iEIODAwsXEHI7XLNQTcQYm9ymK0Y
74HeicY+O+l80Z9poj8drzPAsD89ERHnz1+AF5Gy0mJsgYSDl1Pa3MvijAoj
wWrTwIjl/GU9XL1Wz1YfR3NBpn+mEN891tRAlGvGas1Traab9Ea9afzAFVab
lprKVwRC3OZKbGZlnJ8Oj799952N+7jcoCcRmQDjw24DKr4eroAEW+ji8/7q
/WZH9EEYYpEpRYG0GAz8GwQut7DJnBVHfnAmMeNhMDt2xo+95aE92fXUmTJl
s8/wAQNKA7asAPvhWTTH4UdVK6cUXOE/D9PlIoTBNEtmdlZ2UumY8NZOx9a8
nq/BgL0AW66Am7B48M5aNs2QA2A0vzMQRbClgQoap21HM7sGLEvT/EIvgtB+
uhnPwMOyy/ExYhWcAAnn1nBh9+s9bzcrntyH49lIaIz1gO5YXauF57m881Sj
pG3fcZpVt9gwVyhr7QAkRr0fb6Kfu43jYs5OFzmH+NyMxvYanOmnJ8VDk+J5
F0nGM0Em+JqGwxDwMI6FZmiJq3SKcSEK2o+Pz+92e+yOhEBO/HBz/WY++7jd
/Mnzm/drQLJVBmO+jJmRcbxrcjeb30ymRLUPy83dfIUvU0ar13cCHLTczpYK
WNqDp8H6r55+/OO7z6skE5bhaEbOT1oBAglHgooog9V1QgjCTKv8TC7a6fig
VesszgEVclX9MSHw1WTBn0aCuYIdqMyoMH4sLG9n613Kq9PDFM05obG/D0LA
3IhGXMB2MF/1NKWyS2dXgxU9r6xIb4ZPNHdJz7zoltvllrdbhRoS+9nauQ5L
Tbantd5+ULYreJOYKNdaGy1Lzx6FZGC4ONMewfCQ72i0vW63V2kMW4mqNeqN
LNWZ6MkAQOXdza1yBa22QKLn9+qXArCLEgt+mHM81mCSNDf9nuNN2mGUEnp4
yoM/QQUByPfXNxAF7c1i8t3x+t1qTXu/3t6Np/fzBcSCN4nzNYP25eb+0/EW
pQEe1sMRMpJeVfqirUrOTZK+Hx/+/lf/+C/f/fo42jBM6NtxKMnpi0dgR8Ow
N8nyA+EF6EzrgSyNEL7G3X5KYGbppjiIoWX6gVKap4a5QYLynMOpTD+YOhHq
LfAQVwxnHAfYoOI4W+BNuH8dny6xtazP8BktYQmwcd9//jD47TG95QoAT+Qz
nPKNFuloORhbyoaTkt+xB4FMtpMlgkTA6Gba1b+hg9r0TxN2XmY3VH0Xsxvs
j9sd80bmX0oVgXkwVHhSrqf1qJ+PWhS4S2VskdfyrJm9GMBA0vsBF9nykKi1
JsTY9vq30ylh5sNssk6ai6QBJAg2wQA7hyG6cUp7Wq3uJhNQ8eEKr3H47ur4
Ybv8tNuHugASm8fp/N1y93l3/TRfv91uHxZrXJt+OjNmV29mM4iXe4hfPkqd
Eqe3r0eL2+Hqj+7ef7x6uBouGFx0lOgitEGkGkYWlrwEJBw1oEA0adIbuebT
mSU7BRO1NYmnywWG0dKUwidifZogMZrxFsee3gEAx6FuGLvjOPBKnINxQQ77
uB60Ilts7T9pd6sdAgNvIjnRm32e//bf/zf/9+f1b3bDxXG8AOSBnDk7diUG
W3w7eQpcG6+iK/iafHE8CFyhJ/aEB9Fqjlg51XqpqJG0iEKan7uPBZF+f6h5
8KofhVSK4LTqJVdZ6UiUdWnBaaMJKt5f3+NQiFzGifDgQepctKYnenpkwfv9
HluvO52NflVE06PmCrBhVNxPp48zYorB29Xm+9tbjP5mvni/XCMzEBXPi+XX
/fHtePPQX76d7Z5mC7wJXHE1knJAXaw7euw8qOCj+VykJjwc4k1C4jBa3kw3
j6sDqKAznRfKEoZpliNCaWxSETJb7Pu42v/Zpx+WLYhO7LHIgsSRU5Gn5IO9
ObbAImYATOyxDzCuJzI6o96QYCvPkk4BxmGEWxnbvwAAj3ogAfk/LK+426fd
kbeAFho6gZfYAXt3g9v7/rvbyQ1Msg5RASpcWuxsmCkr1O9Qd6VgWYoUhGQy
o6+W/TRJPns6Qcv121HWGw87kr9wyuJlkhTHUXa6ctCoY+tBSw/rcE6D0NU5
Li3cC2Bo5UUrWab9++0G8YCeVDVFu61fi+gNQIV+iyqwgX6IiIMIYrbr64fq
HhaL+/kcVDzMZgQaxKef9gckBGrz0+7qH3/9HWD4erj+ejj+9ubrv/nj//Z/
+MP//Gn+9LxYISo+XB00o5qmXFYTJUMijjEk/PnmkUYAslHA3nf8zmC5m++u
xtGxyyu6yMEINCst11Mol2Uemn27jJvxEp6RcRGTMfMlx52OHG6cQCLGjiDx
zdUNBnrYXIkBUhWavr+6fVjuJEfHmbE4/jDfvlldCTDpyJRirrDqAACHyZrt
r9594ggviUDmOw7yKpgBMNueIAR7bKRUF8DjON0ot9+fbAKBOBojIYKXkb+j
HGLEMtafXiPmKQ+pzWKJwa6pkEhKWDmcEp7OeXrFh6c/vKjQT34AA3htT57O
e91hs4GX0fBMWvy5n06c3F4GMLAX4xc8aGqs2z1OJpB85Ky6x8Hgqt+/Cbow
MGgEIL+6fXqYzN6trr+srn9YX/3TL3/8u7u3v7p7+HK1/273/Nfv/+6/+tW/
+X7/9vPh8H5/fN5sb6dKeII0ZAlbHMrNdKHCm9mG0eoI0Ykd+oGOBRK7oIvr
2TbGUaQv4nfWnHYQ6/bl07HLNvJRMAADHONiQUxgP+LIwsAAD4zQ5YtIMC2I
AUZziYrxgoPcDH8aFUDiu9s3cBG3KuoYznjJuU3DAxiwbwLhPm9n28fl9d2U
8zfcxqe7JxiYHV66mm5BFxjge4GKXeAEj+P4xcAQTgZ4nyWo8CgwSBqlkico
m7FCEGB8enzq1Ounh5Ykka9ovejPfqPmGdJJG6kAGBSi6sG8jSZi0iLfPyd0
NZnMYvHmstebdrTDn9kvRAQqDmMFjwDDCGFfI7rXebtcPEymYAO38t3dHZCA
Pd6sN3iKN9P5P/n+D//s1//k3/7hD//l27ff7/eft/vvD9ffXV1/WB7eL66g
DlzM19vbp9WWSORmMqd77xdrrozGOIymdDgDEN7AibzkiGRfus5ccWIGkwN2
ZIA7A0aPYY6tJz3F+UPI59P1HQMfgzL2saBjDceYniHFBMLGYCoM9Mc305Vt
zZ8AVcHFSHGl3hXwoGFN7pYt58jjRJwi97ERjXAFGjsE72/mx3/1+3/6fnn3
ZnN9PVoBBm7pZizSOMw2bPlS15M1W8c1vrfQIUvritAby5+xh346qlZ4mSuP
qph2LA2DK7KCunIllGTduaxeTKb3xQ9NRx+gAjZgVMaPjikvwV2t+n2lHdpt
NDP7k4g3jRC2BBogQU4fMYmkRDyMxwADosB2z6vFh91Gv5Q9GuE7vtzcEFY8
LDTfgdq8JQyZX/24f/qL+9vfHnefNrs/Ot790S10cfy43dGkPLfbd5ocmb9Z
7x4XO8IcepgRJNmJAIupBGn+ETJv5BAAbEAREALbN7tbnAhDzBEiNgJI7HAm
W0tEXaE/xgOCLlDH2MR2AttY77IYOCnJTcx4vttec9rdfGMBrFTJSIVk3APx
hYTxnOE/ezm+iIB6I/0ZwIAZuODj9sBtoCIgK169X2wf5vuP27un2f7N5nC/
2PO5dxIeK+4fPXO72IMTsMFFALxdicVMSA7BwzsRfE2c+uDPVvyYrPNUaehD
uYmqIgtTh/xI1RU4P02REIEuk9msMYYosDsGRcI5vkBYBml0QQtfeRGPNBk1
6+NWw6jgZLwGSLieTuEH5ZrSdBs/hXwMJCjLrdikhySA/JEHSEdpzvmCLUzy
dbv97nD15XD9q+s3T9PN29XuYbr8uAMYe1DxcXeF2oQrCFE9i+rSTTFn1Lqc
kgZ0r3tbZTD9Mf18IlsPWCyOybCjFqEEsVjDY/fbmWIcpVKHY0eUgbRZZJmm
HpKcyUdYNEpGjrms8mzOwRoeXPB2tqTJZUxwRlgQBC4eV+J/s4fLP9jqSAgM
uxLYg9t43h6BB9B9t79jB9MTvX5+ePfm6m4/iGglOAecHCbb/Ui8AVrgh8fd
TYS3ynjTFOFOVgpURwvX/HsaHVRE9KGHBCbFAqrA0sJJLfSGMxigonlR/ed/
+q9/9/Yve6Wmp8WdoVIBbT9FXcy6HVdc4D4mSVM/JtVtX03pf6kIMwM7TzDA
YmFUHCdjoo/dIIUxXKmrsszRGGyo3mYkzfk8W75fb99slu92u+f14cP+UfZN
58vWAGB82O4lR+dr8PC4XF2PZ+92h+ftlWcQNO/cGfEuhOLddP20vqKrncx0
uoCOxQqwNL6AHS8jcu0fnIAJMD2DVMHCBK+09Up2kJ/lIrKZrIFlgBvvcm4K
W2N6AWk4NjwABh8hDTBZ+qW7FaGEWOJmsWIbfkQGtVsxKm6nCzjwu7tHtkDC
/MPNfDrcf9jfPiyOoqPF7mZ5uJ6JNIhW7HQQTofJ7h/9+OfokGN4lufDfaTN
ZyeicEKMcRE/daTiilPZdvb47lJ5FMkojGtUgBkJzppijVV/tepcLVpTLSdv
SHC69kmlkj0tRac5n+nCCW/TahVULKPhOGCJ94fD2/0e3gAJqM1QGmkEIApJ
YIbIZU3wULejCQxAZPr56nhMh1FBobQPX5mIkmgOxoAlPmwPn6/uPl49yH0I
Gxp6s5gb8nTA03Kvkrzh7O1iG6We0vkqa+kO7e6fr27e7q55Y3T7MpA5ZR8U
aX4hokuECkTHq6DCYLCQcII6ZiuUfsSOGI5rWktwnavwOHxNxgJsoP2RrmMn
wmXFTiuh4s12yyd+d//MFzQkTF98OugFBljfDWDwJzL14/ERJ0JIohaZDZ8P
BnAr8MNxvHp3eGIfSjSVAXJAK/abrACDJDc7w7meCxolmkACunBFTTuWEjsw
YeA79PDxSE3Us1LnujLVTn1rmUZ/oHW1oTm91SR7THsZEmBjLTaQy6BXgQHY
uJ3P2UIdFp+gguPsxC+idvhT2mMkbDxM52BDCczJ7E6su96lcDjDfHYcLh8W
68DMzZ+8/fzbd1/o/2sz9mhCF61iPkLuvjukh78/3v94fQfMMAcgISrRgBov
PSrpZI4QyHw83NDtAOnd/oZRL0iIkOcg9nm3swug8x0V4l8wwcmD2JRWhuxw
BQgK5gEDFg8AILtCSGJ22NqV3K+3dEIQyMIHfTXTQrY/XRPGcp+AxPBAWhCS
YH1nNvAj7443WP/rw/un7Q16CReDzAAk9IMJzWGRMDyKadOeUxzzegx/1EXP
pVMBD6ewVIqZtE8e5AUwNS8DQXDGAyhaKoduNfXk1XY3y2HG1ikjtARI8OTX
oFbDoSzCg4AER6PQBUbPPMV8AWlExmkIJNY9AUP1FcEbNCQoqIArcA10C3ig
z+kKUIGQMJNIZizWL8ysBKDC9tAP6oeQi1A3pwGtkPpEvitMbxoxSB5nyJUr
JOLT+vj9w/sPh4e3V/chOHXPMNin4zXjHeNCF84xQjuWptaHhoRuIBwBqJDn
CqNbrnAdruAErLRENEdMT2sNf5wIbxf5K/PPOauTTwGxH66u9ZW3V5zJOThK
vvKHwx0yw1lQOOf99e396gBOHjfXbO9DfPItIn+eAUMhyWAe6nR5Up6tWlUR
R612mioFFZYQKp5M2hxxbuoEGEeynkBX6NFOxokUBYoOfuAl1atE9tIl9zeL
hcMQ8ABCXC0AFcAPuIb3+yuMfjebZ3W5hJDTaSiNPjLDqW9o/EDQmqaohcfZ
4mY4JlDVQqGhAg1sxw4d/rwUXcAAnPbxeE8XSUNir5FCMEf66uQRI3TxZnXE
+reT1fNmz3u/u33zp++/Pi/3CA/G4J99+O6760dwQk8+b28+XT/RnxE8jt9u
d79+eiIsEolFEOFktac2fu41HETwJy6JD7oeLWKCRrfKHT6t1o/r9X1k5gWS
oA4D5s1mj/sAM/YOAZjVu92bu9lBUJ+s5NFWW+6crb0JYIh287C8upvv+NZZ
nny2xWXAD8BDsXDEXNCIXQzHCbucqHHiwhFrp4m2LBsYXkB6Wld4WvdhSLgW
C/0ZKfSFn8MAHjThVc9W7WlNX7MVciLR5G9vACrwIOABYCix2e17ajhydyM/
b9NRRph+BDOAik2/B1Fsut3vb29vVHgz9HP2VJPZS/EjBCD06ufru3e7vbua
UfN+I2lxP1nQ7cLJfOM0kXJNMZe0jjjxZrndT4DW/GG8InLBauLbyerT/vbL
4f797gYwPLutD8/ra9qbzTXxHd0o5p8gM6Rmb0MVOB2tXNNg+vHqjo+WQA1D
h61Xdv14gR8fn98sNjF5RzA1+3B1+Hg4cvO8dC9y25guHlYreoDtw2oZ4YnE
xtVg/S//8F9/uf6sjGg4jpuguAcRi1jC7XGl+FS5i9nWzkLqYrZ18lMZldg5
JdItO4EEx8HD+5sn64r4cbSyV415iccpAvWfFhXgwTFpp1T7cHz/N7/720WC
xXtEplz5ze4edaFHjUVi8yX6SMOttF01oaxmrwdRcNxVELvoPZCArdnS2/t0
IBk5GFyNhi/rxSQ+iVWhFGcpMT1QebNcfjwcfnh4ZAeeoX9gCWhEMchqK6Ke
zL/ePao0S4tBhocIBCKi3DKOGLa/2t/8/W/+7IHQZr59WuKR119vnlDyzjnD
P7gSCASVwp+89Pnm0SNXRpwvnhQ5Ot2UqRFwJQWyO4AWGvZiyCMpoayvd294
F2/5/uYBYJjTcHY/3N1xkDOtNrE+2898uzX6YY10cRlAYObqZrK/ne65MTzR
280RBJougC5uiwY8rDHYwWE9bg9mDLbaMYlNl3Io24MT5kDiJlL9AsZMwYu3
JgpX+w87/uGzygkeJ5bAp9iPDFqNcUPrc/n6XqIlCdFJnabQxEfseL0nsDnO
ZuABx8F2g84cjjUnOBhnwCBsZ1jN5spIE40GLaA/3x4OYONptcL0+I7DePRm
vZY3GQ5viUqGw09XV9/d3HDwecUYP3w53BKWGhXOZ1rOxVie4fphDEaNlgKN
53Tp98fHL8urP7979wghL7ewqxzxfANRIMlQEUACMBDrcYR90IJl7xW2LE34
HuCODSNLuXDeTDQ1mjrzRhyBWQHGU4QzAd3d+w2B0p723fHm6/X182brWCnT
mQFyiIg38i5wxTW5VGgMfaLFj9hso4bAwBCP8Sn/ITCOd4CB7yVnMVn+8Phs
iQ4kblc7yNPRCoP6YX1UomY4P85h0RWo6NTrxoCi0Zp/ACWr2HRqAjy4Dse6
wgvinLVW2VK7EwkrhRtEK/gOS02XXYkuCCUi1YmuYAcbeTXoupsqQOgPIy+N
kpwp1tNcmHacAHemAjDcIfAmQ1f+v11rqhRUfCaqXa8Rn+/We3r70B+8iZWG
jm6iNGUakePUVW0YTv222n5ZHv/Z1z//8fDu/er64+5G/ne2IkLBLxPcfbl9
/tWbT293tyHp13A18EAYAAm0itxNWMeykGbloITkaCpHv9kE+a+wrwb7Sva9
DzaIKGn3aX9N+3q4/uFGk32yOFQQHkRXXi7xiUiXN9sNoLL84J5FKcvNu/0R
PHA/bPF9XO3LzT1u9Pv7JwMYMNAUqG4O6GSIEZIhAOEIHlYsSrQCVS42fOXI
YKhBFGgPiwp4Q49Z6A/GvZ6TFVrTMRjEz7DG7Hk5y2R2AidwhR7t1VTDvhaT
rrNCcMIPY6KPpL0apACDj1bk3uvdzKbLfpeDqoAajg8vRXReUeUQ3oGq9eRN
LPEwKjh+G6jQwckYWvj1w/3Xq+33x/3Hzfrjnt7bPi0WOBFeer/d4lzoz4/H
W0xmUoLkGU1QU8xZMOJ275ZXf3b97l//+Pt/8uV36/5UkwXzHTTCCCJ4xy+j
QuleXLDSQfM1vgA2fthccQIdns1BzCURI1JYew7LWS8kDWMflYhxaSAEX8At
ycqo4t3u6+3dh+3h0+6KuPjz/qAC9bWKD0OliDMBCdHN2/1ePLNaWY5CMrCB
QLUVPh0o0aAdGgdFFyv5wXAlB6iP/ef9XcgMIcGwD0ivb1dXfNMvj28PMT/C
NjL8y8ME+aE5td143ShVPM2hZEWjkSaJnkP+UqfHS14ZFDt6dIMWV7b9gClV
a7tCHs25TAdITecoOIgJFGh0+l/ubgkzl2kfJ+KyQ2f2OIFedQ0eFnfqO2Y5
e9aWCseGI3rsYaFEN+h63mzerZZf9pu//aMfvjvsPu22X47HH+/vnxfLj1sV
WsAVDLRP13dOGkMUjD4LGGcg8f74gj97/vLd5v5uqolROvD98REP++X2SUyy
3ONfQAXqQq452JieBOQAwxGuM9ghI1eRiVpxkG9k62BWje5gDICBub/c3CKK
QAvHgQdy4v1q/7vnr3/6/MOn3T1HuGe/5KaTdzuAASRo4UFEJoGrg6MP04Xd
HBTHfcJj+L6H+T5k59Xj4opo9HlxeJkx2XtQsKMJ95hJ0W1P1sgMmmdJjBOa
H3uVLS1vtEbdvn2KKCLymTT7Dj1jUA9yyZISsQwk8hLdHkTBVs+rDKnJn3wi
6g674EGAxKLfC3UxNDAYyx9uHlTwoLLM4WGUGgz0reMRl2uCDRy0pz9wLsiM
t+slYPiwXnxUicX2027/4+3dl6vDDze3H7eQ6hVdauUGU+E7HjY7IOEpBkYZ
tlaBimSAxgi+1bGbPe/3d88flRe9Q9HRIGGnhj7dPSmqRZ5Nl3frPfS7jfyP
Z7f5lN1owvX5XMIKUAEScGFSCIsFFgcPAINtxhurDZz2YXX397//518Pz9ww
zahgh6iEHeHBoetyFT2gUFREEV7AwDB68Xc4O4TBu+0t3hCQ3G1QuddvNzfv
5o+f08/P00cQEg7lSniY794db5zm0rd2Umuy9o5LNdj3r9XADLJ+oxU/Y6EI
dNLpWlewD4144Tn8kD06Jkp2V4OhHEciwQlvQFNvj3fOV7iuYD+dEYBIeHQ7
AIMYBNcDNsADHY6owO6/efPmdjwMTxFgGOvBFI9RT/UwJbhYuALTJRMEpH/6
7j3tt2+eAcN3x2so4sNma64AFZr+mMzt+p1MBhJ8HN6EsU/o4QooNJUaIckS
zlSal/784f4tsQaSHmBYuWkeYX38k48/MLJABXggqkWqwcZIsq1TQBItQoWS
kNOZ7QgeoAv2QQXtN2/fcf+YG+8ANuC0t6urxykIuQJIfC/w8Pn6BgnKyQLG
fm842b8AAzOG8/BOUyhQ2t8AgN//6nc4C2AMaXw43AjP+wMw+Iv1X/9f/9P/
8/9y9V6xkaVplhjJ8PRMbyqzMrOysnxV213N9sz0dHelYSa9De/NjbgmfASD
DHoyvS/TVdXVtdPo7enZWTOjndVKuxAESNgHAYKElaCBMNDLQg961ZseBAjQ
Od8X5DYE/Li4vBGZDMZ/7vnOZ++L/EtzBfZRhSiRgDtFszNY+Os0vqHVaDAl
vEdCSaACdKFNQJxFPzu/qiFuOKq3b/9h/T94ABZBK9wYpxJOUJaguzHLUrT4
4iqua8ueLrwanpsXUTrH1NjCPIDBUoqFZabOOahkHmISqEgvLMCUSOSQwW0A
A0u8TtLFllPFV9cQW9zOZLdKZieXBzAACWADx3KEzgjfHIkcB4VAGvgOIW6Z
SV8Jq3fGOCcLGhmTdDIF2tloZqNUgR8KPPDWi1CwUWHC/hYceB+MfYlPR7KV
rGXLrGalhl9NFbABaYRPC2CALhQVIhSxpyQH8RfSYkpSyhhYkEaVWELlJT58
O5uHfQFyYEEAkmNgKDkwNCHBTPU+FBhAArYbzi8+OQOeGQO8UYpRCO0nd//1
0/9mL7S7aZTxH9JziSXVS6Xw6OlSlutgFSXySf9XHBN5dNot7QPSgWBatJkI
hSAztO6uF6y4eauaznHeNXTmDFv+tcamlzGfY1ETgKEGRV9dEcyEhVVYlzXD
2vvg1BQfDiJpU6jK1OIiTnKrK+mlxdTiQpolWCvAw6utHdBFp1gqsBaLjh6O
kBbSQhhiO2EyBTBAVKiugFcC918L/rmCDAeBefDPgRB8QgDATGbprEUSkj6G
BeGCSYXewC0GC7Ju1gCD7VrHTha0HlJDYbDIuA4Fgu9co0CQ6xo8pFcFZbtC
14l4EGBIQCOmpkGTeqo2dYvFEMQAFShkgAGLXJHOKiqUN2B0QCNAC4AhhMMC
M3gcvciV2BFQBy5iNbIFuCdQyNV4Fs4I8AwA1OPVR7X7jZgNCNXSObyBmjlO
SqFj0nNVcs28TbERhNMd05A4Fh9jJHFsTY3poh8KSNy5o2qzhw2ZUIEdh11g
u83iKs5hDnTQEDWGlEYLP0xLMn0WtBOcnVsVumAN7coq/m1c6q+w9WAMqA4Q
SFyqsCRzusB9hBqnv5nA5qqYL0bCNtR4KISjFQs30kkKjHRaXVSt6oTyrKZS
oB18jbjdVMDnxDBhj8rJjJXM8n4PStw7kqoWykYsoyoLTgRQUU2SKGo5Z81s
sMJNtCVNcDCGOxFC7vHGXrtUBf1q+oDJ01iil9QANUngRSGhzI8f8VdoBF7w
EBdjkZVXgQf4xbR6QAXAwKBWobhhlDTmiSOwQX+kJ0GzqmaxxQADTrDRAMZ6
yd4wHb6axL/K42IpwQA77UgGtrVkJRnBgFm04xSitqACb1CNCmAwOBNlWg3W
RKtAsWAy1EBoI6HSAmtsbt7EOg5szk5OMj8ibmmo1482rzZCph9LknRmAaZW
bMo0YYA1v7A6Ox2am6dNmZ4tZ3L5aCwmqTE4aCm6BuD2haTWZUk1b5bRiZBk
RUMg4UIkAhoxY1GpugmBK7D1JrR9KAQ8wCGtxKNWOAjqwBVchw8LodItmoRW
WEJJYaZOcJfB32dMOJxs5s221VivdOx0CbsPOgXCCytRaHgnbpTTppUwNIvE
FgxmmqIMJEYkAhBOgW0SyytSRdlLcWpak7k22L5oVGlNUzaANz6A1JKpSEgI
QmISn89yFkeCRgTYUGBIRC6nyhMUoYwhpiQFiuBdn0jBG1Xq0AUwYOE9EJ8E
P2gkleH/nwTzQHhkcELLEu8FxkEXGiRXI7LpNKVch9FRBvTwB4aSc3fvHjcE
Hc81IktMUmTGlpY1qqkpM3kiDEdY6zwTQAJcoUaEDun0PJx6fTW2uAQkgC5g
OMKCCtBCXMhBNSctxeoqMKAPw8XKyGKcU3gDzN9z7mJRgCEThAO7IgV7IUHF
qh2BqxUEGORrD5vRkBWD5FtS6a5BA6m9WSmswvSkmtkSFjxTWAqpq2GikLe8
DMjKzCzCQ5GSNqbD8HU56XxBIsYp8UbBwE4inQuxEQPfsLEs0YlIL75EQhNJ
oxhQq4EdLIOlgzGNNvS2Mo1NhypmCRn+OR2TaC8GrlVDKj6BDSy1L3j/cTpM
0AXVWmhnDWx6M2e0CyWgQtQ4A6HwTcAYEqRl1AWoUABg0xUVOGc5XyyFpYlU
dcDJJKmcsRSDP6vDbY7HW/VmFNy5o+UWOC5PTQMPWtW/oP7FwuJ/qqOQIXXa
rBfu9dUuZMOR+NJyDzYCD/wTnEBqgijEUZ3XyBW2HhgAVwAVxzjBiSbZ8SOI
wggDHpF8cJXmI8obDfwAVBTxz5eXi6vLOAddlIIrpI4YY1lQcXgn8FOJM4UK
XsIObhhOM22ASzetGnQaSEPj1SWZlva7J8/3nAouZpYiGqlQxw23T0KKNmGA
1ooOoAKuYNg8mvwnr77AtuYkfwGiwN5hjxSTFJlsfoxoDhcLu7lXa2I3NSqO
LcYtj38OPGAx/haNw4JAWuifoASCpZqT974EtxUhGiOtJ7P4jWuGCVSADAEG
5keAkCRNiSJB4hisIxLzwTAX2SNN7YFzcAhehcwuBlm5gXVYaWPd+fnPp27d
UtuhtKCj0uCr9uJaEq/ASwxZ3L07P3lb7ciRW8HhQtjl1ekpBrLYCrcAF57d
gtIwS6djYREgwVEiXYsyuGxRo5csvAkG8+GwGhGFBJZCAlwBSEBUgC7IG+FV
U9pD1F5AS+CbzC4sABi4AqNTiWW2SnVgYMdxgAeNeUKUtmCycyX8sc1kQdIQ
rOLDV1qJUYYdVJul1chGOtegDKMWxcJ9RN0VTtbyJY1RgAbzctRAFiQoaIc5
8ajmyxh+VOfUDscbyXQrlvx8faMNJQlVGe+FqiQoF5Nm6oRSjUbp2VO/EgQG
gAoNaAiYSR3q24qfksaOK8/gk+MPwZ8AMHSKFo4gCnwe0lEyD/bAEQhU/fCH
R2CgkSvVC6ZiQ8lkv7bWNauSck2VI9l6wmBw++bN4yE2YAZ1S4GHhamp6Ts3
56cYu9AgBnnj3uTCndvYX3IF5xbyUSyJ5SXVElIfG1QXHsAAPOxEgpU2IjMA
iVwolFldlTjnAmRDWlgCqEhJkd4xUdBxCAYZ742AlsPgCkMaQ0DO+NohHqxw
2ImGGQxfWmI9ZzSKr3E9X/5850ktkdOZBlCkYBXo/Fo8uZYxdq0qULGWK24a
drdgHVaauIjvFjyMoxVKwJ52nIadLUKFZqXCKhtKlDOFTDCahkwVa1KMp9PS
6Idzqehb1TiqpsJBJmqt8Bs3UulXjdZaOovPxo2W8CZkpPogjDyE/9PChwck
QFagCAUJjio2NkzriC6SmhPZsatKFK0M7QgxcCQw4IDgtzP5C68E+jldaOXM
VsFSSEguNQvSwwLsYQdhMrQ8SfMj2D7FiVqQqaNMh/YDsgjnzs3gHDt9lu+R
Hxam+RJ0AlDBsWOCChZUzC5gl7HFuAgNJrUcLPLRqld8XWulEnhAiQJLuqql
1AreaCiEc6nDWUwfscQxUah9sRNxQALAIGlIREuahgCJKFBRYIggCPOBc17h
90kz3cykmCWhrYk3pC8VN28dOi3GXHYtlu4apfuV+oFT7eQK+G6x7Fghv5J0
UiVITegKzU3T+IYT+A6JBBn9kWfUi9JC46KagKPYkKw6MynB+F59jbdwLg9M
1tLpnnKQiLcGqVQA8O5O5ZQuGKuPUXkCBozQxpOiKpOgDoqTRFJdEi1Mxae9
X2+vF8wNw9L4BjAAU6KQABjw25UxdqotiChcV0uB5aSzoDuAgXiIM9qJz6zi
U/QSnRQ4YmwcOyrWlUf1zdAVhdq8+SmUYTWTCU5NRZcWwBigDpUWlI5y78NG
aOcXa3Q1KDG3YETjlawBdw+OSSESw48Mc92bzUEsZXNUFMvsroVxUZ+UQS1h
DK3CAlHQ9YCl+IPFoFCMEQANdlFOLK9QyIXhgISx9TAowAZpgQMuknBDNopF
nFSisbVsDguQaGdyTji6Y5c3CkXAoxFP3S83tw0HONl1amuFMsvwJIRlhtO1
VLGaLjopg8Ijns6QJbLdSgMnDHIKkwAP6pNqbl3yO6FO3lo3K2T1LOg938hT
NHbyhnqmUmYTVj2pAS4Fg3oigC6OUBfqq6raFCT00EKZEUvR8CUy7TSIIo/3
aDQDwKB9iVN7wJTgHJYCYGDtd8aA24UfwQMwiFiO+CY4AhKgEdUYeBWAKUui
TYvxVG2qvGSc8yZ7irFr2A5W9c9OL8/OwiuB2MDuQzf24lQSjFq3rNhCL0ZB
nDA3yt7MplFmDyZFJhstkyurKjBUY8g4F/ojiaUF/HMc06IwxemIwe4weAVP
E6oDpgQ6PxrBN5lbXt5yyvQ7goknjYdr6bLa3yLFBuxFHN8bXP52JsteoWiM
YfCjYLjEmano1vNGN198Ult72d582tzYd5q7ToMR41gGXyCAUUmAeO161gQw
tGKTbYbSfwF/JCO9GHBXtY+DwAgzzK6dI5pDwa6tZfNrefgI3DXc6XrLi66g
Z6QpD/qemdyuUwFsAAlwGhboCz9ulixlDLxBEaIY2Cw5e+U6ZFLzCDmSfWMg
C4snGcpO/CHEQMbQE7AECEH3HfcsiEJFhVoW8AngBJxgqeeiQarkavA4C8ba
fgBgZgbGYubTX7Asc7rXaY61ZlfhaPRKa6ancJtXM+nYLNuCICyZHqXjuQRU
PN9/BCtMe7G8AiTgiDcwhCWiQkPfOEmvLscX51MrS1ha4gsoKiRYLru83MwX
GzmDgAnHJEiVYj/ySuo3D/6qk1nrSf1YBEICSGhmMpvFUieX1R60tTxH7THb
Lpbakh4iiM99u/Ki1f165/6v959Che7arVq84MRy7byD46bV2LGaG4VKK22W
4/iWiqzYkSJ5xQaYFqsYS/AjRVk3q8MluJaDkLLgH7AEIFHPZDrFEhuaiiYr
rELQSFFNcxAqghYQAhQFi3C06EI+IUFF65Y7jnmqhwKrAQuiEGpJfAMWBDDo
QUKwAV3BGLhUrh7vvgQ807CGoAgAA3pJBUZPhSZ6wgPAwBVt8ZiT3mENZPF8
+u70zV/M37sHeHBu3r0pAGNBe8wlUS6xCJDDdGxxAfYFEArPzWLrM6Gw9jMy
Mrwaj8ytQIhiSciCGEhI5X8xHhVXhcFMyX2sSqx7Ue2F8oPyBrwDxofZIbhq
8kfOtIG8NFdixkLcXklawdVqLAoAtHMZEZmpbsloZXFf0JqAxvFmvl+SVg6T
Jnl88xAVjyqtF42NV63NQ6e17bSAga1ibd9pm6tJYKOZtdr5SseorWXLkBk5
JpWYbtAOC8ZIIzG1j1haVKMJES270lS4Br2pCo68CYhMmn6IjURCiQLXsfuK
B2UJAAAyGD9uSKhTgUH2KJp4A/BwWGtsmTaYhO/M0Y60C0a3aENOwEuVm6gE
3YtjJZt3EmnlCmID8gkytWACDDihzBA8QHiw2CxvSRwMajOnkczF25NQp4ui
NtWULN1lMBM6k+vO5NzdqYWpmcVpmgndfXFFaTjgn0aY5hAPdGEJUrYQzlC8
rcYh0bX+ClDB2yQkyAQ3vFHACcQClgB1wHZohJP+iIBBm4awieslO8syp+WC
ZBkoJEJSyx1OOKG4FQx/c//wYaO+ns+x6kZ0xbphtNIpiop4fMuyOLKVFRrw
XFYpRAus5dsyTADjWWP9VzsPXnb2f/v62wetrT2nfVDpNDJmPV3qGJXn6/sP
G9vbZgNfmqSeY+zDAmkkkrlIVAePAAlABdQmq/UiMZxoZR2rNOPxjmlqlJLJ
01hCam/iIg7JIZVkEiaGvdKZLLYbcFVUAAnAA85BDhrLagtvAAnr8iqu40eQ
D5MmokjlShHf1ZZTbQswcATB4qSWYbACAFBrwh4owUbHroJM6KWmDQ3ulSWH
or0D07cZvFq+NXlYawUnp3oPBvrFp/Q+bt+OAQbT91ZnZpOhZCmVl7kEoAuW
drMHZG4WYGBqQ6WCBKnis0vFECymaazGsgsstpHtXi3GYIvDUrrJsBXwQEgs
UGoCFRreZCeI9KpLaRbTZPTre64HS2QZOQwGmR5Npnftciud2bUtQILDCvJ5
IIFFWRB1CbIELAuOuGgIVwAS7DNaDeKbXGNYIHlQbnz34MVmob5f3T6obx5W
u49bu18fvtwo1UAXD+rdrlGFccFNBA2GrxfbTZWeytDAhSE4w1AUx+aDSiNC
GU9sxAkM0AWMPhaMCPYOQgILgsGJx9W44DMDw5r8BV3gj9IqX0CincspADpS
yNfTFVlaEwhmXMRJQ0TIjuXgnXvlKnxYWU6nZAMSigr6JmJHIDj1RC1L27AB
FUCCSEjRjSVsUgWQzIZV1RoboAKeDh/GJJ1BsXkqh+Tc3H61DM3AJ87wmYms
ydRhFGAJcAVgoF2l8FyY7NDhJEshckWyFJta2C3b+Qhb1KWsgvCgkKATuphd
Wcwsw2rMF0LMl6kPggWpCcsLeBgrbCHsBSjwI3soyBWAxIv1diuZed7ZgWGt
xROaWIeioOzH95bLARj4wnGCi9iCIit2NHeZfLG2BbsPsDGRFI7Z0fS3T77Y
s7uAxLP2/r/45T/57YtvWrkyLEgn54AogBC4/Jt2BUsLNXHvH1brWn3d0xJB
aNEIUIET2BeprCZIIJKr6RzMPZxEtftKHQoJIIR+ZRoqIrNRMO7XGjWRlxqm
wIdXeakLRMEYVy7XI41CUaXmtmlviH4mXRhFoAJHIIHWpGg15AS/nWyQK2G7
H6xtqtKAo0TtIaFy+ixpQ6WmgkQ7g8Izc9HpOc4sElRgE+GDLNy6tTp1F5pz
eWoa+44FpaElNLrURV0VVFA5SEk/vi5OhJhhvX1a0qM4AR40/ZFYXK5nC7hf
CsHlp5tr+dUloILluyuMY2SkIUhrOOFaPtvYYFY9FAISiisc1EwejkQf1iv/
6tt//HrzAF8jIAHHE64objreX8Uijlrr2y2VyB6sfonoCD6g4lmrC60CI6X3
Pu5oiIrD6uarzYdf77983Ng9rG8/aO9+vv/kfnMT4ny3srbtNPDtgZ+lDYeZ
KVCNhq2OkBA0Eynwg5VMp0R1YIFSpJ8r7rDYkrlOzaDBiLBkKxqFGABCKDlE
OoIrWpIgUxjg87OYJJECM2DHKZJ1NIfYCy6QTN542GiRK+QK/kNAAuYJfjEY
A2BWFxWoAN1h34GKrXLj2CtZL5bpwIpLC66AoQGfrBVsmBKtq1mQQSUMfd+S
kRR8jjy1JTNi9yaXpu5q4mNlhp1itBSLHBULqwHzoelyRYU+5kmTIMyAzKqJ
WWFP8cwMHwewuEydFgqBiHIrYAz24WZWV3shi+VVLdcEEpT84XLizz+oVEEd
ZjDMWymR3Cwaj+rN/XJFhjan8U4NUChdcNaNaAyFB9QF9Aljg0xJsDpXI8+1
bBaqj67iamSv3Pzq4MXD2tbvXv36109+CVTs1jr4AncrrY0SNKcDew0w4P6S
cvo4dlmL/4/NB+sroC5ijHFpDw5cFS2Owj0LYLDGW+rzpWCGrjdYkYlOAjsn
kIA5yB8LSLUdOOkID6i00EUOzBEh+JPBG/BfyBhGCUoDpgqra5UJjFLlQaur
XIE/oWtWaSlgNcSC0Hakc/i7gHbyGHVmTrkFIGFBhdRR6IlM6p4MTU/nwkEg
gY9MmrwD/RBbWmb0cnERXAF45KOU3/AjOBsEL0lCRHWXjgzFjwBMJhSEh5IO
rmSW5p+2W/AXIBvwP0BRwCHFr9AyGwhdYIM5keVe7QpoARutQ9KABKgFGx5E
JAauwKZvFPKst4lG4Y02xToDDI1kCjRCycG6izjAoMV7gNZxGoIVUInkH1ZU
ap5606pRapbXHtS3Hq3tPersP1rfxa206zRw7+B701AkWA4CfqNcBw/gM0Ph
40/WAkgdUaUWRAePyJgRuq7KGFp8DpBoYNOW7GcvT5pMAw8gvfV8gYYvy4W/
i/Yin1cfRMGv9lGvd4QVdxxn16kcVOuABwN0YkEADNg7CgzDIVEUSthrgIRV
qVk2ttTFewUkdip1YAOeC4EBY5fOUYrki0yVTk7eu6mF/USFNnkBGPA+gJNF
aomp8PwCTpgOm2NhP3gAdwduli40y/Iq7YhUfcvwkCWdPEyVHlyVWXCchldP
cDg//megiPNMVpYIjNUVnGt5jLoJGalz6xpFAINdQpIwwgmMBYf8MxAUbWWT
EoKIw7mAK6q7DzvC4FUsDkcVv4tBTqnn3HPKnNwbjmjRSy1Gj6BAlcIUFQRw
fjXcyhTXMqXDSudhvfsQRFFZe9je3MjbG3kTX6YkGhh0gr1W3Y7bSnt7AZJs
L6ilbeAJhQQzJtIUXJQOMnALQ464EwuWFckcNtZhlSgzokyVtigv81qDit3H
UlRg63GOP5BFiYIEmhWBB4gCCywKKwlzDGCoodkwzfWSCWwcVJtbJq6Yigps
OkCO3w4bIUeCZLtc23Vq2sisqGDpTha6tMgMyO3bnHhzi1zBVOmdSVZaztxb
mJrSIf98NMO9e/NTk8HZhdV5Pv1kZXqukisW42k4m1AXOMrEUTYECaIY5JRI
5iJcj8TSQmpFHQ0th14pRMPJ5UWgAlyRD65KmiOsiQ89ij5k0lyDVDAoa9kM
GAAOiC2aU8exOtGwuhvVVArfWznGyb1ahMOcFPzBaIyTGOF9hCOSs04AckxJ
wKyAQzIZcSRZfFKOMxmNr3Sn3ITS2LGa21Ztu1SFsaaNzhdwovdRjb+OUoFl
FRLagk2E7ehFMEJRGA7cj1pEp92mZanYhwF6uv2wg/+50gZCWFcD6ktRpWhE
QkURWQJXJOvBQBYsKZAgPiyAodhQBaXAAEtsWw7+edey1kvAgAFyA0hgUDZL
zr7T/HznEf6WJr2SElDRLdrgRnAgrjARnytuSMEJaQT4yUGuWAADdj+8tMLa
XQHG3N27kiHlUxr5dJXpGQ4lYJJ9CrITKiIbiQIenB4j2RCgAv67AGMuNsNx
u9BgMsZhUYISy/A+wACaLVVVacVjQAXQIrqCSGDP/oqMhJK4Ny7S44hB8KdA
CHAtN80ivhCO95f8uCbKOZQ1mSwzIkTfvxKNVBMxZsrCfAQVbsBd2zkSnFEt
vFeNxyIZcSjgMeHGhx/KspNwjGSbo+LCvYOvC976QaOtXyDuqa5dU5pl+VO2
ABJgtwXrY+PqcfCKtAPjftShNCZ7xmNiL1LYlNf7j59tHeJXSAGVVF5J6BJ2
hJ6mtEmqpQBF6OKTUMB7QhG75bJCQrli0zSxNMQBDJBPDEDC7Fq2QMLq5EsA
DEhjs1TBH9IsQKrFMzDu92aKyysAJMiwky2ycjidxj3CtFqOJaBaNTFz5+7U
LdZf0VEVeDCQdW8KOlNc0Tk+H42L3WFAiDxdglEpLdJja1I4oqNNOa9A5moa
0aimRaRDh1yhkQq2+y32At1QoTAiOuVmr95ixWmvIztiJ+KaEmWd1VF3mAzd
DWsMsxyLaWpMiaUiPURkiXDo+DkRh9Ua57UmEo1sFlBktDmRZBdnNIq7Xvq/
0oeNbiVRkDlUIW00rpDwU6rMZc5SQQoYEtpICKHIPJTMVjITGVa+xdlERs0g
EkJDncVQFMhhiEPiWsAVQMIOjpzZyhSwEdhNFm2KHwoToDJSF83ika6gYMbf
e8QPAACuqNTEwqYDAOqVABKgC+gNnAAtoAvgQSUoEA61/5P33/rg3MS7496P
T3k+OOn75NyJn12/MfvDHyRv/6IWj9Xh6RRMYB6qSRPoupj7mJ5WupifusM8
6V3GNpfv8eHawbmZoLSGwVsx4ole2muB5bs2K5QoNTer1dTs7MtGHTsC7wO3
Ui1vgEPAElgap9LhNpo0B2NkQ+wLAzCoOWXWB2QGqIPJgnRackkRnbepkQcs
fGnqXJiCB8gVjnQmWnBlFVyB395Kp+RpEawDZ30OBT81Cba7WSiAK9KLK1J1
iXscd7ElIyOS0GN04mTTIePh5gMSdpRBP1byi0q0pLjakplIVjKrnYa4Dl9D
OYHa8qgj+HhKifYIg9vV99y0HQa1xN+E7IGJB4nVJakHPPxh7EUbJ8GZDZUT
eUM9kc4fxDlBCyI1zZZh1AEeqAvDALHsV6u7ZbucSv7x++9eHnS9Mdh3KdB3
Y9T9/TOuD0/7Lvj63vK53x8e+Mn5sVtvX17+2T9Kz9zGVwetiNv/uAYvvryi
OVMWWtzjXG6mP+7ecTJmajkxd3NS59gcd41pF6FGLWBSyRWLC/Gpu0/KDv7z
0PyszBmm48kAlww40uJMLdfEvtfyeaAC2NCoBTYLF3tF3Yn4fr2BL0qJQipg
E2wfk8GJuqrSZ4qLZk9+rNrxSCOdxG+HDtHMCH0QcAVkWyZT432XUjqCRQPt
H0XgWUkF3X6/1ekVwsWzYAm2+sZzr3afVlMmEEv5kShKqp3wgNGBUYBZgbsH
5gEzmNKvUWV1HPt6iuKNVljUnRT+yUDYaKBS495YkBasymNJJzMmx0ZEuQJH
5Q29EY7JBP+D5s5wBDaYJTEhLAsd09xyyrQsRaNbzO1VrGoy9M6502c9gIT3
jKfvyoj3vQnPJ6f9H08E3h71vjPseWe4/8en/X96bug/O+v9yQXfrfeuNmKZ
mVufanFmDwx3e+lR4IFNYXzUI2cchScj7XwnNLWs2VINX0jrx1RieQlOKPCg
E/XheIbnZkKz0xIPZwpVi6+YK2fHh1T4LyzrCQlkZQnAgMDAkmK8mBnDrq1g
r8GEvchkmJX/2FbcBVXR5MIMSbwBJ9qeDFtjhFaACrir8EG4UuKWplJVud0q
POc3DwrKBoMFYC8WA1Z1bJ0tJA85AWPB0tlIiqWM3FZcrxhBCTjE09CKzbzN
LvWEaNRkbqvcUANREf3Z2/1YhqHmdE6DXdoMiKVpMi2VUT2p1IFbfq9cZcLr
CAaa2lN46FK1qVDBf6JBDEZBC/hFGZDDpm3jT1u+eev2D3/0p+/d+PGViz++
9sa7Z8cv+FxvBDwnBgbGXK5Lg+4PTnmxPhpz//jc4Ifj7htjvnfGPD8+6fvJ
Oc+fvTH80/PDS9/7wfztWzABrKVZWFRUKEhUUejEXZbhTcdeb38WubdylEOf
0bpNzZFJaoxZUYgHWhYxLsCDdpgeRTUXWcAfCmqjsfIGnBGoi0wQ0mJVUSHB
BJbvYhNVZzJVKoTQ2181B2I+dMp3bllzZ6zM4dDFaKQWi5aXVxrRaCdH96Qi
ilScmnhvah/NGdNbpozlhMlopvNdowpjAZagjZAeCo4IkJpYFkjHOQ+5li/h
3tdWHZMleVblqFOjrJFMMSKwOOsF+7jJS7ucQFPMhggwSBRwQpPUk5olP6w1
2D4GHhDDAQAc+6TwuDcKxlYJDFBSnOCl4xRJU0QmvKTgncnrZ06fdvVfHQ5c
HXRf8vadc/cBEpcCA9dHPDie8w6cc/W9Nej68JT/e6e83zvt/mjCdWPE++6Y
/4enB//oPNbwT88F7lw6JeOq5qalpVTpQrGBI4REr0Dr7lTw9vTizzn8amXq
nhbjqQVhs/kiiyWUEMILszAcOmyTXDGnSdUZmo+lpWI8Gp+bBWMACcAACAEs
AdkJGsE5cA45AUjo0opu3XfRFeFqGjY3paFL2pRIpHA03UJRYUb5tnI41I7F
//azL/fzRiseZ1ZdnilgSvBKGwpgO+Dv8EYOJaoy5KSZxtfeet55uF6sS96Q
/RT0LqXegMMlIuwLADbwkhWhp1mVXgCGs5Ip6f1JWkfjHCFI4O5x3hqrpHLa
DgZliF3eOApUsqG+wIwe0xmS4ZK8WF4hoahQe7FtWrumjbVTslRkapZEyi3g
ihbwXf3JRx+f9vnOBvzY+os+igeQwJtD7ssBN47vjoAcPB+d9AIeVwcHPjzh
+gdnAj884/9gwv3RCd8HY+4PJ7xYH5/0/+T8+OS1k8mFWc48vDuD3dd6G44x
mbrLKZqSBMH+pm7ONyfD+allMIPc+/M6V5OFNHO97lHsO8Pgc7QgYkRm+c75
Oc2jMV2+sGiFItVYvLC8XJZ4L6cmBlewYESAEzAJdj/XS6Zrfwej07vVWkVM
BsAg7ApnLV1m1zZdV/aGiPDASyAK+CDlSLiVin/T3uimMxCcG/ncjlnig5Kj
URgOoBe2AyoIqGCRZzjRjGf37Npm0dyzu189+LqesvHxJJ1ktEvV7XpbCx1l
/q20fvRmhhADGvlxxDooM0A5aFcpQKIhuO1yRdOdJAfp7+hxQjrztN1i5Uwy
zVKKQpHhLDET6mJowApEsV0q7js2/oqtIqBrdQ2mxqC4iK5MafHTySvnTo+4
Bs4FvG8MuSe8Ayd8njcHPR+fHLwy7LrkdwEeH4x7gAQIibeGfGCG66MuYmDC
9b2Tnu+d8n98wvvxCd/7Y94Pxz1/dHbk08sTC3d68zNJC3fvqGcqIc3pORnS
DmFZurX0H//5f/fMarNsb7ZnOzTxAZOhhXY4sj1Q0qmKCj0qVDSd+rSzgb/X
lMYfomJ5EXgQncmmDxUMuKdwBW/AjosDEgcq8PWq1ZCCK1gQxiXULqg+Byrw
NQIYuN5IJurx2BqjnWCVGJyRdiatOARL9DqSZLSFGQRmzLV0bsdydorVTqps
rZacuNS2pTOchZV1YDV0pEkxlrCSaYlLpKS6ibFK4EGXhsSVMaTrh6XaO5bd
kmorjTwwzpDrKUluPXSFFOTAFsCJ0JQH3nNYrx/bEaqFYgmQ6BbyQAWWRsU1
0oW749YPf3zOHzjh7j856Dk96D3r95wddJ8fdL17wgdUgCUu+vuBjfdGPeAE
+KRvD3tAI28Nu98Zc33/lPcHpwLAA4DxyUk/kPPRhPdHpwI/vTgyd4c9pIxR
3P6UrqjMbeajPeSZDuwLm52L3pxem42VZoMc3c9R/xy4GpmajdybYq2vJMp1
aqJOJNBqPXVPtBhPE+jJOT7eOiPWhGHMcJAxz6VFMAOQAFuwZVlfPXzEp9ZG
ghWJPvX8jlhvZrs8wJTYkAbkCF7dqVTY9MHIcAJOB2CAI/AARVHPploF3KHJ
SpwYM+nFJOF64JOAMXDXa6EF6KsSjdVi6c82PvurX/4LK5IrZwo6pVCnAbC2
LZkGKsxESjOtGrCiH5pI907iKW3zVFSwUymR+u7hY6n0jtPTTKe2zRJMBktB
smIjJMQNSHeKRQhFjWbjuOM4uHdUXnZLJUALf86uZd6vVg7KDohiLZ+FYwtI
TP7DH5/y9AEJV0YHTw97TgU8ZwKui8Oet0743z/le2/C9+aw980R1/Vx3yen
Rr53evD9E14Iy3fH3cDJuyAKaE4e/T84M/jDs0MfnvB8fMoHqPyji4GFT3+2
cPvm4uSdXsH/baZFliV+BZbQAAUHHE1Osh5vZl51RXR6LjOz+PXhA9x9Mi+x
RxfRhTmFhOgNas7jVxnC4iwCiVSsrGg7GIDBo3AFNs5QkRAKaZs/h6El4A8y
sq1PtsWmY/dxXlxdxkWYDEdq+4EEvCrJMpqYHcfSOj2ci38ar6SPJlbF43CW
8QFkjAyTU+IJkts3is0n7b16PFcO5dTBhC7tlGyc9AhBMhpqNXQGGntXeznx
rLbw4CJYArKBJdnwNJMpSW0k1/M52DJsbiebodto9ILbPTMh5KBJEK0oUz8U
wADJAEuHlTIgsWdb+Lfbtg1V9snVq2f9/ReHfdcmBq+M+UERF0f9l8f8l4bd
b456b5wIvDXmvjLqvjrmugHeODMMvwNQefeE56MzXhzBG5AZ3z/t++QkWMUP
Ynlv1PX+mPuTk54fnvFm5xfxRU3fucnyCWkm1bZBoELbxOCihu4xsS5pdBlO
Iq3E6dlFM8jB7Fqdi03HCs5MYR0bEXCLjs7rvUdC3CzcZRspDYediEuCbAXw
wBUZwBs8bG0cNLvQ+dhxoKLcK72Ldwo57LtiA3sNOyJ9QKQOLLyKl7BwgrsJ
CxexFzAfrOlNp3SmkBIFx2gLKsBC4gbydqYNSqYPIhu/6f5+O96pZ4vs9yyU
mvkiJGUNfiKkvgH7wq5/mVlHxsB1cTMNQOJpd3utYKuuUC9Do1JgiYOy1S1k
sdYy6fVcFpuLTQcV6O7j5DhydZwLYzWFIGfTLO6XnR3L3LUtnECYXRwZGe7v
OxvwXh7xYL0x4j0XcF8eG7w67r8ygou8/s5JP/AACYHj+6cCb48N3DjpefeE
+8PTHvgg74z7Pz4b+NFF348uBGA7vnd6GEoDOBE74nmeaUFGzksPCBgD8nLu
3p3FaZnYP8W0Katrpqexv8CJ7rKGsOSJ5yzCofmYmtIGUqnJmTrWnPy3Er9S
VFBbLi9p4W6Gk5k5MlEtSCkRg5cKYEBwdu3abq1jClE4STKGlnBLI1hMUQEL
IunyqOJhyyqBHMAMWtZL0siTPUAC60Z+o1ioSm2tNqpzCg3+c440jGjwXHim
FyZ6kd37u7/5Xx7m9qtpiDpD6h5ZngcXqZHnEaQBa6LeR1lcDCnDKzKJAF0R
ZVCiU7SqUpkpNVdM/W8VufZsKsZNo9A1CnA2NRCBe19TYHzQXi6HI9wK2Bcq
EPgaBXorEBj4QwAPMOT1U6dHBvomfF7YC7DElTHPKR/sSP+5wMDFQRetxqjv
0lD/h2cC75/wv3fS//aE/+qI99qo7+qY572TnvdPuq4PD7w1DMbwff+s/wfn
ArA18E+hPUAg1KXjnv/hu7+1FyIzn/5iZvKWjMKbop68N7t0j4/7wUbP3PoU
BMIH/IErZqZEWvTGU2jdJjEwPaulm+p6aO13fGlR0me0HarxJOK92JteIpNt
FBjFSIRhpVAvKWYEQ1ICnYQwqKTi5WRMd1+bBNWIQDbgW1IMYNPBBgoJtRpk
bAPOHZiZEU7ABt+qtvXRKsloFGad5ET/Ldgeni+Lq5PmZryyZ7eYTDSdNcPs
WmV9/KW03hg281yG5jh6SS76nlmlCxAIM6EQonEGVHu1QOkM5CJcCYCBx0Ie
1gQ8RuMlASjQgooKTZ3zw2d5XQdZYLXwznx+vVSa/pM/OeF2jXlcJ3yuU17P
JQBgDEQxcH6IC+aDXDHkfg9e5ykvCAEOCFQE/NNrI35cB2PgOp2RYSx4r/2Q
GW+NDEBvvD/uggQFUWCF/vR28M7k0hSLbZgxl6JuyZ7f4WyBpUVaEFLHPd1u
/Ej/dIZlNuSHWc7Qy4QjTqag5f3Eg0ylgIfC5wAKPI5KrfTJQT26gGcKYOBH
zY4BFdyyiOxathf8l8xFUllCgaFiEnYBXx3Ocfts2yaIAkvtMrYYL4G0sQW4
iHOhkQz+Z1BEr3wlndoqFeGt0L5kM81UEjCjRs0bEhRiTpn5BcPuFstP1roP
62s7dnWz5DxsMiS+5VS16G69ZIMoONJK6jNl8mFGe8Gkb7QM0yC/LgOrAcYA
EhQeoAsFNuQoSEOrbvC2rZIJj0PxQ9lZLGldEHOmRgGkeu3UyXGPa8zbf9Lj
BjxgOC6NuUERsgYuDw9cP+EHJ7x/ClTghtR8Z3zw2qjn6ogbdHFliEh4/6Tn
2nA/rsBDeWeUjupbY/53JrxQm5Cg8Eo+mfDO3vx09vanU9Ccd2/P3r7JNrFp
jl1lbykfQTilE43U+5BazTkwhtgLFlSEZ6dD87O5aCofYwmrPm2QqJDecynf
XRJPcFXDmwADVIQKDMAAkOiFs1aWoTGcZELjD1iWpMNqGUKCDZtJqk21DjiC
E7DXuM3BA1jdYm7DyG6W8uuFDL5PaLNdh71C2IXDagUA6IUExcOlvBfLriYe
lK5HcE47nWok4uCoDdPaNMrdIjaIx428vVWwf/Pw6euNXSeWO1g7qKQMHQgA
VDCdkU73RunGU9oEJCWUNAGKQ62Qwe8FDrfpYPZKqmApoDwBBricAAbQ8rBS
OSgV79uVX+4f4J+QLrLaTJq9+9OfDA/0jbpdE37XuSHXG4GBt8a8b08MXh7y
QGFeCPQDGG8Oe8AJ0JlwPa6Pe7BAF1cHe+EsnIAorg4OACQ4vz7ie2986N2x
wRuSHwFd0BM54QUS5idvzd25iROiYlrmWYnalGcWTy2zCf0WmITzjhYXAAlQ
BwBDtMxOY8noXT461ghF9+uN9FFDMe2FPBpG3VLpCwMAFAbMk8JeHB8BDC27
1TFHJY6pCcuoijg0g8rIY52gjgbOyRsARj6ta8ssABiAB7T6tmXswc03ChT/
hby4tLQasBR6Bd+/mvjtQuHAdHYKpY107lWz8dsHB3AYt5wy3OSaFGBLBbV5
UG3vO80duw6P9fn+kw2ryoI39UYFDCozbGkCUtrXqOZRm1haItUJebB7UoPY
WAADUMHAVAYEmMUHxoc/sEr3HYdNDYIl6Q7LrBkGUDHUPzDmcY+6ByAqLovX
CQMBTrgK2QBrMui6MuxhSHOIpoRcMeHtoWLQBauh5HAtMND7cXzw3Ymh9ycG
oShgSuCGvDfS/70TPlgKcIWiAnuNpUP7ZUjFHeUHPQIA1BIzcwAAsBFf5DRm
mBVIglwopHONcIPo82TZGiadPjhioxPT93AUZlhUDHBKifSbw+9QZjgObvdy
oPQRYtILxlJtjXWDVDeZJuYuEw8k4ayyBOQ95NymkdsuFXZMY79CJ44WpGfB
1SUpbBxxuB73SiXcm48rdejAbib/olr9ptvtGqx7bEuLKKdP9O59c71YBgY6
zJizkk21hCNawkykqrlis2jTh00yAYcbHCf1HGmkLBkcrZwBILFAEbAa8tkK
VB1GUbkCVmzHLO2bRaACjAeW2yxCSJcY0SqVpn7200GiwjXmHoADAn4gJ0wM
Xhun03EN2z3KKDeOwAYQ8sYQw1mwGkyLBAaYJB3zgBauSWYEqABX3BgLvDce
oK4YIyrkxDt3i1wB8wE2wFq4e0cnVIijwQRZcHp5dUrajafvwXtdnp0NMiVK
m6JTE0vJRD4ahh1JrqivsSTV3fP64FpwRT0S+ZvPX1mhnk8KI2KEV+luRMJa
nsenXQeDnDkQ1ZBmWOUEQ9lHylBTA/h+RL+RK9RAbAo/7DtmDwyOuWsVCY9S
XlGhES2QNhaYAcZCzTr5pFTcMYzHtdqTag2o2DXt+1Z5Kyvl06ZJKUjrAJGZ
ZW+gpNV6piGVY2NgEvevyVFUsSRQoUsnLWtxiHYOYuHfqnMhnWJpoKJLr8Tg
B4A1yeYVFWSPPFBdPLTNQ9vGh4TG4PUi6/zBXbd+8g9hQU74vSf9bnDFOe8A
fBB4o3A6AAAAA/wA0wAAkC4GXbAs4AoA4M1BLglpeq4DNkOuG6Put8Eq3v7r
Q164JDAfgMRHE95PTgXgg8D7wP0+d+vTeTEfK3fvLt6+ra1hS3f5QLHEYuyw
s89Y1gzbkHFMz0znp+eys0uZ1QjQEl2YC8/NBOemtSNA51SAK5gxn2du1FlZ
2S/lC8tsFpOZNnBFCQlQB0hDAxfFo1pNlRPqKZSlhqpTZAnZutQXAR74ckSr
9/RhO5eChAASsK3cWau4YxdhPnCEgy93ZQY+/mfbW3i/5kSAB5x0shnsC8PI
hrFbZKJhz3LuV2q4SR/UazuWvV20dq2qJq1gQYAEaQmMiQLMaZ60JhEt+K2M
dCWTtXzeTCScdBpH7SwAVwASDcmAY3NFSBCl+NX4GIRELtvJ5LSaF7QAJO9a
gISJj6GuioIfkN6vlud/8WdDA32nAr5zg75Tnr5TnoGzfs+FIe/5QQ990lHf
5REv4AFsvCHAuD4eeHvEdSXQf8nPhAi4AgDAFeAEzABOgDUBNgiV4b53hvs/
GGMkHKZk+g67gdgWJOIhM7ewX6kJMCbFgkzzQc/ShK5dY6F79yrB4L/77tcP
0sUXtXZ46h6fA7WwGJmbUS0BcyNT1OY1XU4ZGYsl5qYzjG3OJ5cXdaiRFlQo
Ko4TH3wAuqZKpepGnX0pPLNxl7Uk/i+RQLj5KbUg4ApYEFAEIAGuAEUQD3YR
GkPo1wBmcP5svQUhqjAAAKAqgYqn7Ra2ALoCqDiwLKACO8UoolPBObCEjcCR
1r9gtpkGtZjybq5tWjV2nYsR0SodDsPE53QcC+Yjy+G6AAPQ0swXcQ62oUdj
muzgYEKceuZBrXpQtvCRxKXKHpXk0cR0snx077ZpHVSqoI4tyY49abeWbv58
sK9v3NM/4eo743Of9lNdnB/2XpDcKJjh0qBbsOGBiwoLAqUBfoClAG/AAQGN
KF28N+H7UOISAMYH474bowMEw8gA6OLGUN+HE96FybvJJT6kWPkhNHk3IVUT
DFtJS6k6pDjXaAZnNc/NpBbn7ueLv9rcDk9NSnfYMlzUmASsCpEI3q9TCKIy
XhVISK4s5cJBbSQshHohTe1GV2Ac1T/ESpGgKgrgpMwKScaCGqxuTShXSCFr
TsMUjF8JKmA+YDVwhDOCK0DCXtnECeChNgXsoag4KDuPGnWFx+NmA9/5Wia5
XcjtF0uPK1XcoVv5/GHFPixX9+3KrmE+acLfqJEuSvbj9sbLjZ1WpqDTh3pt
FMk8G7ql5wIWZ7debxYK1BUQorrgQeQZ1ni5s6sJDhZLCCcImAkMqote/RV9
KMB7Q/hhW5gNS/MgP/vkk8G+foiKM37PWb8LkAAwsC4Mw1hQYb457AUwAI/L
khcDMBj8HPK8EXBdCAxcGvZAb4AfAIAPxlzfgxMqSTFITeAERuSjEz7AA6hY
vH3PSme0gVQfck07wqj1gl5RvaGxSkYtZqflgddT2fnFLGdTLOqDHhi/ktmJ
xUScmdPZWX3soD5BTIv/NReWXJilyYiENdbNGhsREsdDVjUZqvKsIUG/iqhN
iTyUNMTX8z7EJ8WOq6hYz6UBBuhM0oVp4PpB1X5QKysq4KSovITJwPFBuQyK
6GbTO0Ye6m6zUHxUtcnqJQvweF3bfZ1/9I3x/KmzfkhmMHReLrgC+pMxijQ7
Bapp5tHWCvaWWdXOi71aE0q1JqkTjYuCLsAbMDFrpRI7CHJUmOoB7RYL+DDU
GOxDN6RRKCdiw9CQxZZIILDKs2bzYbn2o6tv+fv6Rl394Ic3Rrynfe6TXpBG
H8zHeX+fAABgGLjo7Qd1AB5YZ4Y8Z3wDWBeG/BCokCJQmOAHlluMuT8cd1Nk
TvjEB4EWdV0fpdsC12Pm1qfievSeOgqDsswE2V19OBRsAcCQWF6SMolFeXzn
HLCh2Q1tK9b8F4gCFzUdFusNZGauPBNcgaKIzs9qMR6IQvNi+owYTkKLRXCU
PFeyLENKrXicDh1bNtJYlVS8mk4wAZpL4whUABsaxpTQU1rjFUoUWKAF4AQ2
5WG9omYFV3ACPsEWgC4eVhz1VuC5EBWg9FwGzghepWNYqX0RP/xff/8f/9//
8H/9q+qvNo3yrl3WZ5zBSYQtOKw1YEGoRXOlB+2D7fI6XFRoBublcxxqB3iw
GkeyJw1OvJEpqaleIowSQlABcCrL4bOJD0UwgK8IXZEc6rDsmyYkMbDx848/
8vb1wQc55es/O+gGKnByDlQw6D3tpcw4F3C/EfBcDXiu+PoADGiMCW8f1gmf
C5CACMGrjFGM+m4MuT8cdX18goGs98f8751ww1uB6rg26sKan7w99enPJWB1
V1GhncI0H5OTOOfTSO9OatASRvP5zgsrUZR6/oXQzBT2muuo5VwbSxUVKi0U
FTrm6Lhwl5FtlliQH3REXknK52i1K2WGrZjiZDNINSOFlyxoTGn+CyzBkGAh
p/lQas5c6kV3DahoZ5M4AiSwIPi2sdR8PGpUn2+08eWLewLqLoIc8JIaHZ4X
DVgQ7Ag3peo8qdefxA7+7q//j//n7/7v31nPsNHwO3D7s3FDohDSysH4VT1b
/OLw5eu9F42sI13/fAAxTtasynats1Nfr+UNncUNSKyXzKaUWjFsVTSed9aA
Q/gaO+IcgRmYDzVL+AYeVaugMsEMnZRDq/yoUsenyi3MjLoHxj2MdZ8RoqDA
CLjO+vtPe13nAt7zLNFkIALCElrijB946D8VwPtdgBDec9EPGASAivdGqSs+
nPDDaaXSGA+Ir+rWjIkGr4AKEII+dRQGQtOdwAMbSyU1pk3o6ZUVPkd4dl5j
3VhAggYwcYXEItV6akFknskKwIClM47ACZobFZ80KEOqE0dFOKQI3IOVMKuq
qvIwHUcUBdtApL5CE+WalQZFgBma6TgdPYlX4Ah4ABjYbuwstAF2/0mLgQj8
iKWmhN5KCd5o5b5jSVjAwvmTauUAZqhobuYkmmFaO9na4+iTP0+/epbvaFXM
liP+SKGgiQ8tv6eWKNZq2epn+y/XS+16prJm1Jp5e6u61i239lubTLnm8jqg
4KDRxD9UVGxKABaQwO5D7u5I6UX3yKw8LJvPqvxUAAaMy+NG+zcPn8LeNVKR
S6dGhvr7xt1uMMNJN/mBdBEgS1zwu4EKaIkbYz4WagIVvr5Tg/0QHhCop9zu
M34fK3t9AwTGOJNicFfxtrfG/HBmGRIf9kCNXBv3Lty9A+9DLYikQu4cCwxG
Le7c4aMnJZClQa3I3FRsYQYsgX1fvSeqcnEe0oIGRcqu6JzOzgJRml5XSIAr
WOO9unzUW8pQp3qgMoadT2nkxOOVsBOFACjBXoi0YA0VzIeTYBOQpsZYPmFR
POD2h10gdRQyG0exLEpNqIgSj7AR5AGz+LhZAzye1KswHFi8Uqs8quJmNPDj
40oZu/CkDCCZFCf5HIwIs5mpJGshjPKWae9XGl2LHTeP1zdaqXyvp6NIe7Hp
NO939l90XzxoPPjr7/5lK1+pZUo6UZnjznQiIkOgPGlKLRbVplGCIYNpOLBK
gMFGPsMoK/gtl31slX6zt/2s6jx0bMAGENqzyhC9eAP+ovfevARpMeGjqGCJ
ZsBHzRAYuDjsgb0AKt4c9mjI4qJkUUEXp/3QHgOgi7Me1wW/981B3yUPfVVI
U5AMrl8I9F/w9V0dI8+c9/fDiwEkpDiTm84ch4QxmVIXDGj6Q6WmplPVJdFM
qHSK8UTTYep0HJsP/VEHHGkxHiwIuEJRIfVXHNteZBUl5+YZoei20/r10++s
SKacjAEY6pWwAC+ZkIqmlFoQ5j7y6VYmgSOzomI4QB3Qlo+aDbXRWPiSlRCA
gZdrLUGC/dl663HVxnpaq361tfmq3Xq11nhUsXCF+tOhQYfFkf+/18vJRm+R
CvBKHjbbAAkVY6G4I92dklRtPW4e/NPPf7df3W7ltBtRmjUk8sYsSSrbKZYU
Fb22rwIlxLcHB/hU+IQKY5w8cEov6+V/+fTx81r5CfVPRYP26jQ9qNf+9Af/
AKgY8dANATnAEzk/CDy4sbNABX6El3ptYvDqsO+tMe/VMc/VCbxEYMC+AEhv
+H0QIefd/Rd9LMk4PeilRPG7roz2vT3hvzbqAaiujfkpNe/ekWAmFWZ8iaMJ
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
wFVpbyQ2AAlxVBsUFf8DvDL9Vw==
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Make" -> "Canon", "Model" -> "Canon EOS 6D", "XResolution" -> 240, 
        "YResolution" -> 240, "ResolutionUnit" -> "inch", "Software" -> 
        "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "DateTime" -> 
        DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", "Gregorian", -5.], 
        "ExposureTime" -> Quantity[14, "Seconds"], "ExposureProgram" -> 9, 
        "ISOSpeedRatings" -> 5000, "SensitivityType" -> 2, 
        "RecommendedExposureIndex" -> 5000, "ExifVersion" -> "2.30", 
        "DateTimeOriginal" -> 
        DateObject[{2018, 8, 13, 22, 58, 26.}, "Instant", "Gregorian", -5.], 
        "DateTimeDigitized" -> 
        DateObject[{2018, 8, 13, 22, 58, 26.}, "Instant", "Gregorian", -5.], 
        "ShutterSpeedValue" -> -3.807355, "ExposureBiasValue" -> Quantity[0., 
          IndependentUnit["exposure values"]], "MeteringMode" -> 
        "Multi-segment", "FlashInfo" -> 
        Association[
         "FlashUsed" -> False, "FlashFiringStatus" -> 
          "No strobe return detection function", "FlashMode" -> 
          "Compulsory flash firing", "FlashFunctionPresent" -> True, 
          "RedEyeCorrection" -> False], "SubSecTimeOriginal" -> 
        Quantity["66", "Milliseconds"], "SubSecTimeDigitized" -> 
        Quantity["66", "Milliseconds"], "ColorSpace" -> "RGBColor", 
        "FocalPlaneXResolution" -> 1520, "FocalPlaneYResolution" -> 1520, 
        "FocalPlaneResolutionUnit" -> "cm", "CustomRendered" -> 
        "Normal process", "ExposureMode" -> "Auto", "WhiteBalance" -> "Auto", 
        "SceneCaptureType" -> "Standard", "BodySerialNumber" -> 
        "412151000003", "LensSerialNumber" -> "0000000000"], "IPTC" -> 
      Association[
       "Application2" -> 
        Association[
         "DateCreated" -> DateObject[{2018, 8, 13}, "Day", "Gregorian", -5.], 
          "DigitizationDate" -> 
          DateObject[{2018, 8, 13}, "Day", "Gregorian", -5.], 
          "DigitizationTime" -> TimeObject[{22, 58, 26.}, TimeZone -> 0], 
          "RecordVersion" -> 4, "TimeCreated" -> 
          TimeObject[{22, 58, 26.}, TimeZone -> 0]], "Envelope" -> 
        Association["CharacterSet" -> "UTF8"]], "XMP" -> 
      Association[
       "DublinCoreSchema" -> Association["Format" -> "image/jpeg"], 
        "PhotoshopSchema" -> 
        Association[
         "DateCreated" -> 
          DateObject[{2018, 8, 13, 22, 58, 26.}, "Instant", 
            "Gregorian", -5.]], "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2018, 8, 13, 22, 58, 26.}, "Instant", "Gregorian", -5.],
           "CreatorTool" -> "Adobe Photoshop Lightroom Classic 8.2 (Windows)",
           "MetadataDate" -> 
          DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", "Gregorian", -5.],
           "ModifyDate" -> 
          DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", 
            "Gregorian", -5.]], "MediaManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "4E256E3D169231D253D9801EB7A3E49E", 
              "OriginalDOcumentID" -> "4E256E3D169231D253D9801EB7A3E49E"]], 
          "DocumentID" -> "xmp.did:8252b284-361d-9c4b-a0cf-02bea81fb97f", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:8252b284-361d-9c4b-a0cf-02bea81fb97f", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]], "InstanceID" -> 
          "xmp.iid:8252b284-361d-9c4b-a0cf-02bea81fb97f", 
          "OriginalDocumentID" -> "4E256E3D169231D253D9801EB7A3E49E"], 
        "RightsManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "4E256E3D169231D253D9801EB7A3E49E", 
              "OriginalDOcumentID" -> "4E256E3D169231D253D9801EB7A3E49E"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:8252b284-361d-9c4b-a0cf-02bea81fb97f", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]], "PagedTextSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "4E256E3D169231D253D9801EB7A3E49E", 
              "OriginalDOcumentID" -> "4E256E3D169231D253D9801EB7A3E49E"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:8252b284-361d-9c4b-a0cf-02bea81fb97f", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{3.7643353992666445`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"c880d280-e1c5-49bc-8af1-8bebc06e92bf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvUuT41qWpdcmTTTUX9BfUGXeiHB3vh8gQJAACYDvtzvdPdw93hH3xr15
b2ZWvqu6sqqzHlK3qVptNepuK2uTrK1HGshkGmikkX6Rvr0XyLiS2XEYHARB
EHudtdfeZ5/D/+7wZnz7X/2Lf/EvPvw3bMb7bxrv3++/zf5b/ilef3h59/p4
E77+eLw7vn9++K85+J/LP9u/+uqrxuUl28qzZ43nLxrPL7tXlc7lVfPFRfP5
i6jWaj2/GrQDWq/SSFqdtBvQonpjPkhGnc6g0aCNgm4ehcNmkyNJq2VHOp1J
r3cYZ9MgWPb7x6Jgu+73N3F8PRrdFcV9Pnk1XTxMZvMwznu9VZpuR6NVnGSd
TuvZi/bzq9azy6bdz4v6s+fNF1eNy0rrosKO9msvLrnV+rOLYTsZtPq81PIb
rv7Zs8qf/aTyk5/yLt4bVBvdy1r7hX2jzotK/acvKv/9V52LavPZJcd5S1ht
stOt1OsXV1yz+vzi8tlztmq9ZjtqtHkgYa1+XK7iZqt1cdmq1Lr1Zueq0r6s
hvVO41mt8byi99Yvqu1qealGpcrO+bLVixe1y6vK86vKs8va89rlV7xUrb3g
jRWOcJ3OVYMLcn7zqkrjO/Iurtaq1blUu9rs1Fqc0623G3yjapMtV2he1fUv
O1wqaHTstFqr2+g0K40637FS43Ob1VqHN17VOdL0bfX5Ve2ialeuN9q1VvVF
ha0uwgV7TS7InVxVnz+//OlP/clfBJXqsNPjcYGErBdfL9ZpECXt3rDdofGI
QMUo6GVBkLbbZ2ywH9fr7LAFEkUQzMNoFQ+W/XgzTLbx8DYr1lHMzs14fJ8X
j1n23f7mOM4Pec4JNHZmcdy9uGiAhGeXABJ7AQOsb3a/MCS0L6+uvnrO0+Oh
8VJw1eYmuaWiH0XVKtbHiI0XzziN82V9GhcEDFyw+dUFeAMMwVUdzHOQV/kX
i2A+Los5vpjSDG33YGDwNhuPO40mluKJmVmfg6gmqPDbq9WfmU0FBl2K69il
Li4xhHBS/enz2leXAkPjooEJ2BnHaT4cYylOAAm8Uddhy780M3S9jfWTcCBI
yLhm5UqjVWnYvxe8pcq+XZxvWmmADcBQrzZqlTqNd7V471WdLWcaSMB2vQFm
QEWIfXsxUOGagyCEKIBEpwZ+LngC/WaLTjFotelK7YtLdaW41e03mrG/NBvS
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
vix5zKX4FKmUhXyCik6pqYW00qqOteP/ASz4WDA=
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Make" -> "Canon", "Model" -> "Canon EOS 6D", "XResolution" -> 240, 
        "YResolution" -> 240, "ResolutionUnit" -> "inch", "Software" -> 
        "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "DateTime" -> 
        DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", "Gregorian", -5.], 
        "ExposureTime" -> Quantity[14, "Seconds"], "ExposureProgram" -> 9, 
        "ISOSpeedRatings" -> 5000, "SensitivityType" -> 2, 
        "RecommendedExposureIndex" -> 5000, "ExifVersion" -> "2.30", 
        "DateTimeOriginal" -> 
        DateObject[{2018, 8, 13, 22, 58, 42.}, "Instant", "Gregorian", -5.], 
        "DateTimeDigitized" -> 
        DateObject[{2018, 8, 13, 22, 58, 42.}, "Instant", "Gregorian", -5.], 
        "ShutterSpeedValue" -> -3.807355, "ExposureBiasValue" -> Quantity[0., 
          IndependentUnit["exposure values"]], "MeteringMode" -> 
        "Multi-segment", "FlashInfo" -> 
        Association[
         "FlashUsed" -> False, "FlashFiringStatus" -> 
          "No strobe return detection function", "FlashMode" -> 
          "Compulsory flash firing", "FlashFunctionPresent" -> True, 
          "RedEyeCorrection" -> False], "SubSecTimeOriginal" -> 
        Quantity["59", "Milliseconds"], "SubSecTimeDigitized" -> 
        Quantity["59", "Milliseconds"], "ColorSpace" -> "RGBColor", 
        "FocalPlaneXResolution" -> 1520, "FocalPlaneYResolution" -> 1520, 
        "FocalPlaneResolutionUnit" -> "cm", "CustomRendered" -> 
        "Normal process", "ExposureMode" -> "Auto", "WhiteBalance" -> "Auto", 
        "SceneCaptureType" -> "Standard", "BodySerialNumber" -> 
        "412151000003", "LensSerialNumber" -> "0000000000"], "IPTC" -> 
      Association[
       "Application2" -> 
        Association[
         "DateCreated" -> DateObject[{2018, 8, 13}, "Day", "Gregorian", -5.], 
          "DigitizationDate" -> 
          DateObject[{2018, 8, 13}, "Day", "Gregorian", -5.], 
          "DigitizationTime" -> TimeObject[{22, 58, 42.}, TimeZone -> 0], 
          "RecordVersion" -> 4, "TimeCreated" -> 
          TimeObject[{22, 58, 42.}, TimeZone -> 0]], "Envelope" -> 
        Association["CharacterSet" -> "UTF8"]], "XMP" -> 
      Association[
       "DublinCoreSchema" -> Association["Format" -> "image/jpeg"], 
        "PhotoshopSchema" -> 
        Association[
         "DateCreated" -> 
          DateObject[{2018, 8, 13, 22, 58, 42.}, "Instant", 
            "Gregorian", -5.]], "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2018, 8, 13, 22, 58, 42.}, "Instant", "Gregorian", -5.],
           "CreatorTool" -> "Adobe Photoshop Lightroom Classic 8.2 (Windows)",
           "MetadataDate" -> 
          DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", "Gregorian", -5.],
           "ModifyDate" -> 
          DateObject[{2019, 4, 15, 11, 42, 55.}, "Instant", 
            "Gregorian", -5.]], "MediaManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "7C2478F17925472D1867F4AADF8E77FF", 
              "OriginalDOcumentID" -> "7C2478F17925472D1867F4AADF8E77FF"]], 
          "DocumentID" -> "xmp.did:1ac22768-cd03-bb43-bbff-8756d4e077d9", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:1ac22768-cd03-bb43-bbff-8756d4e077d9", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]], "InstanceID" -> 
          "xmp.iid:1ac22768-cd03-bb43-bbff-8756d4e077d9", 
          "OriginalDocumentID" -> "7C2478F17925472D1867F4AADF8E77FF"], 
        "RightsManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "7C2478F17925472D1867F4AADF8E77FF", 
              "OriginalDOcumentID" -> "7C2478F17925472D1867F4AADF8E77FF"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:1ac22768-cd03-bb43-bbff-8756d4e077d9", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]], "PagedTextSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "7C2478F17925472D1867F4AADF8E77FF", 
              "OriginalDOcumentID" -> "7C2478F17925472D1867F4AADF8E77FF"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> 
              "converted from image/x-canon-cr2 to image/jpeg, saved to new \
location"], "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:1ac22768-cd03-bb43-bbff-8756d4e077d9", "When" -> 
              DateObject[{2019, 4, 15, 11, 42, 55}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{3.764335399406275*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"a6a7fcf2-1d4d-4390-badb-6752223c8b25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0008467`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7643353994122505`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"f5558ad6-45d2-402a-86a2-946dad5b2c8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0007427`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.764335399417237*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"a866592f-37c4-4209-86fa-71a00aed725e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7590204645167704`*^9, 3.7590204722881536`*^9}, {
   3.761314219054098*^9, 3.761314223198064*^9}, {3.7614921477045183`*^9, 
   3.7614921482850933`*^9}, 3.7614986983358374`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7613177472030277`*^9, 3.7613177616093187`*^9}, 
   3.7613178467393723`*^9, {3.761567452458677*^9, 3.7615674963005896`*^9}, {
   3.761568065789394*^9, 3.7615680687004986`*^9}, 3.7615681969019747`*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fullImage", " ", "=", " ", 
    RowBox[{"GetFullEncodedImage", "[", "m1diff", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"file", ",", " ", "fullImage", ",", " ", "\"\<Bit\>\""}], "]"}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Note", " ", "that", " ", 
     RowBox[{"0", "'"}], "s", " ", "will", " ", "automatically", " ", "be", 
     " ", "padded", " ", "to", " ", "the", " ", "end", " ", "until", " ", 
     "the", " ", "file", " ", "contains", " ", "a", " ", "multiple", " ", 
     "of", " ", "8", " ", "bits", " ", 
     RowBox[{"(", 
      RowBox[{"byte", " ", "representation"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"originalImageSize", " ", "=", " ", 
    RowBox[{"mSize", " ", "*", "nSize", "*", 
     RowBox[{"(", 
      RowBox[{"3", "*", "8"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fileImport", " ", "=", " ", 
     RowBox[{"Import", "[", 
      RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Length", "[", "fileImport", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "m1diff"}]}]], "Input",
 CellChangeTimes->{{3.759064058876412*^9, 3.7590640743552003`*^9}, {
   3.7590681013963747`*^9, 3.7590681258881207`*^9}, {3.759068220372489*^9, 
   3.7590682218259583`*^9}, {3.759068361734479*^9, 3.759068393267211*^9}, {
   3.759068634942246*^9, 3.759068640808556*^9}, {3.7590686942515154`*^9, 
   3.7590687468672056`*^9}, {3.759100037178607*^9, 3.759100049437554*^9}, 
   3.759444070465461*^9, {3.759444109569455*^9, 3.7594441628159533`*^9}, {
   3.7594446358120775`*^9, 3.7594446408911033`*^9}, {3.759444753043398*^9, 
   3.759444753458494*^9}, {3.761314635685277*^9, 3.761314682329028*^9}, 
   3.761314871107115*^9, {3.7613178497362175`*^9, 3.7613178526290646`*^9}, {
   3.761317885642584*^9, 3.76131790426715*^9}, {3.7613180538020535`*^9, 
   3.761318062904591*^9}, 3.7613181143616743`*^9, {3.761318588466111*^9, 
   3.761318604731614*^9}, {3.7613186440758104`*^9, 3.7613186592699547`*^9}, {
   3.76131899479958*^9, 3.7613190172242346`*^9}, {3.761319117764598*^9, 
   3.761319130287552*^9}, {3.7613194624405975`*^9, 3.761319467104563*^9}, {
   3.7613197345055785`*^9, 3.7613197374959774`*^9}, {3.761319769170597*^9, 
   3.761319769305215*^9}, {3.7614961384782543`*^9, 3.76149613913678*^9}, 
   3.7614963422706695`*^9, {3.761496865142643*^9, 3.76149686620165*^9}, 
   3.761497252595812*^9, {3.7614973493682446`*^9, 3.761497351045762*^9}, {
   3.761497387325012*^9, 3.761497387515499*^9}, {3.761497533032812*^9, 
   3.7614975743550835`*^9}, {3.7614981665442696`*^9, 3.761498179595831*^9}, {
   3.7614985748933296`*^9, 3.761498583397363*^9}, {3.7614986167230883`*^9, 
   3.761498617149608*^9}, {3.7614986642371397`*^9, 3.761498668309355*^9}, {
   3.7614987013637447`*^9, 3.7614987045479174`*^9}, 3.7615683716000004`*^9, 
   3.7618405797786107`*^9, {3.761842194382866*^9, 3.761842209528083*^9}, 
   3.761842639469219*^9, 3.7618445134431415`*^9, {3.761848515895196*^9, 
   3.7618485189047995`*^9}, 3.7619158001727424`*^9, 3.7619409074386563`*^9, {
   3.7620313862492857`*^9, 3.762031441607155*^9}, {3.762031475208143*^9, 
   3.762031476182773*^9}, {3.762031588328411*^9, 3.7620315885029497`*^9}, {
   3.7620323971600018`*^9, 3.762032403184638*^9}, {3.762032618508957*^9, 
   3.7620326454231095`*^9}, 3.762032811315118*^9, {3.7620330776481247`*^9, 
   3.762033078471923*^9}, {3.763204477492114*^9, 3.7632044991540513`*^9}, {
   3.763204782707513*^9, 3.763204832883462*^9}, {3.763296426854227*^9, 
   3.763296443781047*^9}, {3.763296518996748*^9, 3.763296556498747*^9}, 
   3.763296851767126*^9, {3.763297297217657*^9, 3.763297297871915*^9}, 
   3.763335249615141*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Optimum block factor is \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Optimum block factor is ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7643354056580496`*^9},
 CellLabel->
  "During evaluation of \
In[116]:=",ExpressionUUID->"ab36d178-a4b3-403d-96b5-b85bd14b5260"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "0", ",", 
           TemplateBox[{"197979"},
            "OutputSizeLimit`Skeleton"], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 28420670457473331213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 28420670457473331213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 28420670457473331213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420670457473331213 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643355838426437`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"cfae1cf1-a81e-4159-b19f-c4b88c3281df"],

Cell[BoxData["760416"], "Output",
 CellChangeTimes->{3.764335584032155*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"6e485db2-3c6c-4b9c-b8c4-3ba08dc41627"],

Cell[BoxData["401552"], "Print",
 CellChangeTimes->{3.764335584121915*^9},
 CellLabel->
  "During evaluation of \
In[116]:=",ExpressionUUID->"c1d1c6dc-83ce-4af7-8ae3-132bf438c31c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", 
               RowBox[{"-", "4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"-", "4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "4"}], ",", 
               RowBox[{"-", "7"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
             TemplateBox[{"145"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", "0", ",", 
               RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", "2", ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "3", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", 
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "4"}]}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 28420670457473331213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 28420670457473331213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 28420670457473331213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420670457473331213 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643355842585487`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"09875b42-ac4a-454b-b18a-8bcfce0961a2"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.7632050002563095`*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"b5452e7e-bebf-4086-9309-95debb356f34"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.761568203998049*^9, 3.7615682501418576`*^9}, {
   3.7615687960583982`*^9, 3.7615688187011375`*^9}, {3.761568853195107*^9, 
   3.761568854776908*^9}, 3.761568897563136*^9, 3.7615689717237625`*^9, 
   3.76184057978659*^9, {3.7618418268290386`*^9, 3.761841849235985*^9}, {
   3.7618418845892086`*^9, 3.7618418889045315`*^9}, {3.7618420653243895`*^9, 
   3.7618420748660417`*^9}, 3.7618422164679074`*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.761842275774568*^9, 3.7618423379382277`*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.76184536933134*^9, 3.761845372939254*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d6b43cd3-ab94-4e5a-8b2d-1d46d51ae608"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7618481808579626`*^9, 3.76184818452361*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"c8f354c7-3ecb-4717-956a-2eb20d8bb215"]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.05 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 35327, 698, 2473, "Input",ExpressionUUID->"e617e23e-041d-4206-acc1-d548565b4fc3"],
Cell[35910, 722, 83456, 1396, 205, "Output",ExpressionUUID->"c880d280-e1c5-49bc-8af1-8bebc06e92bf"],
Cell[119369, 2120, 82246, 1376, 205, "Output",ExpressionUUID->"a6a7fcf2-1d4d-4390-badb-6752223c8b25"],
Cell[201618, 3498, 208, 4, 35, "Output",ExpressionUUID->"f5558ad6-45d2-402a-86a2-946dad5b2c8d"],
Cell[201829, 3504, 206, 4, 35, "Output",ExpressionUUID->"a866592f-37c4-4209-86fa-71a00aed725e"]
}, Open  ]],
Cell[202050, 3511, 307, 5, 30, "Input",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],
Cell[202360, 3518, 331, 5, 30, "Input",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],
Cell[CellGroupData[{
Cell[202716, 3527, 3935, 68, 229, "Input",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],
Cell[206654, 3597, 334, 8, 23, "Print",ExpressionUUID->"ab36d178-a4b3-403d-96b5-b85bd14b5260"],
Cell[206991, 3607, 10488, 261, 187, "Output",ExpressionUUID->"cfae1cf1-a81e-4159-b19f-c4b88c3281df"],
Cell[217482, 3870, 158, 3, 35, "Output",ExpressionUUID->"6e485db2-3c6c-4b9c-b8c4-3ba08dc41627"],
Cell[217643, 3875, 180, 4, 23, "Print",ExpressionUUID->"c1d1c6dc-83ce-4af7-8ae3-132bf438c31c"],
Cell[217826, 3881, 12529, 333, 187, "Output",ExpressionUUID->"09875b42-ac4a-454b-b18a-8bcfce0961a2"]
}, Open  ]],
Cell[230370, 4217, 154, 3, 30, "Input",ExpressionUUID->"b5452e7e-bebf-4086-9309-95debb356f34"],
Cell[230527, 4222, 532, 8, 30, "Input",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],
Cell[231062, 4232, 175, 3, 30, "Input",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"],
Cell[231240, 4237, 174, 3, 30, "Input",ExpressionUUID->"d6b43cd3-ab94-4e5a-8b2d-1d46d51ae608"],
Cell[231417, 4242, 176, 3, 30, "Input",ExpressionUUID->"c8f354c7-3ecb-4717-956a-2eb20d8bb215"]
}
]
*)


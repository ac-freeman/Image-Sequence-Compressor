(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    169646,       3190]
NotebookOptionsPosition[    167375,       3152]
NotebookOutlinePosition[    167770,       3169]
CellTagsIndexPosition[    167727,       3166]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\reid1\\\\IMG_20190415_184903_003.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\reid1\\\\IMG_20190415_184903_004.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m1diff", " ", "=", " ", 
    RowBox[{"ImageSubtract", "[", 
     RowBox[{"image2", ",", "image1"}], "]"}]}], ";"}], " ", "//", " ", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image1", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image1", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"m1diff", " ", "=", " ", 
     RowBox[{"image2", " ", "-", "image1"}]}], " ", ";"}], "//", 
   "AbsoluteTiming"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "store", " ", "m1diff", " ", "as", " ", "its", " ", "twos", " ", 
    "complement", " ", "array"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nSize", " ", "=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"file", "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulativeArr", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwosComplement", "[", "n_", "]"}], ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"elemLength", " ", "=", " ", 
     RowBox[{
      RowBox[{"IntegerLength", "[", 
       RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Positive", "[", "n", "]"}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "2", ",", "elemLength"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"n", ",", "2", ",", "elemLength"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "0"}], ",", 
              RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], 
         "+", "\[IndentingNewLine]", "1"}], ",", "2", ",", "elemLength"}], 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BitSize", "[", "a_Integer", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"len", " ", "=", " ", 
     RowBox[{"BitLength", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"len", " ", "\[Equal]", " ", "0"}], ",", " ", 
      RowBox[{"-", "1"}], ",", "len"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"BitLength", "[", "0", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TwosComplementSuperList", "[", "aa_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"TwosComplement", ",", " ", "aa", ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PadElem", "[", 
    RowBox[{"a_List", ",", " ", "blockUnitLength_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"PadLeft", "[", 
       RowBox[{"#", ",", " ", "blockUnitLength", ",", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", "a"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Pads", " ", "left", " ", "with", " ", 
       RowBox[{"0", "'"}], "s", " ", "if", " ", "positive"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "'"}], "s", " ", "if", " ", "negative"}], ";", " ", 
       RowBox[{
       "makes", " ", "each", " ", "number", " ", "to", " ", "be", " ", 
        "blockUnitLength"}]}]}], "*)"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WriteElem", "[", 
    RowBox[{
    "mat_List", ",", " ", "z_Integer", ",", " ", "m_Integer", ",", " ", 
     "n_Integer", ",", " ", "blockUnitLength_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"blockUnitLength", " ", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", " ", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Dimensions", "[", "mat", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], " ", "&&", " ", 
          RowBox[{"n", " ", "\[LessEqual]", " ", 
           RowBox[{
            RowBox[{"Dimensions", "[", "mat", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"elem", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"mat", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "[", 
             RowBox[{"[", "n", "]"}], "]"}], "[", 
            RowBox[{"[", "z", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Positive", "[", "elem", "]"}], ",", " ", 
            RowBox[{"cumulativeArr", " ", "=", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cumulativeArr", ",", " ", "0"}], "]"}]}], ",", " ", 
            RowBox[{"cumulativeArr", " ", "=", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"cumulativeArr", ",", " ", "1"}], "]"}]}]}], "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"cumulativeArr", " ", "=", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"cumulativeArr", ",", " ", 
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"elem", ",", "2", ",", 
               RowBox[{"blockUnitLength", "-", "1"}]}], "]"}]}], "]"}]}], 
          ";"}], ","}], "\[IndentingNewLine]", "]"}], ","}], 
      "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlock", "[", 
    RowBox[{
    "a_List", ",", "startR_Integer", ",", " ", "startC_Integer", ",", " ", 
     "blockFactor_Integer"}], "]"}], ":=", 
   RowBox[{"(", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subArray", " ", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"startR", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", 
            RowBox[{"(", 
             RowBox[{"startR", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}], " ", ",", 
         RowBox[{"startC", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"nSize", ",", 
            RowBox[{"(", 
             RowBox[{"startC", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"blockUnitLength", " ", "=", " ", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"BitSize", ",", " ", "subArray", ",", " ", 
          RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "+", "1"}]}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Look", " ", "at", " ", "the", " ", "length", " ", "of", " ", "arrays", 
       " ", "at", " ", "level", " ", "2", " ", 
       RowBox[{"(", 
        RowBox[{"the", " ", "lists", " ", "of", " ", "bits", " ", "in", " ", 
         RowBox[{"two", "'"}], "s", " ", "complement", " ", "for", " ", 
         "each", " ", "matrix", " ", "element"}], ")"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"blockDef", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"blockUnitLength", ",", " ", "2", ",", " ", "4"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", "blockDef"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"WriteElem", "[", 
        RowBox[{
        "subArray", ",", "z", ",", " ", "m", ",", "n", ",", 
         "blockUnitLength"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "1", ",", " ", "blockFactor"}], "}"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", "blockFactor"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "1", ",", "3"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"please", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteBlockNumberData", "[", 
   RowBox[{
   "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
    "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"GetBlock", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", "blockFactor"}], "]"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlockSpace", "[", 
    RowBox[{
    "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
     "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"startR", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}], "+",
        "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"startC", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}], "+",
        "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"blockFactorWidth", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"mSize", "-", "startR", "+", "1"}], ",", "blockFactor"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"blockFactorHeight", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"nSize", "-", "startC", " ", "+", "1"}], ",", "blockFactor"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"subArray", " ", "=", " ", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"startR", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", 
            RowBox[{"(", 
             RowBox[{"startR", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}], " ", ",", 
         RowBox[{"startC", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"nSize", ",", 
            RowBox[{"(", 
             RowBox[{"startC", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Map", "[", 
           RowBox[{"BitSize", ",", " ", "subArray", ",", " ", 
            RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "+", "1"}], ")"}], "*", 
       "3", "*", 
       RowBox[{"(", 
        RowBox[{"blockFactorWidth", "*", "blockFactorHeight"}], ")"}]}], "+", 
      "4"}]}], "\[IndentingNewLine]", ")"}]}], 
  RowBox[{"(*", 
   RowBox[{"TODO", " ", "map", " ", "bitsize", " ", "instead"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetOptimumBlockFactor", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentMin", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"currentBlockFactor", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "change", " ", "max", " ", "blockfactor", " ", "size", " ", 
       "calculation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
       RowBox[{"i", " ", "<=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"mSize", ",", "nSize"}], "]"}]}], ",", " ", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tempSize", " ", "=", " ", 
          RowBox[{"GetImageSize", "[", 
           RowBox[{"mat", ",", " ", "i"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Current block factor: \>\"", ",", " ", "i"}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Current size: \>\"", ",", " ", "tempSize"}], "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentMin", " ", "\[Equal]", " ", 
            RowBox[{"-", "1"}]}], ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
             RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], ",",
            " ", "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tempSize", " ", "<", " ", "currentMin"}], ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
               RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
             ",", " ", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"tempSize", " ", ">", " ", 
                RowBox[{"2", "*", "currentMin"}]}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"i", " ", "=", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"mSize", ",", "nSize"}], "]"}]}], "*)"}], ","}], 
              "]"}]}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Optimum block factor is \>\"", ",", "currentBlockFactor"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "currentBlockFactor", "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFullEncodedImage", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"blockFactor", " ", "=", " ", 
      RowBox[{"GetOptimumBlockFactor", "[", "mat", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"mSize", ",", " ", "2", ",", " ", "16"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"nSize", ",", " ", "2", ",", " ", "16"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cumulativeArr", " ", "=", " ", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"cumulativeArr", ",", " ", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{"blockFactor", ",", " ", "2", ",", " ", "8"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Encode", " ", "the", " ", "block", " ", "factor", " ", "in", " ", 
        "binary", " ", "at", " ", "beginning"}], ",", " ", 
       RowBox[{"using", " ", "8", " ", "bits"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"WriteBlockNumberData", "[", 
        RowBox[{
        "mat", ",", " ", "m", ",", " ", "n", ",", " ", "blockFactor"}], "]"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], ";",
      " ", 
     RowBox[{"(*", 
      RowBox[{
      "Do", " ", "this", " ", "join", " ", "function", " ", "for", " ", "k", 
       " ", "values", " ", "1", " ", "through", " ", "Ceil", 
       RowBox[{"(", 
        RowBox[{"mSize", "/", "blockFactor"}], ")"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "cumulativeArr"}], "\[IndentingNewLine]", ")"}]}],
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetImageSize", "[", 
   RowBox[{"mat_List", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=", 
  "  ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"GetBlockSpace", "[", 
         RowBox[{
         "mat", ",", "  ", "m", ",", " ", "n", ",", " ", "blockFactor"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], 
      " ", "+", "8", " ", "+", "32"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Add", " ", "8", " ", "for", " ", "the", " ", "block", " ", "factor", 
      " ", "definition", " ", "that", " ", "would", " ", "be", " ", "at", " ",
       "the", " ", "beginning"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Add", " ", "32", " ", "to", " ", "encode", " ", "the", " ", 
      "dimensions", " ", 
      RowBox[{"(", 
       RowBox[{"2", " ", "bytes", " ", "per", " ", "dimension"}], ")"}]}], 
     "*)"}], "\[IndentingNewLine]", "s"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7589772492309756`*^9, 3.75897733842875*^9}, {
   3.758977431367025*^9, 3.7589774332285576`*^9}, {3.7589781500829277`*^9, 
   3.758978164323367*^9}, {3.7589789317059655`*^9, 3.758978948282484*^9}, {
   3.7589913027414503`*^9, 3.7589914319627132`*^9}, {3.758991833264929*^9, 
   3.7589920188096123`*^9}, {3.758992373457159*^9, 3.758992451112569*^9}, {
   3.7589924873963485`*^9, 3.7589924956420617`*^9}, {3.7589926955393667`*^9, 
   3.758992723377573*^9}, 3.758992844977169*^9, {3.7589929374169745`*^9, 
   3.7589929445414696`*^9}, {3.75899299172818*^9, 3.7589930186101584`*^9}, {
   3.758993052017373*^9, 3.7589930771824813`*^9}, {3.7589931522696314`*^9, 
   3.75899316251612*^9}, {3.75899364206619*^9, 3.758993642799247*^9}, {
   3.7589937107554092`*^9, 3.7589937137656355`*^9}, {3.758993843997575*^9, 
   3.75899384517218*^9}, {3.75899390398055*^9, 3.7589939115086155`*^9}, {
   3.7589953377103634`*^9, 3.7589953457161455`*^9}, {3.75899989010415*^9, 
   3.7589999044407516`*^9}, {3.759000000928757*^9, 3.7590000109549723`*^9}, {
   3.7590000417836204`*^9, 3.7590000982310996`*^9}, {3.759000164651244*^9, 
   3.7590001660971375`*^9}, {3.759000242185158*^9, 3.7590002533988867`*^9}, {
   3.7590003465427976`*^9, 3.759000375536374*^9}, {3.759000440864897*^9, 
   3.7590004423265233`*^9}, {3.7590004782647667`*^9, 3.759000491193451*^9}, {
   3.759000611415778*^9, 3.759000620791229*^9}, {3.759000655407099*^9, 
   3.7590007573504453`*^9}, {3.759000945591099*^9, 3.75900100587983*^9}, {
   3.759001536205309*^9, 3.7590016373495407`*^9}, {3.759001678390257*^9, 
   3.759001680558457*^9}, {3.7590017240045652`*^9, 3.759001731623968*^9}, {
   3.759002090558895*^9, 3.759002091716821*^9}, {3.7590023105508795`*^9, 
   3.759002310695003*^9}, 3.759002569984885*^9, {3.759002717748419*^9, 
   3.7590027182410994`*^9}, {3.7590027844691916`*^9, 
   3.7590027848840814`*^9}, {3.7590028548292046`*^9, 3.759002855613106*^9}, {
   3.759011808678236*^9, 3.7590118094152904`*^9}, {3.759011873056448*^9, 
   3.759011873586038*^9}, {3.759011976389518*^9, 3.759011976811063*^9}, {
   3.759012038782615*^9, 3.7590120389642353`*^9}, {3.7590120720023136`*^9, 
   3.759012080966284*^9}, {3.759014391015216*^9, 3.7590144708487473`*^9}, {
   3.7590145541549807`*^9, 3.7590146286915736`*^9}, {3.759014969108798*^9, 
   3.759014981009347*^9}, {3.759015042357397*^9, 3.759015090571883*^9}, {
   3.759015154298724*^9, 3.7590151806975574`*^9}, {3.759015553351217*^9, 
   3.75901558804668*^9}, {3.7590156413145313`*^9, 3.759015672463519*^9}, {
   3.7590157147298822`*^9, 3.759015716546432*^9}, {3.7590158363872766`*^9, 
   3.759015850735077*^9}, {3.75901590287648*^9, 3.759015941035616*^9}, {
   3.7590160582004137`*^9, 3.759016121803862*^9}, {3.7590161525754595`*^9, 
   3.759016166066966*^9}, {3.759016206647125*^9, 3.7590162277502117`*^9}, {
   3.759016261971603*^9, 3.7590162679654245`*^9}, {3.759016437753399*^9, 
   3.7590164460922265`*^9}, {3.759016598597017*^9, 3.759016601455989*^9}, {
   3.759016631676732*^9, 3.759016633017149*^9}, {3.759016670666733*^9, 
   3.759016727857525*^9}, {3.759017222144306*^9, 3.7590172285186205`*^9}, {
   3.7590173004193335`*^9, 3.7590173011282425`*^9}, {3.759061614880348*^9, 
   3.7590616153311424`*^9}, {3.7590616701884336`*^9, 
   3.7590617442516403`*^9}, {3.7590618171238585`*^9, 3.7590618181075573`*^9}, 
   3.7590619114126177`*^9, {3.759061954100791*^9, 3.7590619550113645`*^9}, {
   3.7590635982047606`*^9, 3.7590636006444473`*^9}, {3.7590636981410694`*^9, 
   3.759063723189645*^9}, {3.7590647958853655`*^9, 3.75906481163659*^9}, {
   3.7590649384436803`*^9, 3.759064977032415*^9}, {3.7590650620157146`*^9, 
   3.759065083363764*^9}, {3.759065124147683*^9, 3.7590651719484787`*^9}, {
   3.7590652348684497`*^9, 3.7590652665247707`*^9}, {3.7590653062526674`*^9, 
   3.7590654036207905`*^9}, {3.759065468700883*^9, 3.759065581254486*^9}, {
   3.7590656625347767`*^9, 3.7590656652934723`*^9}, {3.7590657347344446`*^9, 
   3.759065778165574*^9}, {3.7590658293745356`*^9, 3.7590658835487356`*^9}, {
   3.7590659185727854`*^9, 3.7590660080455694`*^9}, {3.759066147910651*^9, 
   3.7590661626536217`*^9}, {3.7590664649909215`*^9, 3.75906647680177*^9}, {
   3.759066567503355*^9, 3.759066572037426*^9}, {3.759067227769377*^9, 
   3.7590672545259156`*^9}, {3.759067329915345*^9, 3.7590673417409544`*^9}, {
   3.759067428945265*^9, 3.7590674614132423`*^9}, {3.759067492879455*^9, 
   3.7590674931896257`*^9}, {3.759067572358611*^9, 3.759067687053295*^9}, {
   3.7590678220304785`*^9, 3.7590678480060062`*^9}, {3.759067885209214*^9, 
   3.759067890452074*^9}, {3.7590679391090574`*^9, 3.75906798919351*^9}, {
   3.7590680965243883`*^9, 3.7590680985826426`*^9}, 3.759068388788424*^9, {
   3.7590687622883034`*^9, 3.759068762742329*^9}, {3.759069306333847*^9, 
   3.75906937782031*^9}, {3.7590694254606576`*^9, 3.759069477895775*^9}, 
   3.7590695134602394`*^9, {3.7590697419198*^9, 3.75906977872677*^9}, {
   3.759069812713431*^9, 3.7590698335453253`*^9}, 3.759069914855235*^9, {
   3.759070091298519*^9, 3.759070091922223*^9}, {3.7590999665530615`*^9, 
   3.7590999741574554`*^9}, {3.759100082219204*^9, 3.759100100651366*^9}, {
   3.7591001325385075`*^9, 3.7591001330162954`*^9}, {3.759444175317484*^9, 
   3.7594442363349075`*^9}, {3.7594443034673605`*^9, 3.759444361918532*^9}, {
   3.759444437584547*^9, 3.759444453654539*^9}, {3.7594445264826593`*^9, 
   3.7594445283576813`*^9}, {3.759444682774888*^9, 3.7594446946308346`*^9}, {
   3.759444730051041*^9, 3.7594447306804466`*^9}, 3.7599613666592865`*^9, {
   3.760118950363157*^9, 3.7601189538090544`*^9}, {3.760119078199824*^9, 
   3.7601190828010683`*^9}, {3.7601191128737545`*^9, 
   3.7601191189375715`*^9}, {3.7601191504099846`*^9, 
   3.7601191806519737`*^9}, {3.7601192817275124`*^9, 3.760119282730657*^9}, {
   3.7601196096959567`*^9, 3.7601196464842987`*^9}, {3.76011972670989*^9, 
   3.76011975368054*^9}, {3.760119824797968*^9, 3.760119852297536*^9}, {
   3.760120355495578*^9, 3.7601204127254734`*^9}, {3.7601207491112475`*^9, 
   3.7601208016306515`*^9}, {3.761309582371811*^9, 3.761309585606168*^9}, {
   3.761310066854187*^9, 3.7613100973315163`*^9}, {3.7613101522277207`*^9, 
   3.76131015783864*^9}, 3.7613106539199257`*^9, {3.761310814257621*^9, 
   3.7613108803517704`*^9}, {3.761310954666375*^9, 3.7613109552910557`*^9}, {
   3.761310988157421*^9, 3.761311090961219*^9}, {3.7613114647292833`*^9, 
   3.7613114785686803`*^9}, {3.76131169169587*^9, 3.7613117335110044`*^9}, {
   3.761311857669954*^9, 3.761311876039673*^9}, {3.7613119072356105`*^9, 
   3.7613119074291058`*^9}, {3.761312463066698*^9, 3.761312504959165*^9}, {
   3.7613126048821034`*^9, 3.7613126363294992`*^9}, {3.7613128313361444`*^9, 
   3.7613128436122704`*^9}, {3.761312908206738*^9, 3.7613129092369823`*^9}, {
   3.7613129822838373`*^9, 3.7613129935729675`*^9}, {3.76131302373458*^9, 
   3.761313025799858*^9}, 3.7613131418635645`*^9, 3.7613132021504774`*^9, {
   3.761313851086648*^9, 3.7613139589700146`*^9}, {3.7613139923912897`*^9, 
   3.7613140343404274`*^9}, {3.761314181206275*^9, 3.7613142073807135`*^9}, 
   3.7613145539848504`*^9, {3.761314630349142*^9, 3.7613146330798197`*^9}, {
   3.761314838538715*^9, 3.7613148417250757`*^9}, {3.7613148936244717`*^9, 
   3.7613148954944715`*^9}, {3.761314967959156*^9, 3.7613149785172157`*^9}, {
   3.761315185612893*^9, 3.7613151954012012`*^9}, {3.7613152818608932`*^9, 
   3.7613153561017227`*^9}, {3.761315428639282*^9, 3.7613154519918118`*^9}, {
   3.76131575399368*^9, 3.7613157558038692`*^9}, {3.761317188001231*^9, 
   3.761317202061838*^9}, {3.7613175905266542`*^9, 3.761317593812871*^9}, {
   3.7613176403171325`*^9, 3.761317641886937*^9}, {3.7613176913919783`*^9, 
   3.761317694655343*^9}, 3.761317940424056*^9, {3.761317981851396*^9, 
   3.7613179856612835`*^9}, {3.7613183677469587`*^9, 3.761318387817007*^9}, {
   3.7613184303130894`*^9, 3.761318432137141*^9}, {3.761318485344798*^9, 
   3.76131849038371*^9}, {3.7613185331564035`*^9, 3.761318579424454*^9}, {
   3.76131876766531*^9, 3.761318775920885*^9}, 3.7613188949093747`*^9, {
   3.761318942744819*^9, 3.761318944385399*^9}, {3.761318987170261*^9, 
   3.761318987696884*^9}, 3.7613193241870294`*^9, 3.761319364947676*^9, {
   3.761319440163461*^9, 3.76131944934731*^9}, {3.761319552821763*^9, 
   3.7613195890901504`*^9}, {3.761319619885064*^9, 3.76131962203432*^9}, 
   3.761319669428198*^9, {3.7613197068123302`*^9, 3.761319752627117*^9}, {
   3.761488483658651*^9, 3.761488492389369*^9}, 3.761488604492166*^9, {
   3.761488735459992*^9, 3.7614887830413995`*^9}, {3.7614888656891336`*^9, 
   3.7614888892512436`*^9}, {3.761489767752776*^9, 3.761489781462866*^9}, {
   3.7614898327005415`*^9, 3.761489861506132*^9}, {3.7614899340350633`*^9, 
   3.761489939684507*^9}, {3.761490043424137*^9, 3.761490052364056*^9}, {
   3.7614909134879985`*^9, 3.761490916137181*^9}, {3.7614909917844505`*^9, 
   3.7614910079565516`*^9}, {3.7614914521162395`*^9, 
   3.7614914688133087`*^9}, {3.761491583764248*^9, 3.7614915883449945`*^9}, {
   3.7614917948608294`*^9, 3.761491804100845*^9}, {3.7614918394771338`*^9, 
   3.761491865830454*^9}, {3.761492193459685*^9, 3.761492206241184*^9}, 
   3.7614958624833565`*^9, {3.761496018089308*^9, 3.7614960983524113`*^9}, {
   3.7614964192826643`*^9, 3.761496451702784*^9}, {3.7614965566379104`*^9, 
   3.7614965640075827`*^9}, {3.7614966591098547`*^9, 
   3.7614966862427216`*^9}, {3.761496818211677*^9, 3.761496822370574*^9}, {
   3.761497831126195*^9, 3.761497833029591*^9}, {3.7614982337499623`*^9, 
   3.7614982374963093`*^9}, {3.76149831154078*^9, 3.761498320570985*^9}, {
   3.7614983619811316`*^9, 3.761498368762437*^9}, {3.7614984889284954`*^9, 
   3.761498511514776*^9}, {3.76149863499238*^9, 3.761498648022817*^9}, {
   3.761566471718782*^9, 3.7615665178789024`*^9}, 3.7615666098080373`*^9, {
   3.761566688168392*^9, 3.761566698791378*^9}, {3.7615667830210295`*^9, 
   3.761566785427495*^9}, {3.7615672634535885`*^9, 3.7615673195758142`*^9}, {
   3.7615673598146305`*^9, 3.761567400719414*^9}, 3.761567486975661*^9, {
   3.7615675789099073`*^9, 3.761567608161683*^9}, {3.7615676888259726`*^9, 
   3.7615677012230854`*^9}, {3.7615678141681004`*^9, 
   3.7615678431653433`*^9}, {3.7615679059026833`*^9, 3.761567954113883*^9}, {
   3.761568150182979*^9, 3.761568154527174*^9}, {3.761568348934163*^9, 
   3.7615683876690426`*^9}, {3.761568428655776*^9, 3.761568429246192*^9}, 
   3.7615684749570284`*^9, {3.7615685338677635`*^9, 3.761568553780421*^9}, {
   3.7615685982926908`*^9, 3.7615686836699634`*^9}, {3.7615687194239864`*^9, 
   3.761568757894896*^9}, {3.761568845227644*^9, 3.7615688455916677`*^9}, {
   3.7615689041594915`*^9, 3.7615690302967296`*^9}, {3.7617762128447747`*^9, 
   3.7617762133850894`*^9}, {3.761776303892296*^9, 3.761776350930961*^9}, {
   3.7617765028792114`*^9, 3.7617765441551437`*^9}, {3.7617765915331306`*^9, 
   3.761776678755672*^9}, {3.7618384359215603`*^9, 3.761838437502389*^9}, {
   3.7618385600051994`*^9, 3.761838563151613*^9}, 3.7618391837888746`*^9, {
   3.7618393998972416`*^9, 3.761839406591798*^9}, {3.761839455203106*^9, 
   3.7618394998549304`*^9}, {3.761839625944219*^9, 3.761839676388794*^9}, {
   3.761839716282501*^9, 3.761839717250905*^9}, {3.7618397501190295`*^9, 
   3.7618397513128705`*^9}, {3.761839919079262*^9, 3.761839923629141*^9}, {
   3.761839988281865*^9, 3.761840017834416*^9}, {3.761840077342952*^9, 
   3.761840087564396*^9}, {3.7618401487273083`*^9, 3.761840155399679*^9}, {
   3.761840275395416*^9, 3.7618402953999987`*^9}, {3.761840390764683*^9, 
   3.7618404746357093`*^9}, {3.761840518629179*^9, 3.7618405317061043`*^9}, {
   3.7618405760063195`*^9, 3.7618405797686605`*^9}, {3.7618406113090167`*^9, 
   3.7618406157405972`*^9}, {3.7618414588957815`*^9, 3.761841486056322*^9}, {
   3.7618415313118114`*^9, 3.76184153136065*^9}, 3.761841571692608*^9, {
   3.761841676349825*^9, 3.761841705431568*^9}, {3.7618418144986734`*^9, 
   3.761841837657113*^9}, {3.7618421062446675`*^9, 3.761842109602171*^9}, {
   3.7618421534952145`*^9, 3.7618421824679294`*^9}, {3.761842325491337*^9, 
   3.76184232879914*^9}, {3.761842367399472*^9, 3.76184239795043*^9}, {
   3.761842632960408*^9, 3.761842633302494*^9}, {3.7618427572870455`*^9, 
   3.7618427857058463`*^9}, {3.7618430221946216`*^9, 
   3.7618430788291545`*^9}, {3.761843178919182*^9, 3.7618432057360163`*^9}, {
   3.761843248814437*^9, 3.761843300868615*^9}, 3.761844249763647*^9, 
   3.761844531062317*^9, {3.7618448097066126`*^9, 3.7618448157919226`*^9}, 
   3.7618449017759376`*^9, {3.761844993804389*^9, 3.761845001259095*^9}, {
   3.761845303972525*^9, 3.7618453409857087`*^9}, {3.7618453754023476`*^9, 
   3.7618454045058002`*^9}, {3.7618454440742183`*^9, 
   3.7618454592280273`*^9}, {3.761845581817724*^9, 3.7618455876944456`*^9}, {
   3.7618456328708334`*^9, 3.761845636130163*^9}, {3.7618478421491933`*^9, 
   3.7618478466638184`*^9}, {3.7618479107097473`*^9, 
   3.7618479969349594`*^9}, {3.7618483183139567`*^9, 
   3.7618483831724367`*^9}, {3.761848536024787*^9, 3.76184854165259*^9}, {
   3.7619154810206013`*^9, 3.7619155165714827`*^9}, {3.7619155663735857`*^9, 
   3.761915594964961*^9}, {3.761915647121399*^9, 3.7619156500030255`*^9}, 
   3.761915892151801*^9, {3.761940911542486*^9, 3.7619409151574707`*^9}, {
   3.7619410189874496`*^9, 3.761941183142308*^9}, {3.7619412235391407`*^9, 
   3.761941223747549*^9}, {3.7619413495166216`*^9, 3.7619413684979343`*^9}, {
   3.761941403573279*^9, 3.76194147232329*^9}, {3.761941523516047*^9, 
   3.7619415504921727`*^9}, {3.7619416009073706`*^9, 
   3.7619416288133535`*^9}, {3.7619416650882826`*^9, 
   3.7619416752323523`*^9}, {3.7619417193018703`*^9, 3.76194173589217*^9}, {
   3.761941832109049*^9, 3.761941843200484*^9}, {3.7619418948113427`*^9, 
   3.761941903821105*^9}, {3.761941973956043*^9, 3.7619419776394806`*^9}, {
   3.761942021003428*^9, 3.7619421197535343`*^9}, {3.7619421614728236`*^9, 
   3.7619422557232804`*^9}, {3.7619422960604315`*^9, 3.761942296396527*^9}, {
   3.761942329992264*^9, 3.761942368973976*^9}, {3.761945096161311*^9, 
   3.761945104424889*^9}, {3.7619451431608696`*^9, 3.7619453037649474`*^9}, {
   3.7619454089189663`*^9, 3.7619454986157155`*^9}, {3.7619456350381007`*^9, 
   3.7619456624852824`*^9}, {3.7619460652721615`*^9, 3.7619461570352106`*^9}, 
   3.761946211676131*^9, {3.7619462507597504`*^9, 3.7619462745582743`*^9}, 
   3.761946536196935*^9, {3.7619465973231487`*^9, 3.7619465979473414`*^9}, {
   3.76203134297762*^9, 3.7620313789349084`*^9}, {3.762031501578807*^9, 
   3.7620315067299814`*^9}, {3.7620317374713445`*^9, 3.762031764826499*^9}, {
   3.762031809549098*^9, 3.7620318154202776`*^9}, {3.7620318594388695`*^9, 
   3.7620318682954545`*^9}, {3.762031920460724*^9, 3.762031948843961*^9}, {
   3.7620320099065695`*^9, 3.7620320128934703`*^9}, {3.7620324734473486`*^9, 
   3.762032473709648*^9}, 3.762032511449171*^9, {3.762032542363635*^9, 
   3.7620325468902225`*^9}, {3.7620326768211346`*^9, 3.7620326775462*^9}, {
   3.7620327898767138`*^9, 3.7620327902906046`*^9}, {3.762032983227151*^9, 
   3.76203300462891*^9}, 3.7620359683886595`*^9, {3.7628142454582872`*^9, 
   3.7628142563490276`*^9}, {3.762814381558861*^9, 3.7628144153353033`*^9}, {
   3.7628164880129795`*^9, 3.7628164912737684`*^9}, 3.7632025182915583`*^9, {
   3.763297358310047*^9, 3.7632973592350855`*^9}, {3.7633340177969284`*^9, 
   3.763334033278937*^9}, {3.7633345247713027`*^9, 3.7633345395784645`*^9}, {
   3.7633346314160724`*^9, 3.7633346378709908`*^9}, {3.7633353777482815`*^9, 
   3.7633353902769003`*^9}, {3.763838382663605*^9, 3.7638383833815145`*^9}, {
   3.763838694971041*^9, 3.763838719597167*^9}, {3.7638395224163523`*^9, 
   3.763839523468011*^9}, {3.763902197276475*^9, 3.763902229478753*^9}, {
   3.7639026003689303`*^9, 3.7639026054991713`*^9}, {3.763902639235998*^9, 
   3.76390264582694*^9}, {3.7639026966018457`*^9, 3.7639027114477177`*^9}, {
   3.7639027485569253`*^9, 3.7639027875219297`*^9}, {3.763902840722458*^9, 
   3.7639029654102483`*^9}, {3.7639030422557116`*^9, 3.763903044421113*^9}, {
   3.7639030896638484`*^9, 3.763903089850664*^9}, {3.7639034432084856`*^9, 
   3.763903444066371*^9}, {3.763903822776678*^9, 3.76390382294028*^9}, {
   3.764166563263245*^9, 3.7641666232918825`*^9}, {3.7643347607482166`*^9, 
   3.764334784797673*^9}, {3.764335387451208*^9, 3.7643353904401875`*^9}, {
   3.7643357475381594`*^9, 3.7643357494259963`*^9}, {3.764336394155907*^9, 
   3.764336477767083*^9}, {3.764336625893426*^9, 3.764336626304328*^9}, {
   3.76433667495129*^9, 3.7643366831537623`*^9}, {3.7643368661459613`*^9, 
   3.7643369175244327`*^9}, {3.7643370242376204`*^9, 
   3.7643370257321353`*^9}, {3.764337108985637*^9, 3.764337116454352*^9}, {
   3.7643373361658945`*^9, 3.7643373735591974`*^9}, {3.764338195862978*^9, 
   3.7643382180850325`*^9}, {3.7643387087953796`*^9, 3.76433876557994*^9}, {
   3.7643389402819967`*^9, 3.764338944490307*^9}, {3.764338998329569*^9, 
   3.764339039741969*^9}, {3.7643464898655815`*^9, 3.76434655308254*^9}, {
   3.7643466038972654`*^9, 3.764346634339364*^9}, {3.764347104606202*^9, 
   3.764347107428295*^9}, {3.764347171969305*^9, 3.7643472009261484`*^9}, {
   3.764347570504903*^9, 3.7643475710675564`*^9}, {3.7643479115879917`*^9, 
   3.7643479272748375`*^9}, {3.7643490427837725`*^9, 
   3.7643490433500223`*^9}, {3.7643561191563396`*^9, 3.764356122356552*^9}, {
   3.7643619997478824`*^9, 3.764362032037426*^9}, {3.7643623808880024`*^9, 
   3.7643623831290483`*^9}, {3.7643628851880713`*^9, 
   3.7643628885597906`*^9}, {3.7643631567206235`*^9, 
   3.764363168802664*^9}},ExpressionUUID->"e617e23e-041d-4206-acc1-\
d548565b4fc3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
L/Xm3J+xfzVZMVW/59l539pyuXLO8WLathTYM+2I/akve+2CXbnoqdkbE3XQ
DwWOvgRE3KSm3xwMpgm/8VA/NkyFma/V/IR4jQMp3jrAJQZcdDA7mlg+CFfj
qAADJJIrBslWxgDLOkQGSE95D+7BeQhNRThhMZMObiQez72SM/gddUrYsKLv
lZWfii482eEoVJbtkDbcad19JOo3jbs3BWcsocuO9QdN98esP9yq/ulWw62x
8uc3GwgVK75nI8XHs6NPHIj/bihXOVsevFQ+XlcJMMCnjtEKcy2jkz5zLvcT
0oZ+AQBOKMJU4BBjOGodAIuznAbjEOISSFxOGuuIwThdK+Ltg2RLANO0AsBI
dQxSMFIdp4nHK4ho6LoRJkEVlj4zo+OpceGGY4OVPGbAYCqYr2lWQ412anmO
gAoZYGWHyDreua4mZaV8/XL5cFFC/cGE3uIksl5xxf32bu2gPf1Gb8nl40cG
7Am3x+2hSz7latXT4fwx965J364pZ/LaFY9y2bnQWQ/xKEVNyGmAoGy8M7IL
cqE5N1aggppRDdjVRCXhzxJdH4EK1QZUKk4DEgnlQwwPoIUmFdRQzjkEh1TD
wWVAOvh9DKe1bPUDW/iNLXfI0ZNQHuZBxIOTEQpMgrWTMAyHHKQntbTrzlAz
ePblkqMzL9G9dUPr3s+Dcw4oS9e+br41Xvr95cD35zwPxl1Pr9eQAuRW5ben
C48fiKk7mDRbvWttyRpaLL3U3ZRGL0vmZh/cFV3bock/Wd6093BeYNhoA5Bb
pULBGgwMMV7gHpWEAQGMAWpxRMDBy4KxE+2DmkSoVLA2+D25Yhg7XYeBAjPE
GesXmfmfYINbG9GVrY8tjxBIVCpgC85NcfRSDBgPIhXUYGRCOX2xoratXXMn
akPnbD+MFDmTPy5N+LC3MBUiiHLNv/rkeLct9e7pI3cbd/SUp1+ZLCYrWlfc
fxotHvXsbilO6cjduDZfFpy3jDUGMm3kBlLK1YevUaEm8FrR10PqvvJ+MLom
HKZCz/OpUVdKs01GBedubitPMHR3UxioCIimun7AuDvIwAAD/wIVNLVgKkGd
zmEgbbMENcFhKG+5coZdnPVjkWGo4EUzTi7AOBi4wMHJiJaugAft5HRw1qnq
WuWC99mU5diB2Ir06KrMT1UqXKtPmq6PlDy9VPXdsvfRbOX3N+uC1zzKVf9X
fUfac6NPWdImnLughoX6dLCpES6YVj4YX96rPnayVqY+VeLoWPtp8tpapUJf
E9CogM/FeNCcpbqP1hEcAGaaIPW+tKGNV410QkoJ96w2WCelQueBHgqb7mWS
WmhpZ8UwUwYVmGETreADihhfOHHAR1k/bRs1RIIEmZjlhsCBMeDCCrcLWgF5
RXfDcaDi5Yy9Ze+G4tiPW48kr0+VK1edq180jLhT7g4WXD2+cyyw48p4cehm
APKK7wbyxlx7Ttu31e2Ier1cEVqxjbUeT7b2p4Bq2U+T9/Lg9HLqbnViqjFC
RaIH8FCFrp8tETAqNDbQpMY+5drUaKWQZCPGnE53xYuIihFv1/Q/wTaYaB8C
S0AYJDqGmUoIWjHMqKA90vAh2AA367HrpT3ieFFJ9J5+lu6SOldMfR29NKCw
BuaBHaL9MGcJFSueVzOWvrJk7964mp0bg/PlygXn+qOGO2OWp1drvjvrfjQf
+O5GLVkAv+H/6vThY9s3dpdmTdVkr59zKxfcZ1qOg/Koldeg9tLQwVK1QRY7
tPXDcBzBeq414lA44FzJkgqODc7M5IIiFMZJTwZIj434nVBhG9RzDNJDDbd1
JIZFiWA9LJFQsdEGYCpYecsBAJ2c300yWz5x5cjhspFwBY2Q4NjAbVqPUCp+
GCt27oiybNvUdigRtAISy7UnTYOVW+9OWe93HZmq2Xd5qDh0269c9/1ppGDS
s2fQse1kfuKbBTvUL4PHj5OvfNhPE+3SqdA0mYSVfsJGuQEAZix8MBlHSj7A
Igsbps1x1YPUm4bMENxqJV5mDOAGbXMNYvYhRoXWT9s6DJgKMVKkOM9IlUHV
k2Gch0QIH5H7Nf9qMWuQtTmKGBVcjwYGyjEwAwQJVUzoGLAEy6lTx1qAiueT
ZU25qb4D8d6Mj96OlShXnMHHTXdGHd9fb/7jovfeoufp1eq1m7XKVd+3gzm9
+XG9joyZ2r2rSw7IK063HAOtSFOzKQoqJSEcr5HHsdF+kYpwmmEkh6WCGhKI
ivCMtiERwK5nMGDvG6mgQURr6BeHUMKokOYPQAXbRYrxjkSCs/ckx2xLG2iJ
lRg9BCWAav1cmsH0gWabbBcaEEF6Gk8AFS+mLU3ZG9xZm1sORK9OWEKXPMEn
DYttu5/MuW6dzJltPnxlsHT9Tg1oxY9jpbP+XQMVO6r2bnk171AuegbbWuCy
aep6DsNVSoUZHvF67icOwBLBgn6YCoQH8SzxoJEBIxVmwIRxUpFIKh+mqOjX
lEcQLB1cP0o8DH6n/SIDrF8aXMw0xLjQSkxngJixU193VWMHjiA4r0ixq1ph
7+061hpa8bycs3WWxFYdiOvLiXk7Y1Nue9YeHn04UvLsrPfrUcuXUxVPl12h
u7XKncDreVdvbtK8a/sZf86rGatytnygrSm1oi+1olf9ueQ2aNrAMFAf6aBI
BYeBlAphvCYO4Rmt5oq6VmhooWKQbxtLRcMAkqyWDzMDHqgRlVB7OACYSkhp
IfPUOSS6G+cPrD8R7gGsYoBaknMQjO2SDwXFLD2E8Eh1DGIMqLF1VxESbSVW
TTOgre0aqQBXgvsIFZf8P0zYPGkbvNs/vd96cH2pQrlTSX4n6GHd+v2a0MM6
8n3vu9Whe+qXLs67X0yX327c3Zwd82raDlQMt7VBhEqvgM/IchsCBpnp5WSy
YypYvJAywPrpiqKe/2OdCccLbrWBTwNUYFD/IDaODcPyAgKDigYzRgKjgu3i
Nq5TpCKAezQeHOQOaSMJzoVcBUob/RAzrVOnRUSCUiF2Yk5EASHrmRV9lIo0
J6kFOhtbod78cca2HNj6bKh4bdK6NmNfu1OpfjEvoNytXL8bIHnmLT/5js1l
1/qChXyz4lrVz/O2t+ecyhX3ZPcJuGYmWdgfUu/qNP06CqVCjCDMNfAB2S59
LJQHlvyLvuYY4NYejYdgjp+Jsw/Hl5+Jpw34cY6hOLgHhxYm6KTGa03h+e44
QwbQbYVGCHU9M3ArqEGqC/ohuxgiExxGagZuPZPs0rSCHOXChDoYvM+Mehy2
BFr9OjwPelsb7BykL2UEGIakwOBvDUGDagXAkFTRCx5MdPbABVPL+yEZmDnZ
Elx2vpmzQ+AAJEILjuA5F6hE6Iu60OP60JNqMOVujXKnOnTbS7TiXIWy7Fhd
sCnnvesXPMqliqezDblucln1xvpTbCBNqkiq0scmgtQwGBgedhSfrjaG2EqC
MRs08MOSAR0bQgjBQwUjoULd0pGcRDD9pyHDcYbhQYz490yqa4RiQI06nTRc
mjGf4mGMCsoPxYDJguZoPXaQi7AgonqfHuK3ahBhVEDCn2oPK4bOST82Aw8q
EmAZ5UQoQO0TKkiVeri869thD/DwdspOvnp31q2c84RWvMqTo8GvGpQv6pUn
TaEvjioPakP36pT79WQha8WlgEQsW5WFMmXRtn7W/mq23OJu0t8kAhvDdKkT
Aor6idR8GIEhBAupGVzMvIxzP+N6wiA7ypiRDHaETb0snysyWWA8hJFwMHEY
4RIGDQnkaGpSeAgVRhiYkbMQD9IGJBg45aCPnRmOI9QdjAHVNYMsnaCmJoR9
qeqYNAdJNoCK7aVtd9pLFZUHyDlh+9OZ4q/b97656FAeVAfvVYduVa/fqHx+
1vps2fbDWMHDpoxn/fvJK/XzHmW2RFksg2jy7WBBTmlNBni/4rQ63chdkXsu
pzegZvuCXHDBVDg6LHUr524GTKLjnQPURgUxigRlKVxRlvM8hGHQ8cDuM7hS
sxESNZwjqp1JQskG3iaHT6en4AvyAkKfDPtZtM0lGDQesWiFix1x+VSPOP0M
D6CCdKr1QnpFH1hm2cnLbRbi4iX3i9HSxy17Lvti79YkvhkvWF8oDS6UkCxi
tuzteO7rkZxHTRk3fPFP27Z/1571w/C+t7Mlq0t25arn6+Hi/aX1GRUjmXBN
8oTJXcU6RtVvHUCAU0M2AsDIwJDBa4L3cSdGhRUIWo1QcQb3iGOYaSMrRhMd
I8ZO2AUfjep2RrVR2pnsUE3zuGb0UoiEEd3RZ5ixAbiTDWZg6AmD4USWQlBO
GAzhrdMgNbhC4fDAu7qwhEWDHHX2pdsHQC4gx9hv73zcW7M2a3nak3O7Pu1e
QwYIxRcdu1eXrMpFskIVXHEqF3ywXV+2vZwsenBi2/OBnJ+Hcp517XnRn/N2
tmj9vO2nWWcgcAy0IrGiP62CZJtptJJyniF+N2ZNIhXSSY2dy42RUmGGBKQT
2PuqEe8nGAAYTdIgGRF3cT9HBUcIMRfn7jNc2zDYuEv5Qf1nuCjDgcEJV7Im
RHzhYwhzeptRQS3TARlmLyjJbtfpzqaO6/01X50q+OZU7lddu58O5Nw7vmeq
ZPNi2cYn7dueDWT/dHr/jwMHn/Vn/zic/Xxw3zfte276k25WJd2rT/tpIO/N
tGV9uuTNSN7Lidxn066Lfcfq6k9tc56GhIeUJGqOBHcS7+5LtfMVFjIeACkV
ZnNflAjqRLzLPBvBMAzJzjEw3M+GgbNSXKPYxXSXczqPitDPVAVOpwPYdYyX
Cpcn4laCh2x1nauIaWLDUQGHDnm621s67vRVfdWbt3Ji28qJHT8MFz5p3z9n
j50p2Xy3PvPVQI6yZFEulAfPW5Xz9vXlMtI4V6YslSjzJZBn/jx04EljBrDx
3VD+2/nyV1OFP43mrE/mvp613jtT29Fy8ogbwlN/ihvi11AiXerB0dBIBZsp
ohqITmc9SGaH8UQTTje4Hm+N7h6jpgrCGCcjzLDvmEEn51MRDDZMx2DYOGAY
pyWCjPAJjJimSqseUSK0bFlFgqi6mmqme4bbGk/e6PQ9PJV7t23Xzc79l3uO
LDdum7BFTxZvukd4OAIKELrkJ4tXX9cFv6ld+7ZO+eaY8vTY+tM65Wk9+RMW
dxpIJXLW9mqo4JuWXbfqMr/s2vtqruztouX1aN6b0cNrU8X3e6rL3O1pRFHP
QA2SaEzOcTHOeZ/5N0JKAM8Kd9JdDhJjdB5mGYKWJOh+NyYStJ+6gwdDxwYm
NY8BUwxuqzYkKkH7ZQISlgWuIZYqXOxAcmEAgF9cVdUb4ntaBczQXvgsO8t7
mzyeByfzHrfvutmy825v3oXm7SO2qPGy6AdHtz/rO/h6yhJadCrn3Ouz5eRX
xh5WBR/UBh8G1h9UqRYI3vOvL5WTUgUKk/uARyB40b0+Vfhd555btSn3m/f8
abRwbcn6dqzop67dtxoP9df4bZ6TEEoS0RINtzgjTn8RDK6HSQrnXzEccOlB
uBOsfCy5YiLJMU4NqwcWDc0qJmhDRSI867FFFhCzCIJ54Ixb48KESMezWjjV
NcwW1nCSSctnWhZBRgeJZcBW3m/dueJN+Kpr7w+D+Vfqd02UxV5wJ37bkf3j
mVxlCWBwBpddwRnL6mRJcLokdKFCueUN3fQEr/mUK07lpgdqDeWSJ7RUvn6+
nPxqAGSh17zK/frg3Vo4d32y9LtT2Y/rs+4fy/zj6RwQjdXh3Nen9i7X5e1z
d8ab6x4tH7j8XOyRMoMnslmSwEcBlQHwcmLFeJJzgoFB/Y4xUxkYD4OBqMDh
AFuqe4whAW1GBcZDp2VMVAm6/KU51xVGRUeRh4fr0YapVOC1EYxHupOKyek4
59Au28n2goQHROr3XwxsPVP0+YwtGnhYmyoNLnmUCwHYkm/lLTjXp2yvz5T+
3HcguFgGYYL8uvHNQPBOIHS3Onivcm2+bG2kcPVMHsFmwR46W7F+yb16zR+6
7lduVoeuQp1ieXn68Lctu+4EUr5q3ff8dG6z35fmCNfvghKGp4yYh0uTdiMb
fBGBXU8UoNwQCLRZXzGR4pwEKigYdEtMZ8OIwThmI9XNY4AbsGU9WCvEtjCA
GFxcMvfVfhESuVBAv2uI4wFLBxgBw6Wuz7hGvO6GvvyY9r1/mLdEf31yz5vR
YggWoRUv8AAkKLPla5PW73sL1ietP/ccfFi/9duO3cELtrU7/vU7NaH7Vat3
q5Sb7h8GDtypTV+bLHozfAgk5Yee/W8WIB31rJ91EKmBZONBrXK7Slm2r07l
X/Al7tvwm+32DpF8pIemTpdm78ZDMh5UJKjrNRHQw4GmA0grwjyAaLgm6ZbB
gMFgeICDOL9zeOCkQkoCJUcaZbAmiA2pbrBdqmBMc1LcwyIe+pr8QCLJLkis
yXIO/Oqffle9/d/fTpQGz7tDK35lybU+bV2fKHk7VvL45KEVV9Ldxl2X67fR
7GLtmlN5XK08rIHUAhIM5VE9pBbKkzrlog9k5MWZvEfHdr+cLvmyMeuPpw68
mSl+e966tmwLLjtJxHlQrdz0F0f98+f/8HduZ10W3I/+Qbh0Wl/N4wGQaoXe
wLlf2OOcGjBjYGAkSL8KAwcGMXoiEgqOijTPOPUsM+pr2k8dDW0wmlVix6lQ
jTJNUHs4nEaMjhYChJEWETyzFEV7o1ehiQnEka2ukUOFzv/+t79I+9VfBxcq
1hdsypxFmbf+PFJ0v3HH46ZtEE1+Gjry4ET2kic1NF8Btn7dE3x0lPxd94d1
wYeVoUc1sFW+bAiedSsTxevTJS+H84LnSoPnKkLnHS/GCr5u3v6n3gMQhoLn
XOrCl7cs9rf5G/5h2Hkwy9GZ4RoV8dYTKtN8TIdhTGSA6zSYHiPYVm4qA5xQ
YDwMqLgmU9wTYFQr3mmYEIoBRoLu4sRVFoDkgiDmugSJCtV0KnBywq6TCjeg
6kmae4h8P8o5lOkfStpX9n/9x/+aF/2vb89YQ9O212PF945lQfL5Q++R1QnL
gxP755xJT9pzXgzlv51zBSGmnLdp70HuQ1yoCz6qIzXI4yrIJZTRYgBDOWuB
rPVJy76nHQdeTJUCGz9N5n9zavdPpw+SFGXZ0b7vw8H8LS7fMbilNNdEqgn8
YoGfbFgaGsUyLisVDTBwBlRQw7uMCs7vmnq4JxNcZIstyTOVDDfgGuf8jgz0
IQwD7dERGuV4QFSMclQYd0cjU6GltU7NwlrhGhKholQQHasgRzNcZ9LJ6eN/
/7u48sR/Wx0vC03afh4+/MP4EeW8X5mzfde3/0xJbPZnvyxM+vhJa44y54GC
QjlvJ38E6VElYeMhCSWQXSj3q4Nn7cpwPvj951HbfGX2uCPuwtGd3/UVvBjL
I79Zdrvm1XDOq57s0ETBF617yg+XbnX2p7nG1GznTCr/6fhVPrZsiAgxhHh1
HWk8WVYmMACYSlADR6OeaYpEqmsqnEhoUjDFttigJ9Uzm+yaplrBZjRjg5q4
q3cSWjihoAb9LJpw6QojjfFjjDuS8gfZCJeg4vil4qEmFW7wyECiZ6TE3fF1
Z/HPfYe/at3788h+5XogtAKpZuFoSZIl7vdHNv1298f/3J6bpMxVrI4XBxdK
g3d9gMHafb9yt1K5VRmC7f3q0Lny4Fgp5CR3O/NzEz4ctGf02FI782JfzZWt
LZWFrnufjxz+Y292cLb45UhuV1M7JLrp7vE095k0eA7axwzLo7j4Q03Nxwxh
XWqYBJEHZoQBtZ82MAaiQT8YlQhjP40g2PtjyMaxMSroUV1JeN3AaYmRB54K
LtyIxU5YiFQjj1rd0skIjXSAU80ryAx1jWbCFVwjSa4hd13PzeMla2Olq0uO
tQuO9at+SB3vtB+qyvq4dveW2pxUa+bnvtQP12dcanpQrtyrI2CQJQtP8IaX
fBHrfhVEiuA8+b7NUFlSY1FGly3rxOHU9tLtw47M0IpNueCGGiS0ZFHOOhea
fEc8XSAU9JbS3OFPhJ+DyoMhqVO3kszBAElE7xs4cU2rskAZmObEAZNAjfbQ
qJHqmQahSHHPgNF+jgc269luuncc93BUcCeKKauZSasedGI4NqUJBjAwSCDQ
pHmHoTilESRDDSi1Ne3KvFe56FZukD+GBlScyNl8PC/5WE68d3+CPWvj6aIo
ZboC5CJ40Ru8UwUkrF92kMwTwLhSEbznBypCs1ZIJs/XZB8vTe4v39pZmHU0
J61yT8zzhfLQFXfwkiM0XQi5x3hLSwZhchiQSA0n2/DQJkiMBj0EU4M1Z0kQ
IMDvakM8muLGyeGU6mhiuK06kWxpp4aEc0YFYIaIgHeaMYB5YFtAgsYOigS5
lGrp3gnwuzjrI1NhYoboI/V4BELMJIVqBVWGMAz6lqiE80y6h8rOCNwGPA2v
/zhIgXKO/Hmr0I2q70cKOwqTm/IS3DtjAtmJvj2JjbuiglNuZbocskoIGeof
TPOSL21eJXKhPKiECALFrHLB150f59qT1FS6vTY7/mTZ9h7L9qWGPcrtAKSp
6xMFQMX3g+WB6k6IXKl66q5NdkqF3tDitd5pBgPtVN1HB08yp4tIMCrCna5Z
Bgb2vtRUiSDGdtO8mIoJ5llggBruoWxgeLjBaPy4WOe+jxn5McJJI7UeNTg8
YJJmuoZSPUMaJ+6JRMdwfta2tQmLuqrgUW77LtZnWRM/9e9LtmzbtOeTD8pS
P6/avml1xhmcspI17bvqkpS6vKlc9RFCIO286AzN2kPXqsad20tTNhxJ+8S5
7bPmgtSj+anDrm3KlUrlrC04XQRFyo3G/QF/C3gwA/I9DxU6AwaaecZANAxs
6DLC0aLuTlE2KBXY9WYNOt8REtMiABwMrJNtwZI9s4wKFYxx5miREA4VNsA4
jM9UxTxWrHZl5U+YPXLURYyGbKrSlA3aznCqd+IZy3RD+BiCkXGuUXuZH+pQ
8q3Li07lZuXV5mz3tpiDm//tUMLvchN/79weU7Nt0+qUS5lR33TcqVKuVSt3
qgkbsL0RIFRc9obOupSbNWO+nccKUxsKk337onKjf1OasGnUkqEs2YMzpetT
xcpU0URrI4jVVg9NMlXCOR6Q06WHjMbrvMgAVgm+7ZpVT5/R44LB4yIJdDCM
pJasN8AjOhIGM9IybjaMjWQZKTeehQaRGXZBKSrc1VguB6k+NYKKmzxnlZBh
Ek1UVkG9/TXdb6c9yoobCkzIK5bqdhTF/74k+XNndmx5xgbAI/eT36xNO5UZ
uzLrCJI/xEr+8ir5c6x3amAL2Wbwoju44FBu1k77d7p2bDm04deenckNeemN
+xMGS+PJK9RlW2ipHORouut4BkwKH1nog/tJ9RqCBXa3mPsxN8mywWnR9Thw
4EPMqE/13SnpUTogzTtHvE+3nvlU9xxskz1zdCTneuzoDN8kPcQI4SABk5LA
2rxnjRUNJkpa73CGF0/QYFJ9ZHmGMryjKR4S6RJd0966rrX5yvVL3tAV4uhr
rUcgS8yP/WTrp7+xZ3xk36lqxYxXmbORP8QKYyDQ3KoEfQgCHhBH7lUFLznJ
X826UTVTtbuhIKP+YIIlbVNu0kcVu7f0lyQrt2qUq/71xRLQk8XOFqJRnrEM
z0SaFxxNijvYsoZW62mrATO61PMTn/MyzgBp2+jxGXwpPIY7nbkeZARcLzVK
RYqXUJHkhggyy3kTwxDBRE7M0BI7md8ZNrTBDeb0hNOZcI/nDFQfW2HrHc1Q
IxokbP66U8F5n3IpELpRHXxQe7XjUGnq74uTPoK8sST5091Rfzj0+a9eTTvI
i9TzHvJXE6FUuVen3KsJ3vLQl6dQtoRAK65Ujlgz8lM+y439uOFw+omy9Jr9
CU3bN8FloQxZnysLTVrnO1sg183wTaT54PNOIQwmw2zoeaNolAfOpwwSDgOB
FhoODCKA+SEN6np9AOsBEki4cYV3KRsABhh9tkACNexuqYlUiANEVKSEmAmI
mfikGSpoveEhBUiWdwyoSFeTHPCCr7b77ZxHueAOXatRHjTc7TvUmB9n2b7x
UOane6N+n5eyqXLXlldj5QoIhfqWXLkKJFSRv+Z9009+JQTAOA8VigUq08VA
dl1BalV2gjtzM5Qhlbvj+ku2KdfIL62D1AA5Z7taIanIJEhMqEFBg4HqBqZC
6jipvKucTGtzXD0KbTA8TDUagGalpiHkMoDBvE+3jAdmVDFYsMBURMCDjWTj
MSRp2pQxdhqpEMNQhENSNnTF0FNiUG+tPiKCA45Q8wpSmZI/3v64fiWwrSD6
D4cTP644FFeUscWybYsr5ZNXIxZlVv0loPNk1UK55g0uO8iXcG7XqL8w4lof
LVJWXH3FiTnRf/Ds3NiYl9xcshW0oir9E4ANtCK0YFcWK853Hwcmt9Kb9Iap
wKFEbU/hQMD7Tu9Hrteo4EAyAyBygMAwUFMFQQODpBMqDLClxhwtdbpZvwgJ
bVMqsKX7SSfkYGRXfWiwZYafIZtieBhTY60TD9ZDDEk+UV0M44GK1WmfcsEf
vFmlPKy70rivfnecf3/coeTfH4j6EKhoOBD9esK6PmdXlpxkcfuyhyxhLdrX
gZDrJMFYO+sk6xWL5eeq99XnpdXlbDmy+feHt3zs3rVlyLojdDmwftW7umCD
MQtt9du945n085KINsl9Op2Nad6PgkSwNlUGaTJAFZ5G/2TPAliKd1HtXJCa
enSBnqW7fpF26ocMlupbgn7qzUz/FPMsNdrDUQGdUnKYiVRQI1ToT0nkAWOA
tTfC1KNG7y3TO5mhVc20QJ6srOtZmydftiQLCw+PLfi32dN+79r+iT07xp8d
6z4YV5Ly0c8T5cp0eXDRSr6LdZv8KUUIJWu3yP8SAopB/pz7WKmyUD5YllGY
vNm/Paa+YKt/X7Izc1N9zoa1C2oeu+xUpmxn2+u3ecg9pPvIKpDZZxSp4AEQ
1ID0CzmhCsOc0eN8W6QiyT1P29TA9Xg33FaRAIvgYi6OmKmEod8/ScWB0wqs
D2DqA5TohtgWxSRsXhpZxmCeZmhrJnSddrL6aF9ooVK54Fu97FVuVy1X7ajZ
vbkpLyE36t/9uzaW74nz7459MelQZsgqlgK55f1q5X6t+l8TVgXvVYbOO94u
OIAKqD0vNGUfy8typG3JSdoMIlO7P27AvWP1UgD0hPwnEXOWaz3HdnrHt8GH
grv1T7NPh29epUWeALAKkVWLLGdgwDDRoMpPtUIkASsAO8T8TtvAA1UDTAXr
ZxaZigi0YFVhGoKpoG0pFZxuRDBuGN5NJzah5xWjUAVQS1W1IjRH/o8P4rs7
gYXq3e6MDxv2fFSa9FFDfoJjZ2Jh1B+AitCi+l8/3HCTDPN+VejhUfIfCT2q
X7/qXj/nXp0sC13yTNuSnOmbT5ZtbSjOAK0oiPnQFv3BKqjESsXarCU0U3x7
oGGXb2Sbj7xRolQIH2Gao4K6mxnXo0HCBMRtSABQBJnHvubUQDQ2krYxA5gW
2mCRArv4nTzQYdxIhgFnhBDfNJtBtM16cMOMCjyeXSQDdj2TGapQkAJElYtM
/6SabfasTXvJL5VDBLldNeff6tm+4VhuUmnG5vwdnx+O/6Q45g8vx2Gmu8gf
ZwZ9eFhNXps+qCX2qB4S1HWIEZNWZdF27diBlkNplXs274v+N++OuM6yrM7c
5NdQ0q641uesynjhncFju71jWYGpDPQB0ceZYVTghSNGQrpvnvUnAwYqDyla
ex5XCvp6wjyL/mGV8Cwzj2MMuB4RA7yb5l/mtCICCRgDtqtpBTwK1VL9pA0A
GC81DdOZbUVL1+b7FB2Q6Z/B/dIT2SF08XGYp9v8Z7b7iFxkEq2Y1tc2PcoV
8sr7QfuhQMYn+z//4FD8h/6DCYFDiaOWjFdjtheDR9ZWnFCQkm933wz8PFZM
/l73Vc/6xQooQNZGCoOzxd8P5c56dnXbdxwrSPHuTwzs2lgV+9s35BvCthCU
rhPFd/qq9wbGtvsnQCgyvLO6MM6k6f4Fj6d7FxgJgAFtp0MB6FEFwRtO/nFa
SBjwzrH8kMsVOadrbcDDs5zsXoJtqvcspSXcZmYkBHhgJlLBFIB5FtPC+vFg
SgXVBIEoCQnYv1wbUyFiwzhRG5NsDDz/LO/EDv/YDnURCW4jlaxXdAWn3OR9
6EWyVvnHwQOnjkQdzY6ry02s3L1ppDzzx4GiF2fyXp3Jh6Jj7ZpbuVkN1cr9
xq2rK7a1Ky44cXWy6O1YydqifXXG+v1g8YWGPX3FSV3Fu3ssO7rzEl5NQ/Qp
W5sqDY0X3e2v3ucb2Q73751M8VHpm6UKoBrBA7zPAkRYHNyztB9TIRqiwjDl
OR7CPdj7OgBYB0StoAOwYQxoY2tgGuPBHeXgSfdPMjAEfsKONkPCbADXb6RC
kuhmecfAFxBKwDtpvvFAdSdEEPJ6C8qQW/7brfv6CxOGLLGXm/Y+H7K9mXW8
GS951nPoee/h1dnCtfMWGPZsvHDFn/inoTwSGpYtryYKgIq3Y0XKpJX8CZQV
15vFki9O5sw5Uqesia9ny0KLFW8nCkOjxY+GavdXTWepQpHhX4DbwN4nhHhm
OCo0I/1UUjADC4a5L/AgOpTNd3YKUwZoMKdj72MYWCM9cBZTwWEAu1IweDw4
lUBg6AoD15nlfE0N+531RIBHJWFaSgX8LEAiS+3M8kxneKZg6tXU9AXnA+TX
Ny67Q1e8d0/svVK3/c00VBze1Vnby+HCn84UksXPy9Xkjcajhtsd+49v+3VX
9ken9vzhfnv2+hfHQjdqlUtVoWtVoXPkF4vId/lmSiEkhRasL8fzyR8uOOdS
gI2Z0ieDtbsCU+ST+ucyodLXYJjnTKRCW65UYUj1QThYSBGiv7RAwP4Vj5qN
56jgOAEkqGGtoCRQGPBWanCIZRTUqGhohLBd8CNyN0aCUwOuLSQPFDOOmfD6
CWSYW/1q2hkYhzmb6h2pP9q3OuWBynF1rvTnqbLXU7Y30/ZX46XAw+tZK/kj
V1drgJDQsvr/VD5pvtiwo333h9PliWOlmx637Ao9rAtdryTLEZcDoVs1oTt1
yq361fPkG31vZ0uCi1byGn26TJksXBsu/qrHEjg6kAmpAiQMoBhELubpFnqY
05nrmQnBwiALbO7j/IH4EfoBBkSFpiHIkunKA2rTs7BxIYNRQQ0jgc00lATk
xkJJ2MC/QlAwyzyl5HAACBRNbvVNbfONb/XNABWqho/Dzz3gnzzbXv/zSBHJ
J0eLnw8WP+8vfn6m4M08pBnVyvVjys3m9RW/MusILdnI9/ceH3s6UXY695NZ
R9ycbcuzsTLlydH1S+7QtD14LRC8WqncqSdgXIdza4MXfeTPWYwWBaesofPu
13P2px2HbrVbG+s7s/wkgtAgArpBqWA8iFQIhuY7knccTTjvUzxSECrcUW4A
3WVUYHEI4+E/D0YZyKqcYTxAG4wLKOxQZuU0GBUEM1r0YmQmgpklFTjz1Afj
ZMbQD1RQHmC7zUvaOf6RwSrHg+aDzwbzXo6VPB/K/2m0ZHXZHbzkV65UgwWv
1wSv1AaXPGtjpaFpG/ka/9fNLy97+w5vmHUkrLiS3qwEIKaErvjfjlpIFXOp
ap28Nw+Q3xu6EFAvUglH1886lRmIJsWvB3OV2dI7pxt2e2YzvcuZvoVM39xW
/3xmgCgGgJHmh4m/KGJg7MQ6Tw6lew2ybwAGAcC1zTRBmlJiKsJCIaOCIsF2
RSoID5WGQ1wqghQGLjLLwQA9NNkwiyacaOhnTZMwAVs9UaFUZJJSdEzlAVSC
4JHjHbrbU/H8dO6PvUWvJkrWl13KSo1yCaxWuVKjXKklBunErOvVUDH5m/9X
/S+uHu13Z1tSPpwo3vKoI5v8HtmDWvL+C5hZsK+ftStXq0Lz5Ku/63N2OIW8
Tr3gJb9yeLUagtHanP3FaGlbYy/c29bKBUpFVmABDBo0mjCDEpVUqarfOSrA
NRm+ZdoPlulfEh2KIwie+GzuR/A7FyZwZ6b/7NbAuYxKYpQKCgAmAXOCqeB6
RGAESCQ8aJz45oyz3jQLhehAtv558DgRDf9MVmCCqkR6JVxtSh0wBZ0ABsku
vLOtjadIJnnWR345CGb3uWryFxQpG4SKo0QrznvIbyWD38+7O0oz0j/5LC/u
o7GSLU96spV7R6FsWZ21Q52i/qaqB8RhfdmjXKwEfXgzkE9+FXGmPDRpI7+P
vGADTp5NVldUD+3wz8HtpQXmtnrBFtIr56EB90M+kX8hM0ASUUoFQ4I1yIKV
Bol8UqeJISBwltMEztccGLRB/A7bwIqYS2hHdSqwiQkGJyPSJISLPjo/Er9T
KsJ4oE6ujccAFSTFpRf0kgRGpw54mNoRmAaP7PRPbycLBbO+QMfjzsIfz1jA
s5BSKitV5H/3UFUidLmK2HmSM6yO2V+PFIcWy662HanYvtGX+fHRrN+NF0X/
MFICcvFy2vLH/sPKhUplyRUEtG6pb0muVq3NVTwfKvy+K/eL1uyv27K/az90
rybzbn3mzDHfAahPA0twVwCwRoh/MQV48J+FyAIez/BRBVg0CsUSSy9FceAc
/c4sEcNAGr5zLCgQQzGCGsHDdw62tM0M+5rLLjhHiyYeNYaSsDiwtlkPd5Qb
QCSick6TDnq6byYdAplvKquKBI7d/klgA+ZpYaD3xOHUgZxPuw5+0n3w49bd
Hw0VRM96Ux62534/bH0x44Q8k3x9YqYcMsZXZ/K/bt877U/1pf5z/uf/Lf/z
v6rf+uuhw5/dqNv+02Dhs8EC5Zw7tOyFTOPlrOubgcIv2w887cq5UZ215Ey8
4E172rb7ed/BH/sO/9Cx60n7wZb69m1V89tAKwJT2wIzWb6l3ZVzZbVjJLsI
EAyACjCdCr5CFLVddH2EQ9Sb4FzwMoFBdzrXEI0hgcHYXjm7rWo2gselR8VO
GSESj4NzcQO21LgBBq0gaRsdAHnFPKk41MWBmrpee90IuZnA3A7Ao3K6wNNz
vansSfP2Jx3ZF6oyx8qia5L/2RL1dyUb/7Yq84OGbb8NJP+q+8Bn45b4SUvC
kjP5YiCj7/BHOR/95bbf/sX2f/mL/R/8J8DDl/6vJ3f/7mpl0tnypAvulAV7
wlTppnlL9KIj7t7RHY+b916tTvuybe/PA4dDk9b1SZKRrpF8w3anaVe9p2Z/
1exu3/T26lnQtyJXX72nKT2wCOEDVIJSAQ2cM0h9zSY75oGJPI0CvAm+Zpzg
BmwzKy+wHtqGLW6DEapNPAuup8b1RFAPo81hBjjX491IogEZiJrMZ/nmtV2o
gPxzoL2tfre3+hTAAFSAgOS4T8749706fSg4Wfp6yvL45IHvegofnNi/VJE6
60wbyN80WR7TtvPDqtR/9Sf/iz32H3M//7vGbb9eqUp0xf7DgX//630f/qUr
8Ze1qf/iTfzliV0frFREN2f9qj9nw0jxhgXrluvVad92ZK/PO34eK/6+69Cj
5n2LntSu7I9atv7rWO6Hz0/nh+ZK/th14ErN1nq3d3fV/NbKpR1Vc/5A+3Bd
VV7VlJrRLTFTFQMlDMZEguOBMsAlBhwepI1kgToXI0H9jg+xhogEoULmeowE
NwA3uE5xMFMMM00Q2xoPgXmjLaZUkdQCMvytqgLv8w6c8lqO1x7bXzmRVT17
xNk6aNn1zcmdbwYPvZ4ou+JNL/rov2b943859PH/OLzhHz2pH7TlRF1v2n+h
ese8O3PaltR3JLo284P+7H+/35hyqSrFm/Iv+z7+7/s++Ct/8q97cz/9pnv/
eW9sx97fX6lK/+rk/mcdhx637LlYtaO/KK4247eO6L8PxP2yK/uTCXv8o+Zt
z/pyrjg3fdd7+MVQ/sOmrBv16S0e397AbF5B4NThtBVfxnxlXrG/Nz2wRI3l
FczXYnpA6hEkCKyN+0UqpEZhYE7HVIBtrbrI9UMP2PbqOexK2OIeKTAiFXCK
qC3G3TkOD7MesoX6LgA5OaToC5QKtWdxa+UcJPYgyNuK2uwpUaPF0RcCKXXW
wsO24ycKUh827vy+c9/Lwfwnx7JejR78smv/sR0fF0T/etcH/5j8i/8W9/d/
E/cPf5P4i78o2/T/DeVvPOtKn6xIuhjY+m3nIWhs/ee/+Og//x8HfvtXJZ/8
deGHfzl6ZMOcK6F79x8ueDOeHN/zVed+yCKOZ/1msGjTjabd30+UvL3kUe5U
r92rJd/+veR6M1961Z3wsG7HH7uPPG7acb12W6/X6s2KnrVGP2jMfnRin89T
D6kFGGNDxUOeLkrqAlkbd9LawQwMZkwKsDIAA7ifUSEqA3TSfupxUTfMxMFs
JHa91MJhRV3/SScPULVKjQroz6hcyvLPZladTTtc7U//3UV34tdt+6csSSey
N16vTnrang0eeXwsc30slywxQUp5yR88V/Fi0v5VX8lSXXb9zo8nbEnPB0sf
nNzfuOv3O38FicT/Y//8r/M++tuWHR/MWjc+7Tv8arb4QVPWQvFnbZm/rE36
hePzv6qO/ad5V+qLGYey4gvO2F5NFdK38+T/G7pF/rKBcrtWuVSxPme95Iq/
4Er7rvPIly07n/cfuVq/a8ER/6hpz/3mPa7aU2nEg0sZlctbA8SgQR1KwdAK
RmFLXklUnYc2FDLU+3SXjQn3IHFgvmaux0gwlaDGSADLqr5EG1I/corBPM4R
wjAwI0e1cJoBKTp1PWuIuxQJACBTTdKgAWBsq1zMqCJCkRVYyKhayLJ1ejI+
X/Im3KnfdcWXdL065Zv/v7Dzfovq3Pb4n3F/us997nlubm7O8XhTLCkaE2I0
RI9yDFFERDEgfRqIoiK9M5TpewpFMUYTNZagIAwjML0P1RbNjTkx0URjoUzb
d639DtvNDJrnWc/7rP3uAjPrs79rvbu881XB3e6iCfkuvI9pqQs4ZLRXjhch
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
DBOijinwAQZRxwRpif0/366AeA==
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Make" -> "OnePlus", "Model" -> "ONEPLUS A6013", "XResolution" -> 240, 
        "YResolution" -> 240, "ResolutionUnit" -> "inch", "Software" -> 
        "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "DateTime" -> 
        DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.], 
        "ExposureTime" -> Quantity[
          Rational[1, 640], "Seconds"], "FNumber" -> "f/1.7", 
        "ExposureProgram" -> "Auto", "ISOSpeedRatings" -> 100, "ExifVersion" -> 
        "2.30", "DateTimeOriginal" -> 
        DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
        "DateTimeDigitized" -> 
        DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
        "ShutterSpeedValue" -> 9.321928, "ApertureValue" -> 1.7, 
        "BrightnessValue" -> 3.4, "ExposureBiasValue" -> Quantity[0., 
          IndependentUnit["exposure values"]], "MaxApertureValue" -> 1.7, 
        "MeteringMode" -> "Center weighted average", "LightSource" -> 
        "Unknown", "FlashInfo" -> 
        Association[
         "FlashUsed" -> False, "FlashFiringStatus" -> 
          "No strobe return detection function", "FlashMode" -> 
          "Compulsory flash firing", "FlashFunctionPresent" -> True, 
          "RedEyeCorrection" -> False], "FocalLength" -> 
        Quantity[4.3, "Millimeters"], "SubSecTimeOriginal" -> 
        Quantity["111019", "Milliseconds"], "SubSecTimeDigitized" -> 
        Quantity["111019", "Milliseconds"], "ColorSpace" -> "RGBColor", 
        "SensingMethod" -> "Not defined", "SceneType" -> 
        "Directly photographed", "ExposureMode" -> "Auto", "WhiteBalance" -> 
        "Auto", "FocalLengthIn35mmFilm" -> Quantity[25, "Millimeters"], 
        "SceneCaptureType" -> "Standard"], "IPTC" -> 
      Association[
       "Application2" -> 
        Association[
         "DateCreated" -> DateObject[{2019, 4, 15}, "Day", "Gregorian", -5.], 
          "DigitizationDate" -> 
          DateObject[{2019, 4, 15}, "Day", "Gregorian", -5.], 
          "DigitizationTime" -> TimeObject[{18, 49, 3.}, TimeZone -> 0], 
          "RecordVersion" -> 4, "TimeCreated" -> 
          TimeObject[{18, 49, 3.}, TimeZone -> 0]], "Envelope" -> 
        Association["CharacterSet" -> "UTF8"]], "XMP" -> 
      Association[
       "DublinCoreSchema" -> Association["Format" -> "image/jpeg"], 
        "PhotoshopSchema" -> 
        Association[
         "DateCreated" -> 
          DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.]],
         "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
          "CreatorTool" -> "Adobe Photoshop Lightroom Classic 8.2 (Windows)", 
          "MetadataDate" -> 
          DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.], 
          "ModifyDate" -> 
          DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.]],
         "MediaManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "E9633CAE364BC9F35E97092D634E60CA", 
              "OriginalDOcumentID" -> "E9633CAE364BC9F35E97092D634E60CA"]], 
          "DocumentID" -> "xmp.did:f5631ffa-ee13-2f48-9f4d-d8772396483d", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:f5631ffa-ee13-2f48-9f4d-d8772396483d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]], "InstanceID" -> 
          "xmp.iid:f5631ffa-ee13-2f48-9f4d-d8772396483d", 
          "OriginalDocumentID" -> "E9633CAE364BC9F35E97092D634E60CA"], 
        "RightsManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "E9633CAE364BC9F35E97092D634E60CA", 
              "OriginalDOcumentID" -> "E9633CAE364BC9F35E97092D634E60CA"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:f5631ffa-ee13-2f48-9f4d-d8772396483d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]], "PagedTextSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "E9633CAE364BC9F35E97092D634E60CA", 
              "OriginalDOcumentID" -> "E9633CAE364BC9F35E97092D634E60CA"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:f5631ffa-ee13-2f48-9f4d-d8772396483d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{
  3.764336977132354*^9, 3.7643370317858505`*^9, {3.764337351802519*^9, 
   3.7643373761843243`*^9}, {3.7643382807072487`*^9, 3.764338296046281*^9}, 
   3.764338768985097*^9, 3.7643390442529783`*^9, {3.7643465439362187`*^9, 
   3.7643465590713882`*^9}, {3.764346613317194*^9, 3.764346639187174*^9}, 
   3.764347206799325*^9, 3.764347575485873*^9, 3.7643479299315434`*^9, 
   3.764349046664014*^9, 3.764362035902216*^9, 3.7643623875599723`*^9, 
   3.7643628916394763`*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"47e64178-6d7f-4fb1-a026-2a87fc46097b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
y0VXPMrVCuWq50lXUf3OuKN7NlbuTw7s31Sc8Ofv+y3h6XIyg3GvmvyHILeC
ZMriVsXaTX/4AaFCmbApl4MXa7bXHEjscO9oOJzeUra9MS/u+bwjsuSI3K1Q
Fp3KlPXaOe9hT3N2YDhLjcjcuIzdDo3X1NKIuA0zg1V+UCAbL9AaLUCQBuPY
MnwTemEMe59uomWKAWuAa8Ay/eNqARpPMM8yGPDSmH/yzbjog7eaZLDD4lAX
i4l0XwjWYOIwhxogmuPr2ezpVwV8MBfSTl+fpeL8y/Fq5aJn7VYlJITg7r7y
9MYjaaeKsqoOJTm2JZ06kPBiyKbMeGCcEr5bG77lC1/1Rq75yPd4Vz1ENK5U
hMfKIkv+5dbDJ0tSu11b2izb6w9k1uxLXu4qVG76iZiMF0IEuX2ufre3Lweu
PyCRSo0HHQC1Mw5LkTDmfuNqWQsQTBC4VQwDW0V4TDDTlYRUZvonGRhAQnpg
HHSDxBr/JLU03wQHg+h3MwCk7sbNOOkw290k1wUShkjX8w/p4x0NCcwGDSWb
CQm9AAPkJLmAkG+kwHHqpwEfDCHXrlcot8j//9JWkHa6KNO3Mz60N9W3I9Gb
/ddvLpQpk/bIpPqHTe6GwneCyu0K5Xpw9ZqXfJ531b86XKpc8k34N5elf3C0
MLNmf1qTNbvbta3DkRm5UwmDl7WxovBQ6atea9vRY+RGvEPZfsONcABIDVEx
jvKEcS5AUM9iBrQkE2EgrlIYMryTxKgmkMIEVQZmNK+gSKjMTHBRgxYgzxRj
itQ4ZjgXi4nE/xA8USpwtqOVIaB71Ljm7s+FBv4LUJOTve+bjiJl3rt6w6fc
rvy067A76Q++XcnOXQl74v6cH/+ef9vHX/VY1qYckE+u3atR7vhJRLhdAVoR
uR2E/DN8s1KZskNOcvVsnmPz+iNpH9o2r6s7tKmxMONMabZyKags2MOTpaAn
907vrw5UQgTJ9nGySQI0NikS0SEh3/1HRXeLDFAnCiTg9oSEdM+EFjK8xO9A
QpaPGI0aOh6T6gFJmWEgdTSuoW1wGRsFCTsd+xc344QoUx3s4N1lhiO1wUBM
oIdCkgkCTgKKOhDIK2/8ts9GPs685IvcDn3ZU1yxfeO2D35TkPnvpRkfebck
laR+8HVPkTLrjoyXk/9L6HYIsgvlDiSctUAFmb64VaUsAFHVF4/vrT6UeLJ0
a+WBBFv2J4c3vH9qb1J41qGMFoXHSyCJvdF+fKu3dzOd4fGPaqgbeYB6FkFk
RoO+we96AmBQADE6UFdy2OBNLFVQvT9JqaAZBZaLrMCUTsUklEX/ipzQVVwj
bn0XMWE1dNTDpbUxohJ3EGOKMrDZNwBhHWCADqtyMlgU6vl+uAK0Irzog/HC
o47CsnTg4QPXjmT7lo/z4t7b+ad//qareG3OA1pBpiauVa7dJX+IFZZEK5ar
I6AV0y7lZvXNs/lV+xL3fPReWVZcbV7WiYKcpsPxrxcdypKbsDHvWO45tjPQ
nxMcB62QigOjghYydQ1hZSYU2PuaE40ej7bxTGhxQbdUiCm+CTAaIzL1WID1
RE0jp8CgDbSk8YLBwIxSwXxKy6wGr2IT1SA2EtxhzWjR6v2jMYBhg2i6hAOm
B4YJFYFBMBI7giCSg8UVPT+N1iiL/vANEIHQF33WmgObDq///b74P5fnfOzb
lWjN+PBZT3lkPqBSEVy77lPuVinX/SSC3PJFHlSQv9MLMnKj8mrjgeqD6fVH
0j07Nlpz1ltyPjq+e93qVfUd2aw9Mme/19O4y98H+QwZhvgJBplC7GAAyDbR
UcM450qsA8xxGT4MwzRYumcqzTfJLN1PVlO9E3qkIC3By8T80xQJKMCOqX6t
fUZgmjRWN5H2gSmgxcz7MUQgU5/gequ2xBYcsyPg9Aa8bAw9/PwJjSC5fsg5
B2hLeNTFFb3PRyqVpRD5Cdhy7ReDVs/W96ypH/r3pZRlr9u//r3Nf/7Xr7pK
wxAjLnrI0ON2EEajZDrrdpD8B2T3qsiXFdNO5VrwWsO+8pz1++L+Ur17Y4s9
tz4/tSr741+WfIAQjGrXRiyPOmt3VvRv9Y8QpQoMw/VwmiDCwAhRC2xsaNB/
qh4cJKRSVwnW69mqCsY0IEHdrXV8P3I6MoCBIgRLCgwsSeMAbJoSqYihEtRN
MVrSrSIbUkjMaNFTSi6BGWIwGBPOYaBiS2CAUkGkzD9aFOz5fqhSmQ+of4ig
5tvR8pPFm4ozPyjY+smRlHUlmXGOLeu/Ol+gzLiVOfLzH/L2E7LNGwHwNYQP
GMmSv9s8alUuB2+fPnwsL6f6SEbVnvj6g5vcW+NP7ElfAd5uBVYhgkzblnvr
dwb6citGtdQooEWKrMAYlghmDAzaACPByT7WCiYUjARMBS0DEqqjp8HXtOMT
0/WBuZ7WaCqhspHln+WokHocux5vZU6nhc0VY6w7vwtF0mxEpk4aAJg9gaUh
3YZzAsMiFT8MBiBAkJHpcu2nrfmlG/6Ql/GR70Bq+ZZka+aG0pT3v24vVqac
kRmXsuSPLNnDN71ri87IomftbgWZ7l60k7djC77rtfvy1v++POPD44dTThbl
HivI9qX+5RcQmRuByJxTmSpf7q7dE4QQBpcEd8pIoLmcRkJWYMIYR6JpHpYC
kYqoVggYMEfrm2YoErBM95OyBgYSB8oAlQi6qtbMqIVZWMJBMoPEqK8xD3hV
pIJtZUtpe0qOdGtstckWkhyp7GC0KBUQ2bOCIzSCABU/D9cqS8E1yCse1n7Z
U3pi36bQ7sT8nI8PJ39SmrMusDfh645SgsSMG0ggM5m3/avkDzW7yC9MrwYg
mVwbKYnM2JbP5h0tTG/IT7VnrtsX937Jpo+aSzJfzfuVK97IArQputcW2BMa
3BwcyfZPgFCorh+XWTQ3wHGBZn3YaA2N7/rqFPMmK+iJxIzRptJ9cwwMKgis
gEiYAtdTJNRNswwMdTnLOVo0KS2cVmAl4bzP1XNQxQ5VOB6ZkBOlYktgiLYH
v5SELjwfq1cu+9Zu+pUH9Q/OFVk2/lvlrk9sezeG9qd69206mPjXr9pAK9yR
Catyu3LtdiB8L7R6jfy1f+VBLYxcIN9YGSqCAHHj+OG8jR9YM9bVFW2rys9y
b9tQtf/j59PuyLXAKmQX07YHXRW7gv1ABQgCYKmO8rTxnT6HPCam+umiBcg0
I1ulSp6u54QcFdTv1INQUKOG6mLfHPGsf56BgfMHDg+mEgyMzOAcR8Vb8TDT
ihhiIuVKCpjACTdyoQFlmFlOcERfjoBHKBW0MaXixUR9ZMELvlu7VfnofFHN
jvgT+SmFG/9SsS3RtX29a+fGZ50lYcgrph3hWz7Qk8ijutUH1eFH1eRzi0UQ
EN+bvkJl1vmkreh0yXb/zuSyzXGF6RtsOfHNls1AhXItRP7w+6T96UDdgeAg
ufjgZHaQIMFRQWcD6ISAiATTBFw2FqbY+ELv3QgD0QStYPrAyQVFAkSD4gFI
MIP+/rdSgbUCCnT5LizFOFRM9RjmDGCgVDCt2BoY2KrmISTJCYwBFWRkehGS
Rrdyrxa0wpXyh8Y9HzqyP6nLy/DvTdv1l3/9vKuYpJoL7sjNAPm44n4NsKE8
rgcqIncqw5d9b0ZKIeW4c3RfYcIfT+SnnbZurSvYastYf+TDX389YFOWvOHp
8siw5dlgzeGKAcgoMBVkyB+cVvEYF6nQZhcDE+ou03QT0wdmOHbosjAlYsAU
g5X1WCAxGjjYUrU5HY85uqRUYDCwo2PYWxu8lQTziDPORRAZMMN4L6BiW3Bw
m1q5OUCogJHpj0PByEU/ZAiRO9UPzxVUZH90LG+jZfOGsm1xB1M+sST89dn5
UmXSubrkIX/DZLmWzGc+rA0v1yuPjoUfH4VMYw3GILPub7qKzxRtbjyUUpj2
QX7yJyeLM08VZv4wXK5c9q4ulClDlq+Gaw5V9m8OwGWPZWk2QZ3OCmzykGoI
LWvTCAyY6LgAs0FzgDnqd7ZkxrHBQoDuaw0AVuYMKrMqtPZZFfPSCMIR8i4M
vFUiWNoJDw08zox0LmSskm3CzQSEopWUiq1BGIkMZleM5vjHsoLDQMUPg0Fl
3kvebN6p+Wao9OjW93f9+28LMz4OHkgL7MvsLc961Wv9uTs/PO8iH+Pdq1q7
5/+x7/Dri/bwNVd4yfV6zPKyt2htrOjnkfKlyr3nHbmt9u1VeenV+5Oc63//
TX85+eZzzqYMlnw5EMgPDWRVwmVMg1bANZCkl7CBXA+DBYQEv8lnyAlNssRZ
ThbAmBMxDxwzrPuzZtTSYSvUQD2sAg8V81pZNcwD531xNTc0jlvGoAUfTS/A
vhMYDM7oVgwPKo/qhIzoIDExGdvsHYWkYltgNNs3mlkxCmOBkkD3d8OV5LPb
K0HlVtXr8aLh8o21+xPritLqDyQNlGV/11v4cqDwRW/Jm1m7cs0Tvu1V7oUe
n9kBq+R/EVoi70Nf9ReSiaxpx+thy8Omg5OB7efy0ztLss4Xp313oVyZsq5O
lq8NFH43GCqoJHlFVsVMTmAS7oKwoYcGzqCSr/ebRfzoKhYEjgTmcVamXR43
gxpWycoZRmNg0AbMy5yJqAASYNQdMdqb68a4zN28xaBCqFeRC47kBiGmD6qR
fTAnNAZyURTq+XGokvwa6HJAuRX8rLuk7XDSoD3l5ulDPwxYwzPeVyNF37fv
/7EjLzxWpv5vIIHvBwoXfRmPT+8j3+FccryeKIUI8stoKfk4c9oZXgyuXfR+
N1BypXrHUFniz0Ol5KfrEzZloOC7oWBxHVzGVE7FBAE7MAlYUipUm1TzB63A
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
CUajIBrgiEO+ritHy75p3vP1uf3LJ/csBDPO7P6Ld9O/lG34l4q0P5zc9YFz
0z/Xbf9DZ/6GriPrB0o2Trszhoo/LP7kv275/d/l/uHvdv7m/wwk/7oy53e1
Of922Z82Zv14zJ40VhbfV/zxhGXdnCPpfv22L87suVW3+aumg697iyGIvBop
eT3jIH+/d8r6TfOuNn/ZPhC0ihkSUivndvtH6gJV8Mxzg/D8o1SocvF22RcL
nEOlDEjbcK5njTdXLUKBLUlBNZEHZiIwsAr3u6V6khhCAjcTIVELU1urpjED
IiFc4BBUZQKicyZE6tAkBIucqqma4PHjNSchzdgWnM6pmjjsae/3HnrediQy
VPhqovzW8V2PTx1+0nRoLpi+UJE7WpY640+7ULjh2OY/VWa/5037t+J1/18w
/Vc3j2Yf3/K7g+//p4N//QdH2r8c2/7HUPpvGrf+bsm3qWnbbzsPfzhm2TDt
THlYv/Xb8wfD084Xw5YnLXkgF0OWpNO5f6xJ/XXXrvceH9+hzDt+6tr38HhO
m7voUNUIRIrtVTOuitbR+lJvXfe2KvAIeHYO6lVb4JThrX3fLEmQUkG9jGuk
xmCgeGhUqJuY95l/pY6OtlGRIH1BxcOwScYSDR9SKmLEEVn9OE3sYcQB5T3+
vmZXWU9NIK96MLtq5oCn7VzZjqdndr7sKlgZKb9bu6Uq9Veb/v5/z/ntf977
578vWPer2i0fTruy5wPbx52p4+60fkvSmf0ftO1979HRzCdnd9Zte3/v+/8l
41/+rijun87s/fBpy4FHJ7a27/3jtWDus+aD37Ydvnd8x7Qjo3Xfx8G039jX
/7farH/tKUi8WJXzZeuOtcGiuzXpd4/n/DJU/PTkzuWG3AHfkfyq4bzC6pP7
Nl70Zi9V7wwFG4EKsNwQMRwLuIQBd3bsU0NCaFQA0e/Mudwm5ndWz5CAcm71
EmMDPLitego7l/My3SpRhmqeJSESTTG3MiqwOIjeZ2FFbAa5BMCQBcuqiSxb
f3FKXMeRT65WZp2z7TxSXnfiSDa446szu3/uLfj0xLZXfYdfjOQPladVb/2w
KO5ft7333xJ//V82/st/Tv7H//v/r+xMvJq6tj/+j7z1W7+13u+91/76Vm1r
a9v3qlVr61QFR+qsKMiQEQRFBplDgCQQMk/gWOc6FhGZIfNAmFHUPqsd1Nba
OgDJzf3tfU+4HgJt12+tve7a9+QmDPtzvnvvk5uTknUfXS1IcKr2dFSDJd4+
mtWi3CNc+taGOX/Zv/otbdL8ss/fPpK2tL1q1zHB8uul26EreXgm++7xzMu5
G9vliWPncp52V+EtN7jlhTkyYgwHFRF/zZ361GDtrkfn8u4cl4zYBD2GIl1W
clvR5rEj+77/MueYRsuFFYUCqACtwLJhRlKgQx8T1pkkvPK1XlIi0pam98c4
xOeNP003BPgjjhvQZuVhZrgJPEDCHyA0fSTKAO3M6tMyQlMRw0k6mh17PaMj
rfxMRWKcU7Hr/omsoGbvyf0be3V7fjy9/9ujWXctYpizjKea9SnZAX2kVxOG
HrOj5vbZoq/ytrXVJD9tlH1/LrdeGi/4+H8zlvyzduMHFevmnt8f71btfnwl
J+ytfNSYO2TY25iz7KxwiXHbB4r1885nr/n2fB7rqWW7K581FuKOi8Nq9qYZ
elh2yMaOmMJ9Otat/OawqLts63cncx6cyHx6ufDBmfxu+babltRvjmZbTMf3
Rt91+l0qZp3pM0tEOjtAZAkSPBh/CgNvKXofRD/NGACjwYAjGK0V4NBBJ0KB
MFCpQWS0g/0pGJw/TRx+jxBeVYiPMED0DY7oiM4O1TuQAFTgopARH03T3JCl
JXdXbh0yiz21u2/VC++eEN8/mT1clzzRUhTyVrBuDS5l9+lZv+ZFpxwywp0T
We2VWwbqM8/kbMz47PXsFXOOS1fcPpz+W9PBZ40FUBWwQR2ucY3ZIndtzF0j
218d7ikNd8jun8y4UZRgS5x/PPmT5qIt/bq0yRsKtruKccjDvfiRQ1wMHzWH
+7URd82DU5ktJRsAicm2kvHm0hHT3j5TusO4v0TbhLlDb4ckItS5BXovnHKQ
uGeV+j8tCQgSsxqvAyTKs1JBQg+OwNhLfDDw+WfxJJCYklNCQgwt/JWzygU9
yPkYd6He8XtUTBukDH+KHjo7HAcSoKpESHRo3IgTn2K0FxyUn81dezprpb16
O3SR3506GKxNenmtOOKSMYFaZtgQ8uruX8wbNAvH6jNuHd3XWLK1eN2HooWv
yze+31Kx8/GFAog461WwNzW4jNlvYv26kFcT6texYxb2/mH2QUP4Zl3klhH3
OelXT3aV3D0qvrR/lXnXhydFy9za1EfXSnCjg66qic7KkF8LqYQZ0LAB1Q+n
9tmL171oKR9vKgX16NMlnq8t2Wfk/hVaT7oOCjm3wOBKM7hSpqtBjFzMbCdn
iklU80nBMJsgzEoC79MWM0hHfNbo/9541DHaSTSJQ2AAMREQwYcpT5nQ6Izx
UQHwuU5+MF0f5QFOiUSQ3LFXD76dEJJsdOZWnb1Sur23bs+IJeVls7y/ZuuT
c5msqyLkUz/pUAxaReey4y7kxHt0ghP71hTHv1cS/95XB9YMm/c+azoUcVZC
OsCFa6+KGaqLBE1htyrco8JvMAwYw30G5paNuVcfGdZEhgzh26bImJUdMUeG
jGxvzYv2wlFr6qnMpdbt8y9mxHm0qb9ckz25lPesqYj11+HtHH7Vi+YiX1XC
w7P5kEpGrekOfaqu1pBpwj+TmyZurub0CLQ+4GSmPtAN47R8McUDlIXklNSH
/EN4SpUK0UAbfVH7QypoxQCbGXFiYlMP7fC5A4tMUzdPAgeDY6aRCMaAMUWC
nfZRVw0grc4pc+HRYIfZhP9GHVdjmJwCKNWg5oT/qsF1QHn5ZJm4s2Jzc/GG
u0cyb2kTfz0rGm/K+OnSwQdncrqVO49mrqxNXHJg+ZzspW9oEj+GkcdXcjkY
1Ky3jnXpInZFCDevqAr75PixEX9duEcxfqMyAqgEDcyolRkzTvprwwN6SEPI
A2SKm2bmpom5Y2ZHdRG/8reWokFj0nnJUsvOBWclnw9YhM87q/C9Nrs81FX+
W3OBuzyh35g6ZBQMmZJ7VLuNtRapySmCosLgxpyuC6RwchHTSNIrCSSa9KN8
jxBjhBD+etoRmPxgPBV86GN8AgM/MpOKGB6oh+xik2OKBKQi3TRL0P9AH2al
hacijdPVVKMbTgVc9gGDHwpaAaUFPsWIpWaxrqk+K+mMdOXVvLg+bfKIZvf9
Iym/XMj85WLejxdyek0ia8qyzM9eL4p799zBVbeOCcZbyliXkvXVAQ+MSxXu
qgbD3fO6lIxdyQyoQ3Z1uE3+4krx4wt5k50y3I/Rjavc+HGPANYnzIAu1Kdm
gmpc+h42s7csHCE6dlQDePzaXBzUJH0lXt6wa0Fj4aabJ7JftsqhvBm/nu+W
bQ2okwPavX5NsqsuyaTS4t9o9AkNuH4I1UUarmOgA0bHnZzyEY9hgI84fzot
+tNtVirIuND8CgY4Ck1BMJ4KiD4NAPHJ4HRz8FSAARJgECYSemIxMMQM8kLB
PWSfqiXwlCCBVIBWgFAYewgY8FCqEVBxQVqBwf21lzT7tp3a93mLbNOwIWlQ
t/vhmSxH7e5eY0Zz+fbyhA/zl79tSV7iVu/66WJupEvGuqshWUAbEnaqQp1V
TIeCddaEnKpIpzLSVh26XjzRI//hTNbTS/nj12UvW2X46UKvKuysft5YwHSU
4b15dgXupBTQhAO6yKCV6deHoLAEPIbMUGSyd2xYh4xA4qh60pjnVe88LVja
kDj/Uu7asaPZky2lP50/cPtopku1q1O25dSBhLyKBjFkEABDh10DUAEACA2+
GDBghJ/v9NyPMsNFmcaDhJ4GgzivBmPSBHU9GscGTQUd9+kwOGZSIeJ4EIFD
4UGHnseDH4x5iHeirxDNRDiSbgTZdEGCSDE4UwzkZd3gIxJwvcUn1HdkC4T1
aSuaShLGGkT3z2T/fKXYp5fKNy8QLnyjcNU7lw/Fj32ZNd4GiUAZ8ajxbXS7
CjLFZFcV61QzPerHl8udqj0Pvip8ea3kt8ay59cLIs6KMWPSRIsMb8Jx1TED
Foh7uL/ueVM+21UGCYVxQLtR9bKt/HZD2n+OSp62ykNBLTtohp4FKpDQgBHS
DRQeDPf+O24G7qx+9FVOW+kXlh0LtTvmX83d4Nak+Ezp5zJXmpIXqRI/VUiT
SwtVEk13ypRKAAMEDFoN+EH6AnINTQXt0FSgDtCoUDUDGvUQXCky94ERKojN
pglRBiRmJ1EPidnOMWMncgHjYrNzOhh2SkOcYFOhd9FIwCkPDKVRXKtrxGch
GFBhGrFKF+sRoTQT9zsoG/dll+zfui7hozdEy+c1FW+5WrS1XhCXv2revs/m
6PZ84qhNhMoBv4wyoMGSz1sX6ZJPtlaG25Vsd83zGzKYsB7lrn59krt2T4Ng
PSARaVdEepTskGaiSxZyKMKeWtapjQyZ2SHLxE0TfrjYr8R3z31qXPHoqY3c
rX/mVz24lHv7SNq3JyU/tZVCNRIJ6PHd2KAO6lKoOtixBrxxawQ3zIFuFxrV
+pSPBR+9lvXZOz01yTfKN1vTl5n2LJZlScWaVlL48XEXGWNnOp0F6OjTF7zS
gSkq8DJDACIbzQ5knEoTNBgkiZBBciR4kNBAAUkcAIAwQHxaQGLG4UjAmMLD
yZ9OMQPwuGkSiHGa082/GiFwSnNQLoAKog+QQZJNbvjdJKXHBWtWCJa9VpLw
kUm6JnPVvzbNfW3tm/99KmvVt+ek+GWUuBOFGo5QOeANVPYqtlPOdFQ9vV48
ahY4lTvvnjo4YVexEESf4furpeMdcmQATm/rJnzVEQfeSMO6NXij5hC3BHHH
yga1UHnioke/BpBg/3OM/eE4++hs5Fvbc2/lj5czX3aUveiW/9oiC/Ua8a7g
fh13vTEyDDkFOhcLJJfvLx9sKtygTPhAten9grXv1yQuNJfkSIyOVINfQFIJ
x0NM0P+gVIiGckapIMR2clqFwOeFVxJhDoKlm3rBaHGgwSA2s4Sgox/j8zzw
VNBGI8GZixhRCd5my009U1y5gAHItgAGvqAB2jcXViBWu0Rx7uC2VeLVc/Z8
Ojd+zt/Tlr5tSVv+8PwBrhnUMu46SBOQLHCHf7fmSUulU72nX7d3vF32sqVq
sksBFSYkkbBPywa0LzoU4x1VrFvHeDXsTWPIr2C6FRFXHVLh03Db41jwjqxe
NVyMnygJ6tix45E7RyPfHMOWxF8D1zCDBnbEChnkx6t5dxuE357O+q0T8WBA
bRAkE9I1imzASzHeypbq3XELl27anSequYwriiYP1lH6WTSBRiLGaCpoBeDq
w14R1UTQIZ4ZdKCCzheIAQcJjwofbt6kFgcfd5qEmSbmUol4KqEQm/JfwcCn
D54KyEH0i1Na4YTEAYohNnpE8H8DoYAn6hwCkxfmV1J+/cK4xI/mfHgyd/2j
r4tRHzqQAaanGjdedijH2xX3Tud2y7a0l20aqc/4tbmEdeigxoAKE5h5drX4
xTUZJJdQt3KiQxlxafFOrVED48MulXXUABssdJe9msiIETdECtbhEkRQg1G+
WT85Yg65NKA2GO4R6E9tqAmjNrQR63OP6oeLufdOSB6ePzhObhIG0ejVhkdM
zD3QmcP2y8fTdR2ieneqORpcAGOWwu//Y4ABkQhiYkoiZlLBR5+Enh8kIzF1
xasoWx2zEkIgocxJxnkSwJFYXDwbnOOeRSLMbjIOR6nFNfVSXEKhhEVsCggt
nFYYvaTNERncgAr2O1a30Ow9qGn6uaMBZjHM9Bdt8nAP11Z0Vw/bUjtkCUF9
6s9NZdwcV+Pc96gfN5b12/Z9d6EIWtGJlqpnzeWT7Urc8N+tQypu6sLearxV
z1EDlQbbWok7+UM6GMVvDmKgMw0YmUEgwQy1B0T5RWdNsyqtXhr/1f71QUP6
k/YKFAfIO5BivjvB3D383Kf6tbUYP+ruVbN9DZCkcA+NUUOwtVFo9onNXvy3
G/DdB7HJl2528fmdVwDaf5X9KZ83HgYxaj46EnMfGDmN0QFSM/AA8H6MiS39
YNEJa0Eq+InPR5mWAv4hEVdz8jzEIAExFZhdNA8xVHA+AiMxgSbwF3gEnHG5
w0VqElQMLptAIYrXQHdv6im3dT/uOgrNxfPWipfNcranDuqHiFfxtPUQVoww
fwNaXKryaUaPZTSkrjywet7yf/5P3HuvqZJW/XSteqK5AkrNF12cyLiRCsan
AqiwZ2mrjrRVQjfKDuhRK3w18CIgF9Bx4NqFr+7hjYqKvRuXzX0zYf6bFbsW
Z69+78uMFUAjbsA1CE8xR+7a2AfHcNvnblmoR47rZq5aXEUfNo50XJbCn2bp
FVi8wEYatFRAiNk3M+506KOaYOl9RQLl8xjwRgjhnRh9IEGfAmCANrFlkDbp
VEwllDOrT5/OOkiQ4C1GH2ZyAiTwBv8o4ggtTvQNbpEBug8vTCghcuJJNxNs
vKWWzkftNmgzx1urQzdkz68XTlwvZdxVuOHAgJH16/DNzYD23mnxxf1xu+f/
XRq/aOtnH7zz2uvz576Ts/7z35rkv1wpnOiogXixDg07og97aqDqgCZ0vKmU
aa1g2uURnzoyomf93CpWrxZv+PTXTXhqDm1elrR62fL35s1/4x/5iXFbFr2j
F6wIand/dyqD7a0jhUT4tgVrCV8drn0F1E8u5WBJ49M87Tp88nQH/P5Cq09k
80ssPonFA3+dyBKLBI8BTQiMkMGZVPAkxFAxqyAQKaBJIL7EOgQGp8TJsLrB
+OCCSa1uKTfCR5+OOzxEs0FDAsdXSFg9qAbwh3NgwD8BYs2fcpBMQ4I3mEEc
AF5EgkMF1cPqgYkG41Kz7+rpS+NdRqZH46ne/c2RzHB7NWOvYXpV7KCO7TWF
AwYmUDt+o/DekSRD+uL17/5DsmGxZNPKL5Yv3rF2xd/+MudCSfKza6XjrUrs
O3pq2CED7mHSWc266l5eKwMqIm3yiLuGuWlguQzC9mInEhkwBGzZH/7XX5Pj
ltfmpWbtWFuXn5wYv+Tzt/52+uDGn84feH69GDPFMJQcVswmfViNMIMmXCpx
VIbay0OtFTcuXRRaIHZ+iblXbPVLrRh9sTVIJwVaEAgJvNF4kFOeBDhKUfbx
SBzJDBKISmB2sEZ5iCFBahuOoYJHgqeCHiGDMx/lfd4R27xgEEQ4AgMEA86J
UhHDCQ6avNyIF0e4IhPSClwmNHt5AZEa8TJITPCrui+e++Va2cR12c+XCn++
VMC61VA3Yu03YGK9JoygVzXx9aFW2XbZlsXS+PkHdnyxZelnu1avyEnauvjD
BZlrV/76delkC1LBduE2BWFvZailEl7kxfXyyRYZUMFCSQB9ZZBrXbGh0IF/
Rb43ZenCspSNstTt/57z7wNJO6Qb1h5KjFemf1EvjXvZVIBfOzUIJOAGv9yb
+DowSGr4K/Vqvm9tKLI5M81Agl9kDQISGTaf0OonVMyUAgIMOQWHXEYccjGg
FQXAGMwwR2HIsA7wDk+CZMonSHAWhYHHINam4k4mO4mvyDpLxIkjtUaDzscd
BjNsnmjEpwZ5g+t5hxDCHV38Ba+QiMqId+o0SgUntj5QCXTM/lKr/WGzFT/p
2aUYby6DLBCCBnOE+7Cwx8BVAtW3bOLMBW9VCTav+fjjDUtWfPLWO4krP13x
wTzBto3C+BW3j+bjV8Y4VGynCgXBpZgEiehRPm+sAAfakDBIxG0b9qRQouCU
N0CW0SSvPlyUse5fc0WrlqRsWFMo2L3gtTdyt62tzk5f99E8t25vpEWGDEBp
esuMecejjjiUuAsTLl9Y7/ecyrN4MqwQa5jjKBQZ06NMnBgAooPUZCdqENUE
LsTkITIi/h2T2KJsTFFBwOiX2gZBIjgDPAYy6oe4kUE+4nzcIcRTAMxOBYk+
FW7ylNhxQgJNBTXupk8pWqYYsJLMSxQGTznzEioet9Tj3hSOWpjarFMPbUJk
mPtqGJ+a8SgneuTHkxYVfPruocT1cYsWJW1cl7ljY27SF3EL3k/fFr93xRK/
RhTqxPVtpCJQC2VhqE3OtMrHr8vxI8kerBDwKyT8uBKCs37Y+qxTIdu6Mn/P
NuHmdWV71pjyhYasxILEjcXJmyXb48U7txUnLJlsKWddikhfHX4jgK8OP0hi
V+Be4kDFsOU7x5kCmy/TFpTYYI4HMmwBQgWdI3gSeK3gqeALRZoBmgrep+I+
8GrQ1kfiHg06ZwQD3mAks2GY+P8HKW2FeA==
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndcFNcWx+/MbC+0XZYiZem9twVEehOQXkVh2V1gKQsuuxTFhogKRBQR
EWwgQQEDRkORWBHFQkCw14AEASUGo9hQyax8PokvL++9vPz+uJ/vnHvOnXvP
OXc+o5GQEZIIAwCyCOgQws5xFQrZeaEy6EO4IIufJOBxfQUiXhJPyEqAUKMP
BR0AxcefL8iAUa90gUgY4u3GjIqOYeL7AQyIAAcsAGBzsjIDQr3CJN6+nu7M
LNQJ/Ite3wKSBcF1E58gJhP8f5LlZApFAEBBKFtxeVkclAtRTssRZUrs0yjT
E1IlDGMkLEQ3iLKihJPm2fizzzy7SJibLuCiLNlzJjedK+EelDdni3koI/4o
F2XzeTko30BZO02czkf5rSQ2ncfOAgAjyY62iMdJRtlckihhWIg7ygsBIFCS
vuCEL1jEyxVJDuWekZkn5Ccli5j6HAOmhb09i+nDy0njiUQmQWxOKlvIZbpn
pGeyBXkAzJ/5s+QkuWWiSba1sLe1NbE0tfgiUf918m9KUtt5ehn8uWYQo+8P
21/5ZdQBwJpBc7PtD1vCbgA6NgKgeO8Pm/YBAKTRurUPfHEehqRfkkWiTAcz
s5ycHFM+j2MqSejv+p8Of0NfvM9Ustzv6WF68BLZ4jQRU5I3TkZahljIzMpk
c3hMkz838T8O/Ot9GIfwEnlCngCNiEC7jC9IQsst4PJF/AwBky/4T0X8h2F/
0nxfo6LVfwL0OFMgM0AHyM99AEMjAyR2HzoD/V43f2IEkNy8SPXx+b7/LOjf
V4XLJAP6Gfkc5x4SxuSIhdnzc5JrCbCABKQBHSgBNaAF9IEJsAR2wBG4AE+w
GASCMBANlgMOSAbpQAhyQD5YD4pACdgGdoJqsB/Ug0bQAo6BDnASnAMXwVVw
DdwE98EwGAPPwDR4DWYhCMJDVIgGKUHqkA5kBFlCLGgR5An5QyFQNBQPJUEC
SAzlQxugEqgcqoZqoUboW+gEdA66DA1Cd6ERaBL6FXoPIzAFpsOqsC5sBrNg
V9gPDoOXwUnwCnglXAhvhavgOvgI3A6fg6/CN+Fh+Bk8gwCEjDAQDcQEYSHu
SCASgyQiQmQNUoxUInVIC9KF9CLXkWFkCnmHwWFoGCbGBOOI8cGEYziYFZg1
mFJMNeYwph3Tg7mOGcFMYz5hqVgVrBHWAeuLjcImYXOwRdhKbAO2DXsBexM7
hn2Nw+EYOD2cHc4HF41Lwa3CleL24lpxZ3GDuFHcDB6PV8Ib4Z3wgXg2XoQv
wu/GH8GfwQ/hx/BvCWSCOsGS4EWIIQgIBYRKQhPhNGGIME6YJcoQdYgOxEAi
l5hHLCPWE7uIA8Qx4ixJlqRHciKFkVJI60lVpBbSBdID0ksymaxJticHk/nk
deQq8lHyJfII+R1FjmJIcafEUsSUrZRDlLOUu5SXVCpVl+pCjaGKqFupjdTz
1EfUt1I0KVMpXymu1FqpGql2qSGp59JEaR1pV+nl0iulK6WPSw9IT8kQZXRl
3GXYMmtkamROyNyWmZGlyVrIBsqmy5bKNslelp2Qw8vpynnKceUK5Q7KnZcb
pSE0LZo7jUPbQKunXaCN0XF0PbovPYVeQv+G3k+flpeTt5aPkM+Vr5E/JT/M
QBi6DF9GGqOMcYxxi/FeQVXBVYGnsEWhRWFI4Y3iAkUXRZ5isWKr4k3F90pM
JU+lVKXtSh1KD5UxyobKwco5yvuULyhPLaAvcFzAWVC84NiCeyqwiqFKiMoq
lYMqfSozqmqq3qqZqrtVz6tOqTHUXNRS1CrUTqtNqtPUF6nz1SvUz6g/Zcoz
XZlpzCpmD3NaQ0XDR0OsUavRrzGrqacZrlmg2ar5UIukxdJK1KrQ6taa1lbX
DtDO127WvqdD1GHpJOvs0unVeaOrpxupu0m3Q3dCT1HPV2+lXrPeA32qvrP+
Cv06/RsGOAOWQarBXoNrhrChjWGyYY3hgBFsZGvEN9prNGiMNbY3FhjXGd82
oZi4mmSbNJuMmDJM/U0LTDtMn5tpm8WYbTfrNftkbmOeZl5vft9CzmKxRYFF
l8WvloaWHMsayxtWVCsvq7VWnVYvrI2sedb7rO/Y0GwCbDbZdNt8tLWzFdq2
2E7aadvF2+2xu82is4JYpaxL9lh7N/u19ift3znYOogcjjn84mjimOrY5Dix
UG8hb2H9wlEnTSe2U63T8CLmovhFBxYNO2s4s53rnB+7aLlwXRpcxl0NXFNc
j7g+dzN3E7q1ub1xd3Bf7X7WA/Hw9ij26PeU8wz3rPZ85KXpleTV7DXtbeO9
yvusD9bHz2e7z21fVV+Ob6Pv9GK7xasX9/hR/EL9qv0e+xv6C/27AuCAxQE7
Ah4s0VkiWNIRCAJ9A3cEPgzSC1oR9H0wLjgouCb4SYhFSH5IbygtNC60KfR1
mFtYWdj9cP1wcXh3hHREbERjxJtIj8jyyOEos6jVUVejlaP50Z0x+JiImIaY
maWeS3cuHYu1iS2KvbVMb1nussvLlZenLT8VJx3Hjjsej42PjG+K/8AOZNex
ZxJ8E/YkTHPcObs4z7gu3AruJM+JV84bT3RKLE+cSHJK2pE0meycXJk8xXfn
V/NfpPik7E95kxqYeih1Li0yrTWdkB6ffkIgJ0gV9GSoZeRmDGYaZRZlDq9w
WLFzxbTQT9iQBWUty+oU0dGfqT6xvnijeCR7UXZN9tuciJzjubK5gty+PMO8
LXnjK71Wfr0Ks4qzqjtfI399/shq19W1a6A1CWu612qtLVw7ts573eH1pPWp
638oMC8oL3i1IXJDV6Fq4brC0Y3eG5uLpIqERbc3OW7avxmzmb+5f4vVlt1b
PhVzi6+UmJdUlnwo5ZRe+criq6qv5rYmbu0vsy3btw23TbDt1nbn7YfLZctX
lo/uCNjRXsGsKK54tTNu5+VK68r9u0i7xLuGq/yrOndr7962+0N1cvXNGrea
1j0qe7bsebOXu3don8u+lv2q+0v2vz/AP3Cn1ru2vU63rvIg7mD2wSf1EfW9
X7O+bmxQbihp+HhIcGj4cMjhnka7xsYmlaayZrhZ3Dx5JPbItW88vulsMWmp
bWW0lhwFR8VHn34b/+2tY37Huo+zjrd8p/PdnjZaW3E71J7XPt2R3DHcGd05
eGLxie4ux662702/P3RS42TNKflTZadJpwtPz51ZeWbmbObZqXNJ50a747rv
n486f6MnuKf/gt+FSxe9Lp7vde09c8np0snLDpdPXGFd6bhqe7W9z6av7Qeb
H9r6bfvbB+wGOq/ZX+saXDh4esh56Nx1j+sXb/jeuHpzyc3BW+G37tyOvT18
h3tn4m7a3Rf3su/N3l/3APug+KHMw8pHKo/qfjT4sXXYdvjUiMdI3+PQx/dH
OaPPfsr66cNY4RPqk8px9fHGCcuJk5Nek9eeLn069izz2exU0c+yP+95rv/8
u19cfumbjpoeeyF8Mfdr6Uull4deWb/qngmaefQ6/fXsm+K3Sm8Pv2O9630f
+X58NucD/kPVR4OPXZ/8Pj2YS5+b+w0AsgC3
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Make" -> "OnePlus", "Model" -> "ONEPLUS A6013", "XResolution" -> 240, 
        "YResolution" -> 240, "ResolutionUnit" -> "inch", "Software" -> 
        "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "DateTime" -> 
        DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.], 
        "ExposureTime" -> Quantity[
          Rational[1, 640], "Seconds"], "FNumber" -> "f/1.7", 
        "ExposureProgram" -> "Auto", "ISOSpeedRatings" -> 100, "ExifVersion" -> 
        "2.30", "DateTimeOriginal" -> 
        DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
        "DateTimeDigitized" -> 
        DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
        "ShutterSpeedValue" -> 9.321928, "ApertureValue" -> 1.7, 
        "BrightnessValue" -> 3.4, "ExposureBiasValue" -> Quantity[0., 
          IndependentUnit["exposure values"]], "MaxApertureValue" -> 1.7, 
        "MeteringMode" -> "Center weighted average", "LightSource" -> 
        "Unknown", "FlashInfo" -> 
        Association[
         "FlashUsed" -> False, "FlashFiringStatus" -> 
          "No strobe return detection function", "FlashMode" -> 
          "Compulsory flash firing", "FlashFunctionPresent" -> True, 
          "RedEyeCorrection" -> False], "FocalLength" -> 
        Quantity[4.3, "Millimeters"], "SubSecTimeOriginal" -> 
        Quantity["148675", "Milliseconds"], "SubSecTimeDigitized" -> 
        Quantity["148675", "Milliseconds"], "ColorSpace" -> "RGBColor", 
        "SensingMethod" -> "Not defined", "SceneType" -> 
        "Directly photographed", "ExposureMode" -> "Auto", "WhiteBalance" -> 
        "Auto", "FocalLengthIn35mmFilm" -> Quantity[25, "Millimeters"], 
        "SceneCaptureType" -> "Standard"], "IPTC" -> 
      Association[
       "Application2" -> 
        Association[
         "DateCreated" -> DateObject[{2019, 4, 15}, "Day", "Gregorian", -5.], 
          "DigitizationDate" -> 
          DateObject[{2019, 4, 15}, "Day", "Gregorian", -5.], 
          "DigitizationTime" -> TimeObject[{18, 49, 3.}, TimeZone -> 0], 
          "RecordVersion" -> 4, "TimeCreated" -> 
          TimeObject[{18, 49, 3.}, TimeZone -> 0]], "Envelope" -> 
        Association["CharacterSet" -> "UTF8"]], "XMP" -> 
      Association[
       "DublinCoreSchema" -> Association["Format" -> "image/jpeg"], 
        "PhotoshopSchema" -> 
        Association[
         "DateCreated" -> 
          DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.]],
         "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2019, 4, 15, 18, 49, 3.}, "Instant", "Gregorian", -5.], 
          "CreatorTool" -> "Adobe Photoshop Lightroom Classic 8.2 (Windows)", 
          "MetadataDate" -> 
          DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.], 
          "ModifyDate" -> 
          DateObject[{2019, 4, 15, 19, 6, 21.}, "Instant", "Gregorian", -5.]],
         "MediaManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57", 
              "OriginalDOcumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57"]], 
          "DocumentID" -> "xmp.did:2b0421b3-8053-c74a-b53b-d377c3be6b9d", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:2b0421b3-8053-c74a-b53b-d377c3be6b9d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]], "InstanceID" -> 
          "xmp.iid:2b0421b3-8053-c74a-b53b-d377c3be6b9d", 
          "OriginalDocumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57"], 
        "RightsManagementSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57", 
              "OriginalDOcumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:2b0421b3-8053-c74a-b53b-d377c3be6b9d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]], "PagedTextSchema" -> 
        Association[
         "DerivedFrom" -> 
          Association[
           "DerivedFrom" -> 
            Association[
             "DocumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57", 
              "OriginalDOcumentID" -> "5B5C3F395E2FD06A00B1A764F7160C57"]], 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "derived", "Parameters" -> "saved to new location"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:2b0421b3-8053-c74a-b53b-d377c3be6b9d", "When" -> 
              DateObject[{2019, 4, 15, 19, 6, 21}, "Instant", 
                "Gregorian", -5.], "SoftwareAgent" -> 
              "Adobe Photoshop Lightroom Classic 8.2 (Windows)", "Changed" -> 
              "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{
  3.764336977132354*^9, 3.7643370317858505`*^9, {3.764337351802519*^9, 
   3.7643373761843243`*^9}, {3.7643382807072487`*^9, 3.764338296046281*^9}, 
   3.764338768985097*^9, 3.7643390442529783`*^9, {3.7643465439362187`*^9, 
   3.7643465590713882`*^9}, {3.764346613317194*^9, 3.764346639187174*^9}, 
   3.764347206799325*^9, 3.764347575485873*^9, 3.7643479299315434`*^9, 
   3.764349046664014*^9, 3.764362035902216*^9, 3.7643623875599723`*^9, 
   3.7643628918170323`*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"fdf4edd4-3529-4891-8c82-2d1cda0c5cab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0016565`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.764336977132354*^9, 3.7643370317858505`*^9, {3.764337351802519*^9, 
   3.7643373761843243`*^9}, {3.7643382807072487`*^9, 3.764338296046281*^9}, 
   3.764338768985097*^9, 3.7643390442529783`*^9, {3.7643465439362187`*^9, 
   3.7643465590713882`*^9}, {3.764346613317194*^9, 3.764346639187174*^9}, 
   3.764347206799325*^9, 3.764347575485873*^9, 3.7643479299315434`*^9, 
   3.764349046664014*^9, 3.764362035902216*^9, 3.7643623875599723`*^9, 
   3.7643628918210726`*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"51762449-c66c-4165-9036-067a2c4876d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0011205`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.764336977132354*^9, 3.7643370317858505`*^9, {3.764337351802519*^9, 
   3.7643373761843243`*^9}, {3.7643382807072487`*^9, 3.764338296046281*^9}, 
   3.764338768985097*^9, 3.7643390442529783`*^9, {3.7643465439362187`*^9, 
   3.7643465590713882`*^9}, {3.764346613317194*^9, 3.764346639187174*^9}, 
   3.764347206799325*^9, 3.764347575485873*^9, 3.7643479299315434`*^9, 
   3.764349046664014*^9, 3.764362035902216*^9, 3.7643623875599723`*^9, 
   3.7643628918270063`*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"5acfd1be-ec0f-417d-8bba-f352b6578b08"],

Cell[BoxData["0"], "Print",
 CellChangeTimes->{
  3.7643373764340396`*^9, {3.7643382808924*^9, 3.764338296289689*^9}, 
   3.7643387691895504`*^9, 3.7643390444932623`*^9, {3.7643465441683435`*^9, 
   3.7643465593054295`*^9}, {3.7643466135158815`*^9, 3.764346639398178*^9}, 
   3.764347207109497*^9, 3.764347575739377*^9, 3.7643479301818905`*^9, 
   3.7643490469329863`*^9, 3.7643620361781673`*^9, 3.764362387824005*^9, 
   3.764362891833989*^9},
 CellLabel->
  "During evaluation of \
In[386]:=",ExpressionUUID->"139a7c95-c5ed-4657-8c86-c3517adc70e7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7590204645167704`*^9, 3.7590204722881536`*^9}, {
   3.761314219054098*^9, 3.761314223198064*^9}, {3.7614921477045183`*^9, 
   3.7614921482850933`*^9}, 3.7614986983358374`*^9},
 CellLabel->
  "In[409]:=",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7613177472030277`*^9, 3.7613177616093187`*^9}, 
   3.7613178467393723`*^9, {3.761567452458677*^9, 3.7615674963005896`*^9}, {
   3.761568065789394*^9, 3.7615680687004986`*^9}, 3.7615681969019747`*^9},
 CellLabel->
  "In[410]:=",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fullImage", " ", "=", " ", 
    RowBox[{"GetFullEncodedImage", "[", "m1diff", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"file", ",", " ", "fullImage", ",", " ", "\"\<Bit\>\""}], "]"}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Note", " ", "that", " ", 
     RowBox[{"0", "'"}], "s", " ", "will", " ", "automatically", " ", "be", 
     " ", "padded", " ", "to", " ", "the", " ", "end", " ", "until", " ", 
     "the", " ", "file", " ", "contains", " ", "a", " ", "multiple", " ", 
     "of", " ", "8", " ", "bits", " ", 
     RowBox[{"(", 
      RowBox[{"byte", " ", "representation"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"originalImageSize", " ", "=", " ", 
    RowBox[{"mSize", " ", "*", "nSize", "*", 
     RowBox[{"(", 
      RowBox[{"3", "*", "8"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fileImport", " ", "=", " ", 
     RowBox[{"Import", "[", 
      RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Length", "[", "fileImport", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "m1diff"}]}]], "Input",
 CellChangeTimes->{{3.759064058876412*^9, 3.7590640743552003`*^9}, {
   3.7590681013963747`*^9, 3.7590681258881207`*^9}, {3.759068220372489*^9, 
   3.7590682218259583`*^9}, {3.759068361734479*^9, 3.759068393267211*^9}, {
   3.759068634942246*^9, 3.759068640808556*^9}, {3.7590686942515154`*^9, 
   3.7590687468672056`*^9}, {3.759100037178607*^9, 3.759100049437554*^9}, 
   3.759444070465461*^9, {3.759444109569455*^9, 3.7594441628159533`*^9}, {
   3.7594446358120775`*^9, 3.7594446408911033`*^9}, {3.759444753043398*^9, 
   3.759444753458494*^9}, {3.761314635685277*^9, 3.761314682329028*^9}, 
   3.761314871107115*^9, {3.7613178497362175`*^9, 3.7613178526290646`*^9}, {
   3.761317885642584*^9, 3.76131790426715*^9}, {3.7613180538020535`*^9, 
   3.761318062904591*^9}, 3.7613181143616743`*^9, {3.761318588466111*^9, 
   3.761318604731614*^9}, {3.7613186440758104`*^9, 3.7613186592699547`*^9}, {
   3.76131899479958*^9, 3.7613190172242346`*^9}, {3.761319117764598*^9, 
   3.761319130287552*^9}, {3.7613194624405975`*^9, 3.761319467104563*^9}, {
   3.7613197345055785`*^9, 3.7613197374959774`*^9}, {3.761319769170597*^9, 
   3.761319769305215*^9}, {3.7614961384782543`*^9, 3.76149613913678*^9}, 
   3.7614963422706695`*^9, {3.761496865142643*^9, 3.76149686620165*^9}, 
   3.761497252595812*^9, {3.7614973493682446`*^9, 3.761497351045762*^9}, {
   3.761497387325012*^9, 3.761497387515499*^9}, {3.761497533032812*^9, 
   3.7614975743550835`*^9}, {3.7614981665442696`*^9, 3.761498179595831*^9}, {
   3.7614985748933296`*^9, 3.761498583397363*^9}, {3.7614986167230883`*^9, 
   3.761498617149608*^9}, {3.7614986642371397`*^9, 3.761498668309355*^9}, {
   3.7614987013637447`*^9, 3.7614987045479174`*^9}, 3.7615683716000004`*^9, 
   3.7618405797786107`*^9, {3.761842194382866*^9, 3.761842209528083*^9}, 
   3.761842639469219*^9, 3.7618445134431415`*^9, {3.761848515895196*^9, 
   3.7618485189047995`*^9}, 3.7619158001727424`*^9, 3.7619409074386563`*^9, {
   3.7620313862492857`*^9, 3.762031441607155*^9}, {3.762031475208143*^9, 
   3.762031476182773*^9}, {3.762031588328411*^9, 3.7620315885029497`*^9}, {
   3.7620323971600018`*^9, 3.762032403184638*^9}, {3.762032618508957*^9, 
   3.7620326454231095`*^9}, 3.762032811315118*^9, {3.7620330776481247`*^9, 
   3.762033078471923*^9}, {3.763204477492114*^9, 3.7632044991540513`*^9}, {
   3.763204782707513*^9, 3.763204832883462*^9}, {3.763296426854227*^9, 
   3.763296443781047*^9}, {3.763296518996748*^9, 3.763296556498747*^9}, 
   3.763296851767126*^9, {3.763297297217657*^9, 3.763297297871915*^9}, 
   3.763335249615141*^9},
 CellLabel->
  "In[411]:=",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Optimum block factor is \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Optimum block factor is ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.764337023230194*^9, 3.7643370776940966`*^9, 3.7643373691739645`*^9, 
   3.7643374070907073`*^9, 3.7643382922523136`*^9, 3.764338332094862*^9, 
   3.764338769694935*^9, 3.7643390463580194`*^9, {3.764346544876753*^9, 
   3.7643465597981377`*^9}, {3.7643466140326157`*^9, 3.7643466402010293`*^9}, 
   3.764347207862112*^9, 3.7643475768553123`*^9, 3.7643479997074375`*^9, 
   3.764349117870508*^9, 3.764362079980671*^9, 3.7643624594303384`*^9, 
   3.764362925385971*^9},
 CellLabel->
  "During evaluation of \
In[411]:=",ExpressionUUID->"632a648d-4594-43b7-87f5-b0e7ecc55ca4"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", 
           TemplateBox[{"162954"},
            "OutputSizeLimit`Skeleton"], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "0", ",", 
           RowBox[{"{", "1", "}"}], ",", "1", ",", 
           RowBox[{"{", "1", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}], ",", "1", ",", 
           RowBox[{"{", "0", "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 411, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 411, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 411, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[411], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7643373689654436`*^9, {3.764338280084743*^9, 3.764338292185993*^9}, 
   3.7643384511029887`*^9, 3.7643389288329864`*^9, 3.7643390452393265`*^9, 
   3.7643465548163357`*^9, {3.764346610272156*^9, 3.764346636297523*^9}, 
   3.7643467819756575`*^9, 3.764347312813469*^9, 3.7643476854863653`*^9, 
   3.764348289335227*^9, 3.764349118536894*^9, 3.7643622370467343`*^9, 
   3.7643626431072865`*^9, 3.764363027990057*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"d1c29f8c-b3fa-4b22-9b2d-67fc0af07bd2"],

Cell[BoxData["760416"], "Output",
 CellChangeTimes->{
  3.7643373689654436`*^9, {3.764338280084743*^9, 3.764338292185993*^9}, 
   3.7643384511029887`*^9, 3.7643389288329864`*^9, 3.7643390452393265`*^9, 
   3.7643465548163357`*^9, {3.764346610272156*^9, 3.764346636297523*^9}, 
   3.7643467819756575`*^9, 3.764347312813469*^9, 3.7643476854863653`*^9, 
   3.764348289335227*^9, 3.764349118536894*^9, 3.7643622370467343`*^9, 
   3.7643626431072865`*^9, 3.7643630281795497`*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"4ebc5086-85b6-4328-bdec-656eea64eb67"],

Cell[BoxData["252336"], "Print",
 CellChangeTimes->{
  3.764337023230194*^9, 3.7643370776940966`*^9, 3.7643373691739645`*^9, 
   3.7643374070907073`*^9, 3.7643382922523136`*^9, 3.764338332094862*^9, 
   3.764338769694935*^9, 3.7643390463580194`*^9, {3.764346544876753*^9, 
   3.7643465597981377`*^9}, {3.7643466140326157`*^9, 3.7643466402010293`*^9}, 
   3.764347207862112*^9, 3.7643475768553123`*^9, 3.7643479997074375`*^9, 
   3.764349117870508*^9, 3.764362079980671*^9, 3.7643624594303384`*^9, 
   3.76436302826588*^9},
 CellLabel->
  "During evaluation of \
In[411]:=",ExpressionUUID->"3aa1668c-64f1-4d6d-a099-a77a0b3e16e1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{72., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{59., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 416, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 416, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 416, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{90., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[416], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7643373689654436`*^9, {3.764338280084743*^9, 3.764338292185993*^9}, 
   3.7643384511029887`*^9, 3.7643389288329864`*^9, 3.7643390452393265`*^9, 
   3.7643465548163357`*^9, {3.764346610272156*^9, 3.764346636297523*^9}, 
   3.7643467819756575`*^9, 3.764347312813469*^9, 3.7643476854863653`*^9, 
   3.764348289335227*^9, 3.764349118536894*^9, 3.7643622370467343`*^9, 
   3.7643626431072865`*^9, 3.7643630284125233`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"8cf9061f-bbeb-4877-9f2b-0c41fd5910f4"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.7632050002563095`*^9},
 CellLabel->
  "In[417]:=",ExpressionUUID->"b5452e7e-bebf-4086-9309-95debb356f34"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.761568203998049*^9, 3.7615682501418576`*^9}, {
   3.7615687960583982`*^9, 3.7615688187011375`*^9}, {3.761568853195107*^9, 
   3.761568854776908*^9}, 3.761568897563136*^9, 3.7615689717237625`*^9, 
   3.76184057978659*^9, {3.7618418268290386`*^9, 3.761841849235985*^9}, {
   3.7618418845892086`*^9, 3.7618418889045315`*^9}, {3.7618420653243895`*^9, 
   3.7618420748660417`*^9}, 3.7618422164679074`*^9},
 CellLabel->
  "In[418]:=",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.761842275774568*^9, 3.7618423379382277`*^9},
 CellLabel->
  "In[419]:=",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.76184536933134*^9, 3.761845372939254*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"d6b43cd3-ab94-4e5a-8b2d-1d46d51ae608"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7618481808579626`*^9, 3.76184818452361*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"c8f354c7-3ecb-4717-956a-2eb20d8bb215"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7643367135270195`*^9, 3.764336978625388*^9},
 CellLabel->
  "In[422]:=",ExpressionUUID->"f5b1cd4a-3455-4eb9-b2b8-4df6902cff95"]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.05 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 37725, 740, 2737, "Input",ExpressionUUID->"e617e23e-041d-4206-acc1-d548565b4fc3"],
Cell[38308, 764, 49842, 846, 205, "Output",ExpressionUUID->"47e64178-6d7f-4fb1-a026-2a87fc46097b"],
Cell[88153, 1612, 50582, 858, 205, "Output",ExpressionUUID->"fdf4edd4-3529-4891-8c82-2d1cda0c5cab"],
Cell[138738, 2472, 659, 12, 35, "Output",ExpressionUUID->"51762449-c66c-4165-9036-067a2c4876d7"],
Cell[139400, 2486, 659, 12, 35, "Output",ExpressionUUID->"5acfd1be-ec0f-417d-8bba-f352b6578b08"],
Cell[140062, 2500, 550, 10, 23, "Print",ExpressionUUID->"139a7c95-c5ed-4657-8c86-c3517adc70e7"]
}, Open  ]],
Cell[140627, 2513, 307, 5, 30, "Input",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],
Cell[140937, 2520, 331, 5, 30, "Input",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],
Cell[CellGroupData[{
Cell[141293, 2529, 3935, 68, 229, "Input",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],
Cell[145231, 2599, 781, 15, 23, "Print",ExpressionUUID->"632a648d-4594-43b7-87f5-b0e7ecc55ca4"],
Cell[146015, 2616, 10878, 266, 187, "Output",ExpressionUUID->"d1c29f8c-b3fa-4b22-9b2d-67fc0af07bd2"],
Cell[156896, 2884, 557, 9, 35, "Output",ExpressionUUID->"4ebc5086-85b6-4328-bdec-656eea64eb67"],
Cell[157456, 2895, 628, 11, 23, "Print",ExpressionUUID->"3aa1668c-64f1-4d6d-a099-a77a0b3e16e1"],
Cell[158087, 2908, 7868, 206, 97, "Output",ExpressionUUID->"8cf9061f-bbeb-4877-9f2b-0c41fd5910f4"]
}, Open  ]],
Cell[165970, 3117, 154, 3, 30, "Input",ExpressionUUID->"b5452e7e-bebf-4086-9309-95debb356f34"],
Cell[166127, 3122, 532, 8, 30, "Input",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],
Cell[166662, 3132, 175, 3, 30, "Input",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"],
Cell[166840, 3137, 174, 3, 30, "Input",ExpressionUUID->"d6b43cd3-ab94-4e5a-8b2d-1d46d51ae608"],
Cell[167017, 3142, 176, 3, 30, "Input",ExpressionUUID->"c8f354c7-3ecb-4717-956a-2eb20d8bb215"],
Cell[167196, 3147, 175, 3, 63, "Input",ExpressionUUID->"f5b1cd4a-3455-4eb9-b2b8-4df6902cff95"]
}
]
*)


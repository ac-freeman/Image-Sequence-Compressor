(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47385,       1006]
NotebookOptionsPosition[     46175,        981]
NotebookOutlinePosition[     46539,        997]
CellTagsIndexPosition[     46496,        994]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image1", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior \
Sem\\\\stars.jpg\>\"", ",", " ", 
       RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}], 
     ",", " ", "\"\<Byte\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior \
Sem\\\\stars2.jpg\>\"", ",", " ", 
       RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}], 
     ",", " ", "\"\<Byte\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Image", "[", 
   RowBox[{"image1", ",", " ", "\"\<Byte\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m1diff", " ", "=", " ", 
   RowBox[{"image2", "-", "image1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m1diff", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"TwosComplementSuperList", ",", " ", "m1diff", ",", " ", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "store", " ", "m1diff", " ", "as", " ", "its", " ", "twos", " ", 
    "complement", " ", "array"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nSize", " ", "=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "m1diff", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TwosComplement", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Positive", "[", "n", "]"}], ",", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "2", ",", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"n", ",", "2", ",", 
              RowBox[{
               RowBox[{"IntegerLength", "[", 
                RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "0"}], ",", 
              RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", "2"}], "]"}], 
         "+", "\[IndentingNewLine]", "1"}], ",", "2", ",", 
        RowBox[{
         RowBox[{"IntegerLength", "[", 
          RowBox[{"n", ",", " ", "2"}], "]"}], "+", "1"}]}], "]"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BitSize", "[", "a_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"TwosComplement", "[", "a", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TwosComplementSuperList", "[", "aa_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"TwosComplement", ",", " ", "aa", ",", " ", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PadElem", "[", 
    RowBox[{"a_List", ",", " ", "blockUnitLength_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"PadLeft", "[", 
       RowBox[{"#", ",", " ", "blockUnitLength", ",", " ", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], "/@", "a"}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Pads", " ", "left", " ", "with", " ", 
       RowBox[{"0", "'"}], "s", " ", "if", " ", "positive"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "'"}], "s", " ", "if", " ", "negative"}], ";", " ", 
       RowBox[{
       "makes", " ", "each", " ", "number", " ", "to", " ", "be", " ", 
        "blockUnitLength"}]}]}], "*)"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlock", "[", 
    RowBox[{
    "a_List", ",", "startR_Integer", ",", " ", "startC_Integer", ",", " ", 
     "blockFactor_Integer"}], "]"}], ":=", 
   RowBox[{"(", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"twosArray", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"twosArray", " ", "=", 
      RowBox[{"a", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"startR", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", 
            RowBox[{"(", 
             RowBox[{"startR", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}], " ", ",", 
         RowBox[{"startC", ";;", 
          RowBox[{"Min", "[", 
           RowBox[{"nSize", ",", 
            RowBox[{"(", 
             RowBox[{"startC", "+", "blockFactor", "-", "1"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"blockUnitLength", " ", "=", " ", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", " ", "twosArray", ",", " ", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Look", " ", "at", " ", "the", " ", "length", " ", "of", " ", "arrays", 
       " ", "at", " ", "level", " ", "2", " ", 
       RowBox[{"(", 
        RowBox[{"the", " ", "lists", " ", "of", " ", "bits", " ", "in", " ", 
         RowBox[{"two", "'"}], "s", " ", "complement", " ", "for", " ", 
         "each", " ", "matrix", " ", "element"}], ")"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"blockDef", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"blockUnitLength", ",", " ", "2", ",", " ", "4"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"twosArray", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"PadElem", "[", 
         RowBox[{"#", ",", " ", "blockUnitLength"}], "]"}], "&"}], " ", "/@", 
       " ", 
       RowBox[{"Level", "[", 
        RowBox[{"twosArray", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "twosArray", "]"}], ",", " ", "blockDef"}], 
       "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetBlockNumberData", "[", 
   RowBox[{
   "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
    "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"GetBlock", "[", 
    RowBox[{"a", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}], "+", 
      "1"}], ",", " ", "blockFactor"}], "]"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBlockSpace", "[", 
    RowBox[{
    "a_List", ",", " ", "blockNumberR_Integer", ",", " ", 
     "blockNumberC_Integer", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Length", "[", 
     RowBox[{"GetBlockNumberData", "[", 
      RowBox[{
      "a", ",", " ", "blockNumberR", ",", " ", "blockNumberC", ",", " ", 
       "blockFactor"}], "]"}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetOptimumBlockFactor", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"currentMin", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"currentBlockFactor", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "change", " ", "max", " ", "blockfactor", " ", "size", " ", 
       "calculation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
       RowBox[{"i", " ", "<=", " ", 
        RowBox[{"Min", "[", 
         RowBox[{"mSize", ",", "nSize"}], "]"}]}], ",", " ", 
       RowBox[{"i", "++"}], ",", " ", 
       RowBox[{"(", " ", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
           RowBox[{"i", " ", "<=", " ", "5"}], ",", " ", 
           RowBox[{"i", "++"}], ",", " ", 
           RowBox[{"(", " "}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tempSize", " ", "=", " ", 
          RowBox[{"GetImageSize", "[", 
           RowBox[{"mat", ",", " ", "i"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"currentMin", " ", "\[Equal]", " ", 
            RowBox[{"-", "1"}]}], ",", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
             RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], ",",
            " ", "\[IndentingNewLine]", "\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"tempSize", " ", "<", " ", "currentMin"}], ",", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
               RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
             ",", " ", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"tempSize", " ", ">", " ", 
                RowBox[{"2", "*", "currentMin"}]}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"i", " ", "=", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"mSize", ",", "nSize"}], "]"}]}], "*)"}], ","}], 
              "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Optimum block factor is \>\"", ",", "currentBlockFactor"}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "currentBlockFactor", "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GetOptimumImage", "[", "mat_List", "]"}], " ", ":=", " ", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"currentMin", " ", "=", " ", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"currentBlockFactor", " ", "=", " ", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "change", " ", "max", " ", "blockfactor", " ", "size", " ", 
        "calculation"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
         RowBox[{"i", " ", "<=", " ", 
          RowBox[{"Min", "[", 
           RowBox[{"mSize", ",", "nSize"}], "]"}]}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", 
         RowBox[{"(", " "}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "2"}], ",", "  ", 
        RowBox[{"i", " ", "<=", " ", "5"}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", 
        RowBox[{"(", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tempSize", " ", "=", " ", 
           RowBox[{"GetImageSize", "[", 
            RowBox[{"mat", ",", " ", "i"}], "]"}]}], ";", " ", 
          RowBox[{"(*", 
           RowBox[{
           "need", " ", "to", " ", "keep", " ", "the", " ", "encoded", " ", 
            "image", " ", 
            RowBox[{"blocks", "!!"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"currentMin", " ", "\[Equal]", " ", 
             RowBox[{"-", "1"}]}], ",", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
              RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
            ",", " ", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"tempSize", " ", "<", " ", "currentMin"}], ",", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"currentMin", " ", "=", " ", "tempSize"}], ";", " ", 
                RowBox[{"currentBlockFactor", " ", "=", " ", "i"}]}], ")"}], 
              ",", " ", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"tempSize", " ", ">", " ", 
                 RowBox[{"2", "*", "currentMin"}]}], ",", " ", 
                RowBox[{"(*", 
                 RowBox[{"i", " ", "=", " ", 
                  RowBox[{"Min", "[", 
                   RowBox[{"mSize", ",", "nSize"}], "]"}]}], "*)"}], ","}], 
               "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "currentBlockFactor", "]"}]}], 
     "\[IndentingNewLine]", ")"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetFullEncodedImage", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"blockFactor", " ", "=", " ", 
      RowBox[{"GetOptimumBlockFactor", "[", "mat", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"fullImage", " ", "=", 
      RowBox[{"{", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"blockFactor", ",", " ", "2", ",", " ", "8"}], "]"}], "}"}]}],
      ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Encode", " ", "the", " ", "block", " ", "factor", " ", "in", " ", 
        "binary", " ", "at", " ", "beginning"}], ",", " ", 
       RowBox[{"using", " ", "8", " ", "bits"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"fullImage", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"fullImage", ",", " ", 
          RowBox[{"GetBlockNumberData", "[", 
           RowBox[{
           "mat", ",", " ", "m", ",", " ", "n", ",", " ", "blockFactor"}], 
           "]"}]}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "1", ",", " ", 
         RowBox[{"Ceiling", "[", 
          RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], ";",
      " ", 
     RowBox[{"(*", 
      RowBox[{
      "Do", " ", "this", " ", "join", " ", "function", " ", "for", " ", "k", 
       " ", "values", " ", "1", " ", "through", " ", "Ceil", 
       RowBox[{"(", 
        RowBox[{"mSize", "/", "blockFactor"}], ")"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "fullImage", "]"}]}], "\[IndentingNewLine]", 
    ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetImageSize", "[", 
   RowBox[{"mat_List", ",", " ", "blockFactor_Integer"}], "]"}], " ", ":=", 
  "  ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"GetBlockSpace", "[", 
         RowBox[{
         "mat", ",", "  ", "m", ",", " ", "n", ",", " ", "blockFactor"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"mSize", "/", "blockFactor"}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], "}"}]}], "]"}], 
      " ", "+", "8"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Add", " ", "8", " ", "for", " ", "the", " ", "block", " ", "factor", 
      " ", "definition", " ", "that", " ", "would", " ", "be", " ", "at", " ",
       "the", " ", "beginning"}], "*)"}], "\[IndentingNewLine]", "s"}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7589772492309756`*^9, 3.75897733842875*^9}, {
   3.758977431367025*^9, 3.7589774332285576`*^9}, {3.7589781500829277`*^9, 
   3.758978164323367*^9}, {3.7589789317059655`*^9, 3.758978948282484*^9}, {
   3.7589913027414503`*^9, 3.7589914319627132`*^9}, {3.758991833264929*^9, 
   3.7589920188096123`*^9}, {3.758992373457159*^9, 3.758992451112569*^9}, {
   3.7589924873963485`*^9, 3.7589924956420617`*^9}, {3.7589926955393667`*^9, 
   3.758992723377573*^9}, 3.758992844977169*^9, {3.7589929374169745`*^9, 
   3.7589929445414696`*^9}, {3.75899299172818*^9, 3.7589930186101584`*^9}, {
   3.758993052017373*^9, 3.7589930771824813`*^9}, {3.7589931522696314`*^9, 
   3.75899316251612*^9}, {3.75899364206619*^9, 3.758993642799247*^9}, {
   3.7589937107554092`*^9, 3.7589937137656355`*^9}, {3.758993843997575*^9, 
   3.75899384517218*^9}, {3.75899390398055*^9, 3.7589939115086155`*^9}, {
   3.7589953377103634`*^9, 3.7589953457161455`*^9}, {3.75899989010415*^9, 
   3.7589999044407516`*^9}, {3.759000000928757*^9, 3.7590000109549723`*^9}, {
   3.7590000417836204`*^9, 3.7590000982310996`*^9}, {3.759000164651244*^9, 
   3.7590001660971375`*^9}, {3.759000242185158*^9, 3.7590002533988867`*^9}, {
   3.7590003465427976`*^9, 3.759000375536374*^9}, {3.759000440864897*^9, 
   3.7590004423265233`*^9}, {3.7590004782647667`*^9, 3.759000491193451*^9}, {
   3.759000611415778*^9, 3.759000620791229*^9}, {3.759000655407099*^9, 
   3.7590007573504453`*^9}, {3.759000945591099*^9, 3.75900100587983*^9}, {
   3.759001536205309*^9, 3.7590016373495407`*^9}, {3.759001678390257*^9, 
   3.759001680558457*^9}, {3.7590017240045652`*^9, 3.759001731623968*^9}, {
   3.759002090558895*^9, 3.759002091716821*^9}, {3.7590023105508795`*^9, 
   3.759002310695003*^9}, 3.759002569984885*^9, {3.759002717748419*^9, 
   3.7590027182410994`*^9}, {3.7590027844691916`*^9, 
   3.7590027848840814`*^9}, {3.7590028548292046`*^9, 3.759002855613106*^9}, {
   3.759011808678236*^9, 3.7590118094152904`*^9}, {3.759011873056448*^9, 
   3.759011873586038*^9}, {3.759011976389518*^9, 3.759011976811063*^9}, {
   3.759012038782615*^9, 3.7590120389642353`*^9}, {3.7590120720023136`*^9, 
   3.759012080966284*^9}, {3.759014391015216*^9, 3.7590144708487473`*^9}, {
   3.7590145541549807`*^9, 3.7590146286915736`*^9}, {3.759014969108798*^9, 
   3.759014981009347*^9}, {3.759015042357397*^9, 3.759015090571883*^9}, {
   3.759015154298724*^9, 3.7590151806975574`*^9}, {3.759015553351217*^9, 
   3.75901558804668*^9}, {3.7590156413145313`*^9, 3.759015672463519*^9}, {
   3.7590157147298822`*^9, 3.759015716546432*^9}, {3.7590158363872766`*^9, 
   3.759015850735077*^9}, {3.75901590287648*^9, 3.759015941035616*^9}, {
   3.7590160582004137`*^9, 3.759016121803862*^9}, {3.7590161525754595`*^9, 
   3.759016166066966*^9}, {3.759016206647125*^9, 3.7590162277502117`*^9}, {
   3.759016261971603*^9, 3.7590162679654245`*^9}, {3.759016437753399*^9, 
   3.7590164460922265`*^9}, {3.759016598597017*^9, 3.759016601455989*^9}, {
   3.759016631676732*^9, 3.759016633017149*^9}, {3.759016670666733*^9, 
   3.759016727857525*^9}, {3.759017222144306*^9, 3.7590172285186205`*^9}, {
   3.7590173004193335`*^9, 3.7590173011282425`*^9}, {3.759061614880348*^9, 
   3.7590616153311424`*^9}, {3.7590616701884336`*^9, 
   3.7590617442516403`*^9}, {3.7590618171238585`*^9, 3.7590618181075573`*^9}, 
   3.7590619114126177`*^9, {3.759061954100791*^9, 3.7590619550113645`*^9}, {
   3.7590635982047606`*^9, 3.7590636006444473`*^9}, {3.7590636981410694`*^9, 
   3.759063723189645*^9}, {3.7590647958853655`*^9, 3.75906481163659*^9}, {
   3.7590649384436803`*^9, 3.759064977032415*^9}, {3.7590650620157146`*^9, 
   3.759065083363764*^9}, {3.759065124147683*^9, 3.7590651719484787`*^9}, {
   3.7590652348684497`*^9, 3.7590652665247707`*^9}, {3.7590653062526674`*^9, 
   3.7590654036207905`*^9}, {3.759065468700883*^9, 3.759065581254486*^9}, {
   3.7590656625347767`*^9, 3.7590656652934723`*^9}, {3.7590657347344446`*^9, 
   3.759065778165574*^9}, {3.7590658293745356`*^9, 3.7590658835487356`*^9}, {
   3.7590659185727854`*^9, 3.7590660080455694`*^9}, {3.759066147910651*^9, 
   3.7590661626536217`*^9}, {3.7590664649909215`*^9, 3.75906647680177*^9}, {
   3.759066567503355*^9, 3.759066572037426*^9}, {3.759067227769377*^9, 
   3.7590672545259156`*^9}, {3.759067329915345*^9, 3.7590673417409544`*^9}, {
   3.759067428945265*^9, 3.7590674614132423`*^9}, {3.759067492879455*^9, 
   3.7590674931896257`*^9}, {3.759067572358611*^9, 3.759067687053295*^9}, {
   3.7590678220304785`*^9, 3.7590678480060062`*^9}, {3.759067885209214*^9, 
   3.759067890452074*^9}, {3.7590679391090574`*^9, 3.75906798919351*^9}, {
   3.7590680965243883`*^9, 3.7590680985826426`*^9}, 3.759068388788424*^9, {
   3.7590687622883034`*^9, 3.759068762742329*^9}, {3.759069306333847*^9, 
   3.75906937782031*^9}, {3.7590694254606576`*^9, 3.759069477895775*^9}, 
   3.7590695134602394`*^9, {3.7590697419198*^9, 3.75906977872677*^9}, {
   3.759069812713431*^9, 3.7590698335453253`*^9}, 3.759069914855235*^9, {
   3.759070091298519*^9, 3.759070091922223*^9}, {3.7590999665530615`*^9, 
   3.7590999741574554`*^9}, {3.759100082219204*^9, 3.759100100651366*^9}, {
   3.7591001325385075`*^9, 3.7591001330162954`*^9}, {3.759444175317484*^9, 
   3.7594442363349075`*^9}, {3.7594443034673605`*^9, 3.759444361918532*^9}, {
   3.759444437584547*^9, 3.759444453654539*^9}, {3.7594445264826593`*^9, 
   3.7594445283576813`*^9}, {3.759444682774888*^9, 3.7594446946308346`*^9}, {
   3.759444730051041*^9, 3.7594447306804466`*^9}, 3.7599613666592865`*^9, {
   3.760118950363157*^9, 3.7601189538090544`*^9}, {3.760119078199824*^9, 
   3.7601190828010683`*^9}, {3.7601191128737545`*^9, 
   3.7601191189375715`*^9}, {3.7601191504099846`*^9, 
   3.7601191806519737`*^9}, {3.7601192817275124`*^9, 3.760119282730657*^9}, {
   3.7601196096959567`*^9, 3.7601196464842987`*^9}, {3.76011972670989*^9, 
   3.76011975368054*^9}, {3.760119824797968*^9, 3.760119852297536*^9}, {
   3.760120355495578*^9, 3.7601204127254734`*^9}, {3.7601207491112475`*^9, 
   3.7601208016306515`*^9}, {3.761309582371811*^9, 3.761309585606168*^9}, {
   3.761310066854187*^9, 3.7613100973315163`*^9}, {3.7613101522277207`*^9, 
   3.76131015783864*^9}, 3.7613106539199257`*^9, {3.761310814257621*^9, 
   3.7613108803517704`*^9}, {3.761310954666375*^9, 3.7613109552910557`*^9}, {
   3.761310988157421*^9, 3.761311090961219*^9}, {3.7613114647292833`*^9, 
   3.7613114785686803`*^9}, {3.76131169169587*^9, 3.7613117335110044`*^9}, {
   3.761311857669954*^9, 3.761311876039673*^9}, {3.7613119072356105`*^9, 
   3.7613119074291058`*^9}, {3.761312463066698*^9, 3.761312504959165*^9}, {
   3.7613126048821034`*^9, 3.7613126363294992`*^9}, {3.7613128313361444`*^9, 
   3.7613128436122704`*^9}, {3.761312908206738*^9, 3.7613129092369823`*^9}, {
   3.7613129822838373`*^9, 3.7613129935729675`*^9}, {3.76131302373458*^9, 
   3.761313025799858*^9}, 3.7613131418635645`*^9, 3.7613132021504774`*^9, {
   3.761313851086648*^9, 3.7613139589700146`*^9}, {3.7613139923912897`*^9, 
   3.7613140343404274`*^9}, {3.761314181206275*^9, 3.7613142073807135`*^9}, 
   3.7613145539848504`*^9, {3.761314630349142*^9, 3.7613146330798197`*^9}, {
   3.761314838538715*^9, 3.7613148417250757`*^9}, {3.7613148936244717`*^9, 
   3.7613148954944715`*^9}, {3.761314967959156*^9, 3.7613149785172157`*^9}, {
   3.761315185612893*^9, 3.7613151954012012`*^9}, {3.7613152818608932`*^9, 
   3.7613153561017227`*^9}, {3.761315428639282*^9, 3.7613154519918118`*^9}, {
   3.76131575399368*^9, 3.7613157558038692`*^9}, {3.761317188001231*^9, 
   3.761317202061838*^9}, {3.7613175905266542`*^9, 3.761317593812871*^9}, {
   3.7613176403171325`*^9, 3.761317641886937*^9}, {3.7613176913919783`*^9, 
   3.761317694655343*^9}, 3.761317940424056*^9, {3.761317981851396*^9, 
   3.7613179856612835`*^9}, {3.7613183677469587`*^9, 3.761318387817007*^9}, {
   3.7613184303130894`*^9, 3.761318432137141*^9}, {3.761318485344798*^9, 
   3.76131849038371*^9}, {3.7613185331564035`*^9, 3.761318579424454*^9}, {
   3.76131876766531*^9, 3.761318775920885*^9}, 3.7613188949093747`*^9, {
   3.761318942744819*^9, 3.761318944385399*^9}, {3.761318987170261*^9, 
   3.761318987696884*^9}, 3.7613193241870294`*^9, 3.761319364947676*^9, {
   3.761319440163461*^9, 3.76131944934731*^9}, {3.761319552821763*^9, 
   3.7613195890901504`*^9}, {3.761319619885064*^9, 3.76131962203432*^9}, 
   3.761319669428198*^9, {3.7613197068123302`*^9, 3.761319752627117*^9}, {
   3.761488483658651*^9, 3.761488492389369*^9}, 3.761488604492166*^9, {
   3.761488735459992*^9, 3.7614887830413995`*^9}, {3.7614888656891336`*^9, 
   3.7614888892512436`*^9}, {3.761489767752776*^9, 3.761489781462866*^9}, {
   3.7614898327005415`*^9, 3.761489861506132*^9}, {3.7614899340350633`*^9, 
   3.761489939684507*^9}, {3.761490043424137*^9, 3.761490052364056*^9}, {
   3.7614909134879985`*^9, 3.761490916137181*^9}, {3.7614909917844505`*^9, 
   3.7614910079565516`*^9}, {3.7614914521162395`*^9, 
   3.7614914688133087`*^9}, {3.761491583764248*^9, 3.7614915883449945`*^9}, {
   3.7614917948608294`*^9, 3.761491804100845*^9}, {3.7614918394771338`*^9, 
   3.761491865830454*^9}, {3.761492193459685*^9, 3.761492206241184*^9}, 
   3.7614958624833565`*^9, {3.761496018089308*^9, 3.7614960983524113`*^9}, {
   3.7614964192826643`*^9, 3.761496451702784*^9}, {3.7614965566379104`*^9, 
   3.7614965640075827`*^9}, {3.7614966591098547`*^9, 
   3.7614966862427216`*^9}, {3.761496818211677*^9, 3.761496822370574*^9}, {
   3.761497831126195*^9, 3.761497833029591*^9}, {3.7614982337499623`*^9, 
   3.7614982374963093`*^9}, {3.76149831154078*^9, 3.761498320570985*^9}, {
   3.7614983619811316`*^9, 3.761498368762437*^9}, {3.7614984889284954`*^9, 
   3.761498511514776*^9}, {3.761498591467127*^9, 3.7614986002898083`*^9}, {
   3.76149863499238*^9, 3.761498648022817*^9}, {3.761566471718782*^9, 
   3.7615665178789024`*^9}, 3.7615666098080373`*^9, {3.761566688168392*^9, 
   3.761566698791378*^9}, {3.7615667830210295`*^9, 3.761566785427495*^9}, {
   3.7615672634535885`*^9, 3.7615673195758142`*^9}, {3.7615673598146305`*^9, 
   3.761567400719414*^9}, 3.761567486975661*^9, {3.7615675789099073`*^9, 
   3.761567608161683*^9}, {3.7615676888259726`*^9, 3.7615677012230854`*^9}, {
   3.7615678141681004`*^9, 3.7615678431653433`*^9}, {3.7615679059026833`*^9, 
   3.761567954113883*^9}, {3.761568150182979*^9, 3.761568154527174*^9}, {
   3.761568348934163*^9, 3.7615683876690426`*^9}, {3.761568428655776*^9, 
   3.761568429246192*^9}, 3.7615684749570284`*^9, {3.7615685338677635`*^9, 
   3.761568553780421*^9}, {3.7615685982926908`*^9, 3.7615686836699634`*^9}, {
   3.7615687194239864`*^9, 3.761568757894896*^9}, {3.761568845227644*^9, 
   3.7615688455916677`*^9}, {3.7615689041594915`*^9, 
   3.7615690302967296`*^9}, {3.7617762128447747`*^9, 
   3.7617762133850894`*^9}, {3.761776303892296*^9, 3.761776350930961*^9}, {
   3.7617765028792114`*^9, 3.7617765441551437`*^9}, {3.7617765915331306`*^9, 
   3.761776678755672*^9}, {3.7618384359215603`*^9, 3.761838437502389*^9}, {
   3.7618385600051994`*^9, 3.761838563151613*^9}, 3.7618391837888746`*^9, {
   3.7618393998972416`*^9, 3.761839406591798*^9}, {3.761839455203106*^9, 
   3.7618394998549304`*^9}, {3.761839625944219*^9, 3.761839676388794*^9}, {
   3.761839716282501*^9, 3.761839717250905*^9}, {3.7618397501190295`*^9, 
   3.7618397513128705`*^9}, {3.761839919079262*^9, 3.761839923629141*^9}, {
   3.761839988281865*^9, 3.761840017834416*^9}, {3.761840077342952*^9, 
   3.761840087564396*^9}, {3.7618401487273083`*^9, 3.761840155399679*^9}, {
   3.761840275395416*^9, 3.7618402953999987`*^9}, {3.761840390764683*^9, 
   3.7618404746357093`*^9}, {3.761840518629179*^9, 3.7618405317061043`*^9}, {
   3.7618405760063195`*^9, 3.7618405797686605`*^9}, {3.7618406113090167`*^9, 
   3.7618406157405972`*^9}, {3.7618414588957815`*^9, 3.761841486056322*^9}, {
   3.7618415313118114`*^9, 3.76184153136065*^9}, 3.761841571692608*^9, {
   3.761841676349825*^9, 3.761841705431568*^9}, {3.7618418144986734`*^9, 
   3.761841837657113*^9}, {3.7618421062446675`*^9, 3.761842109602171*^9}, {
   3.7618421534952145`*^9, 3.7618421824679294`*^9}, {3.761842325491337*^9, 
   3.76184232879914*^9}, {3.761842367399472*^9, 3.76184239795043*^9}, {
   3.761842632960408*^9, 3.761842633302494*^9}, {3.7618427572870455`*^9, 
   3.7618427857058463`*^9}},ExpressionUUID->"e617e23e-041d-4206-acc1-\
d548565b4fc3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7590204645167704`*^9, 3.7590204722881536`*^9}, {
   3.761314219054098*^9, 3.761314223198064*^9}, {3.7614921477045183`*^9, 
   3.7614921482850933`*^9}, 3.7614986983358374`*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7613177472030277`*^9, 3.7613177616093187`*^9}, 
   3.7613178467393723`*^9, {3.761567452458677*^9, 3.7615674963005896`*^9}, {
   3.761568065789394*^9, 3.7615680687004986`*^9}, 3.7615681969019747`*^9},
 CellLabel->
  "In[259]:=",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fullImage", " ", "=", " ", 
  RowBox[{
  "GetFullEncodedImage", "[", "m1diff", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"file", ",", " ", "fullImage", ",", " ", "\"\<Bit\>\""}], "]"}], 
  ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Note", " ", "that", " ", 
    RowBox[{"0", "'"}], "s", " ", "will", " ", "automatically", " ", "be", 
    " ", "padded", " ", "to", " ", "the", " ", "end", " ", "until", " ", 
    "the", " ", "file", " ", "contains", " ", "a", " ", "multiple", " ", "of",
     " ", "8", " ", "bits", " ", 
    RowBox[{"(", 
     RowBox[{"byte", " ", "representation"}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"originalImageSize", " ", "=", " ", 
   RowBox[{"mSize", " ", "*", "nSize", "*", 
    RowBox[{"(", 
     RowBox[{"3", "*", "8"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileImport", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Length", "[", "fileImport", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.759064058876412*^9, 3.7590640743552003`*^9}, {
   3.7590681013963747`*^9, 3.7590681258881207`*^9}, {3.759068220372489*^9, 
   3.7590682218259583`*^9}, {3.759068361734479*^9, 3.759068393267211*^9}, {
   3.759068634942246*^9, 3.759068640808556*^9}, {3.7590686942515154`*^9, 
   3.7590687468672056`*^9}, {3.759100037178607*^9, 3.759100049437554*^9}, 
   3.759444070465461*^9, {3.759444109569455*^9, 3.7594441628159533`*^9}, {
   3.7594446358120775`*^9, 3.7594446408911033`*^9}, {3.759444753043398*^9, 
   3.759444753458494*^9}, {3.761314635685277*^9, 3.761314682329028*^9}, 
   3.761314871107115*^9, {3.7613178497362175`*^9, 3.7613178526290646`*^9}, {
   3.761317885642584*^9, 3.76131790426715*^9}, {3.7613180538020535`*^9, 
   3.761318062904591*^9}, 3.7613181143616743`*^9, {3.761318588466111*^9, 
   3.761318604731614*^9}, {3.7613186440758104`*^9, 3.7613186592699547`*^9}, {
   3.76131899479958*^9, 3.7613190172242346`*^9}, {3.761319117764598*^9, 
   3.761319130287552*^9}, {3.7613194624405975`*^9, 3.761319467104563*^9}, {
   3.7613197345055785`*^9, 3.7613197374959774`*^9}, {3.761319769170597*^9, 
   3.761319769305215*^9}, {3.7614961384782543`*^9, 3.76149613913678*^9}, 
   3.7614963422706695`*^9, {3.761496865142643*^9, 3.76149686620165*^9}, 
   3.761497252595812*^9, {3.7614973493682446`*^9, 3.761497351045762*^9}, {
   3.761497387325012*^9, 3.761497387515499*^9}, {3.761497533032812*^9, 
   3.7614975743550835`*^9}, {3.7614981665442696`*^9, 3.761498179595831*^9}, {
   3.7614985748933296`*^9, 3.761498583397363*^9}, {3.7614986167230883`*^9, 
   3.761498617149608*^9}, {3.7614986642371397`*^9, 3.761498668309355*^9}, {
   3.7614987013637447`*^9, 3.7614987045479174`*^9}, 3.7615683716000004`*^9, 
   3.7618405797786107`*^9, {3.761842194382866*^9, 3.761842209528083*^9}, 
   3.761842639469219*^9},
 CellLabel->
  "In[260]:=",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Optimum block factor is \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Optimum block factor is ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.761842236841914*^9, 3.7618423498983736`*^9, 3.761842389643838*^9, 
   3.76184242038035*^9, {3.761842641990487*^9, 3.7618426620633945`*^9}},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"834bb949-4a43-4c0e-8908-56df1a51af6f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
           ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
           "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
           ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           TemplateBox[{"247401"},
            "OutputSizeLimit`Skeleton"], ",", "1", ",", "0", ",", "1", ",", 
           "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
           ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
           ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
           "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
           ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
           "1"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 261, 28404338156357740907, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 261, 28404338156357740907, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 261, 28404338156357740907, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28404338156357740907 === $SessionID, 
   Out[261], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.761842238932829*^9, 3.761842351963978*^9, 3.7618423918898897`*^9, 
   3.761842422441849*^9, {3.761842641852845*^9, 3.761842666255904*^9}},
 CellLabel->
  "Out[261]=",ExpressionUUID->"33ab3e93-fd33-4ffd-9a4e-cf347966d3e9"],

Cell[BoxData["351936"], "Output",
 CellChangeTimes->{
  3.761842238932829*^9, 3.761842351963978*^9, 3.7618423918898897`*^9, 
   3.761842422441849*^9, {3.761842641852845*^9, 3.7618426662918053`*^9}},
 CellLabel->
  "Out[262]=",ExpressionUUID->"9d3c7170-4927-4f0a-95ad-dd3817c76be2"],

Cell[BoxData["247624"], "Print",
 CellChangeTimes->{
  3.761842236841914*^9, 3.7618423498983736`*^9, 3.761842389643838*^9, 
   3.76184242038035*^9, {3.761842641990487*^9, 3.7618426663556337`*^9}},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"2a5a5c44-304e-4305-a19d-c59dbd78d758"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.761568203998049*^9, 3.7615682501418576`*^9}, {
   3.7615687960583982`*^9, 3.7615688187011375`*^9}, {3.761568853195107*^9, 
   3.761568854776908*^9}, 3.761568897563136*^9, 3.7615689717237625`*^9, 
   3.76184057978659*^9, {3.7618418268290386`*^9, 3.761841849235985*^9}, {
   3.7618418845892086`*^9, 3.7618418889045315`*^9}, {3.7618420653243895`*^9, 
   3.7618420748660417`*^9}, 3.7618422164679074`*^9},
 CellLabel->
  "In[265]:=",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.761842275774568*^9, 3.7618423379382277`*^9},
 CellLabel->
  "In[266]:=",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 29715, 597, 1758, "Input",ExpressionUUID->"e617e23e-041d-4206-acc1-d548565b4fc3"],
Cell[30276, 619, 307, 5, 28, "Input",ExpressionUUID->"6e51fd34-c6b7-4a4c-853d-2c9c8aaffeb7"],
Cell[30586, 626, 331, 5, 28, "Input",ExpressionUUID->"11262ab7-21fc-4b78-9afc-d80e212be277"],
Cell[CellGroupData[{
Cell[30942, 635, 3265, 62, 181, "Input",ExpressionUUID->"f0d682da-6d61-47af-9285-e1bdf5bf82b4"],
Cell[34210, 699, 454, 10, 22, "Print",ExpressionUUID->"834bb949-4a43-4c0e-8908-56df1a51af6f"],
Cell[34667, 711, 10190, 237, 200, "Output",ExpressionUUID->"33ab3e93-fd33-4ffd-9a4e-cf347966d3e9"],
Cell[44860, 950, 281, 5, 32, "Output",ExpressionUUID->"9d3c7170-4927-4f0a-95ad-dd3817c76be2"],
Cell[45144, 957, 302, 6, 22, "Print",ExpressionUUID->"2a5a5c44-304e-4305-a19d-c59dbd78d758"]
}, Open  ]],
Cell[45461, 966, 532, 8, 28, "Input",ExpressionUUID->"0d7161d7-aadc-4f04-928a-e1816c81a689"],
Cell[45996, 976, 175, 3, 28, "Input",ExpressionUUID->"4c251b6c-d4b8-47b6-a650-9a4f54fb7dcd"]
}
]
*)


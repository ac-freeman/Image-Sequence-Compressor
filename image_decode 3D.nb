(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    111749,       2132]
NotebookOptionsPosition[    110834,       2111]
NotebookOutlinePosition[    111175,       2126]
CellTagsIndexPosition[    111132,       2123]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\Edits\\\\IMG_1738-3.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fileImport", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<compressed size is \>\"", ",", " ", 
    RowBox[{"Length", "[", "fileImport", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "16"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", "32"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockFactor", " ", "=", " ", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"fileImport", "[", 
       RowBox[{"[", 
        RowBox[{"33", ";;", "40"}], "]"}], "]"}], ",", "2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"decodedArr", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"mSize", ",", "nSize", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvertToInt", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateDecodedArr", "[", 
    RowBox[{
    "blockNumberR_Integer", ",", " ", "blockNumberC_Integer", ",", " ", 
     "blockData_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "m"}], " ", "\[LessEqual]", " ", "mSize"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "n"}], " ", "\[LessEqual]", " ", "nSize"}]}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"decodedArr", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", 
                "blockFactor"}], "+", "m"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", 
               "blockFactor"}], "+", "n"}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ")"}], ","}], 
        "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", "1", ",", "blockFactor"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "blockFactor"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "decodedArr", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockNumberR", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "41"}], ",", " ", 
     RowBox[{
      RowBox[{"i", " ", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "fileImport", "]"}]}], " ", "&&", 
      RowBox[{"blockNumberC", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], " ", "&&", " ", 
      RowBox[{"blockNumberR", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"mSize", "/", "blockFactor"}], "]"}]}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockDefEnd", " ", "=", " ", 
        RowBox[{"i", "+", "3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"blockDef", " ", "=", " ", 
        RowBox[{"FromDigits", "[", 
         RowBox[{
          RowBox[{"fileImport", "[", 
           RowBox[{"[", 
            RowBox[{"i", ";;", "blockDefEnd"}], "]"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "+=", "4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"blockDef", " ", ">", "0"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], "  ",
               ">", "nSize"}], ",", " ", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"blockEnd", " ", "=", 
                RowBox[{"i", " ", "+", 
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"nSize", ",", "blockFactor"}], "]"}], "*", 
                   "blockFactor", "*", "3", "*", "blockDef"}], ")"}], " ", 
                 "-", "1"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"block", " ", "=", " ", 
                RowBox[{"ArrayReshape", "[", 
                 RowBox[{
                  RowBox[{"fileImport", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"blockFactor", ",", " ", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"nSize", ",", "blockFactor"}], "]"}], ",", "3", 
                    ",", "blockDef"}], "}"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"blockEnd", " ", "=", " ", 
                RowBox[{"i", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"blockFactor", "^", "2"}], ")"}], "*", "3", "*", 
                  "blockDef"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"block", " ", "=", " ", 
                RowBox[{"ArrayReshape", "[", 
                 RowBox[{
                  RowBox[{"fileImport", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                   "blockFactor", ",", "blockFactor", ",", "3", ",", 
                    "blockDef"}], "}"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"i", "=", " ", "blockEnd"}], ";", "\[IndentingNewLine]", 
           RowBox[{"block", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"ConvertToInt", ",", " ", "block", ",", " ", 
              RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"UpdateDecodedArr", "[", 
            RowBox[{"blockNumberR", ",", "blockNumberC", ",", "block"}], 
            "]"}], ";"}], "\[IndentingNewLine]", ")"}], ",", " ", 
         RowBox[{"i", "+=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], " ", ">",
           " ", "nSize"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"blockNumberR", " ", "++"}], ";", " ", 
           RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], ")"}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", "blockNumberR", ")"}], "*", "blockFactor"}], " ", 
            ">", " ", "mSize"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{"do", " ", "what", "??"}], "*)"}], ",", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"blockNumberC", "++"}], ";"}], ")"}]}], "]"}]}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"decodedArr", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"image1", " ", "=", " ", 
  RowBox[{"image2", "-", " ", "decodedArr"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Image", "[", 
   RowBox[{"image1", ",", " ", "\"\<Byte\>\"", ",", 
    RowBox[{"ColorSpace", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.761915909234584*^9, 3.761915945225686*^9}, {
   3.761915976074218*^9, 3.761916041505572*^9}, 3.7619161536818895`*^9, {
   3.7619161868020067`*^9, 3.761916189881773*^9}, {3.761916324010002*^9, 
   3.7619163258738403`*^9}, {3.761916434394074*^9, 3.761916471002392*^9}, {
   3.761916520418024*^9, 3.761916630994892*^9}, {3.761916672459764*^9, 
   3.7619166797950573`*^9}, {3.761916753099653*^9, 3.7619167567879405`*^9}, {
   3.7619167874662952`*^9, 3.761916801777837*^9}, {3.7619168364229546`*^9, 
   3.7619168432048225`*^9}, {3.761917188715124*^9, 3.761917211860736*^9}, {
   3.761917344117229*^9, 3.7619173701786556`*^9}, {3.7620352280630207`*^9, 
   3.762035285142975*^9}, {3.7620353446814604`*^9, 3.7620353456319427`*^9}, {
   3.7620353866643996`*^9, 3.7620353881419015`*^9}, {3.7620355510170765`*^9, 
   3.7620355515436363`*^9}, {3.762035724264174*^9, 3.762035724614146*^9}, {
   3.762035764512288*^9, 3.7620357660541663`*^9}, {3.762035805736526*^9, 
   3.762035806270074*^9}, {3.762035986880591*^9, 3.762036056895671*^9}, {
   3.762036124368055*^9, 3.762036215446495*^9}, {3.762036246975264*^9, 
   3.7620363330475993`*^9}, {3.7620363657593937`*^9, 
   3.7620364217189245`*^9}, {3.762036583103812*^9, 3.7620366863598256`*^9}, {
   3.7620367423362026`*^9, 3.762036766847391*^9}, {3.762036836367826*^9, 
   3.762036836952262*^9}, {3.762036886918659*^9, 3.7620369153772745`*^9}, {
   3.7620369512000084`*^9, 3.7620369543116636`*^9}, {3.7620369943112416`*^9, 
   3.7620370233759255`*^9}, {3.762037054230365*^9, 3.7620370794389668`*^9}, 
   3.7620371548961034`*^9, {3.762037245494923*^9, 3.762037360324458*^9}, {
   3.7620897637853975`*^9, 3.7620898289164324`*^9}, {3.762089862061322*^9, 
   3.762089973326563*^9}, {3.762090206984684*^9, 3.762090304951667*^9}, {
   3.7620903416354294`*^9, 3.7620906480959744`*^9}, {3.7620907091070805`*^9, 
   3.7620907613034477`*^9}, 3.7628008266824484`*^9, {3.762800876177598*^9, 
   3.762800898995886*^9}, {3.762802884495431*^9, 3.762802925898389*^9}, {
   3.7628029950179358`*^9, 3.7628029993932285`*^9}, {3.762803052406331*^9, 
   3.7628030774090014`*^9}, {3.7628031178827963`*^9, 3.762803126529443*^9}, {
   3.7628031738346233`*^9, 3.762803187161753*^9}, 3.7628032655997863`*^9, {
   3.7628033035001583`*^9, 3.762803303659605*^9}, {3.762803373963948*^9, 
   3.762803388705331*^9}, {3.762803625077796*^9, 3.762803664688888*^9}, {
   3.7628037211420584`*^9, 3.7628037650742807`*^9}, {3.7628038362099724`*^9, 
   3.762803889082398*^9}, {3.762803941604073*^9, 3.7628039451665754`*^9}, {
   3.762803978104051*^9, 3.7628039902292414`*^9}, {3.762804031897544*^9, 
   3.762804232426301*^9}, {3.7628042772139997`*^9, 3.762804307706689*^9}, {
   3.762804339912141*^9, 3.7628043426846924`*^9}, {3.762804383156049*^9, 
   3.762804385176282*^9}, {3.7628044857509584`*^9, 3.762804521421652*^9}, {
   3.762804955295542*^9, 3.7628049554550805`*^9}, {3.762805100886068*^9, 
   3.762805120883278*^9}, {3.762805260548588*^9, 3.7628053265073967`*^9}, {
   3.762805419571955*^9, 3.762805446238001*^9}, {3.7628055710172477`*^9, 
   3.7628055803191476`*^9}, {3.7628135718098965`*^9, 3.762813575263863*^9}, {
   3.76281361696049*^9, 3.762813626885763*^9}, {3.7628136973731203`*^9, 
   3.7628137222003365`*^9}, {3.7628137572732844`*^9, 
   3.7628137593432317`*^9}, {3.762813852176456*^9, 3.76281385660472*^9}, {
   3.7628139201628885`*^9, 3.7628140261268563`*^9}, {3.7628145279849944`*^9, 
   3.762814577117319*^9}, {3.762814668197609*^9, 3.7628146774300528`*^9}, {
   3.762814844202622*^9, 3.7628148768241835`*^9}, {3.762815187665943*^9, 
   3.762815234441351*^9}, {3.7628154210480237`*^9, 3.762815423883071*^9}, {
   3.762815494817131*^9, 3.7628155108076086`*^9}, {3.7628155776733313`*^9, 
   3.762815610045987*^9}, {3.762815642976008*^9, 3.7628156688327203`*^9}, {
   3.7628158638615856`*^9, 3.762815908364915*^9}, {3.7628159389513836`*^9, 
   3.762816014435466*^9}, {3.762816087841111*^9, 3.762816093561097*^9}, {
   3.7628161377621593`*^9, 3.7628162108306856`*^9}, {3.7628162667046566`*^9, 
   3.762816282613068*^9}, {3.7628163834813957`*^9, 3.762816438591365*^9}, {
   3.7628164991068068`*^9, 3.762816499304267*^9}, {3.762816547662633*^9, 
   3.7628165659034977`*^9}, 3.762816632657556*^9, {3.7628166739984975`*^9, 
   3.7628166976323614`*^9}, {3.762816865203922*^9, 3.76281687320656*^9}, 
   3.762817118001831*^9, {3.7628591768346148`*^9, 3.7628591773573456`*^9}, {
   3.762860093909568*^9, 3.762860109318041*^9}, 3.7632026107211065`*^9, {
   3.7632974604280295`*^9, 3.7632974613206186`*^9}, {3.7633355471917396`*^9, 
   3.763335561217513*^9}, 3.7637537564996376`*^9, 3.764335975234499*^9, 
   3.7643360484469776`*^9, {3.7643491394832697`*^9, 3.7643491399827757`*^9}, {
   3.7643493761656675`*^9, 3.764349401760637*^9}, {3.764349434641889*^9, 
   3.7643494397965603`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"9f1bdff3-9970-414a-8286-e19159d1c708"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
   "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7643360098461857`*^9, 3.7643490360166845`*^9, 
  3.7643491429263563`*^9, 3.764349445229719*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2c043a2d-3dd1-4e89-9eea-4050bb261767"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"compressed size is \"\>", "\[InvisibleSpace]", "48"}],
  SequenceForm["compressed size is ", 48],
  Editable->False]], "Print",
 CellChangeTimes->{3.7643360098511705`*^9, 3.764349036028733*^9, 
  3.7643491429332376`*^9, 3.764349445234624*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"5dfe0390-f1a6-445a-af04-44778c7ce5e9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             TemplateBox[{"128"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 51, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 51, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 51, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[51], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643360098461857`*^9, 3.7643490360166845`*^9, 
  3.7643491429263563`*^9, 3.7643494453939424`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"7874bb2f-55e2-4cd6-a354-69b21b67f402"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 52, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 52, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 52, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[52], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643360098461857`*^9, 3.7643490360166845`*^9, 
  3.7643491429263563`*^9, 3.764349445517599*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"f32bbe5d-5b5a-49d9-9827-419cde2380ee"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvdmPLGt23SfYL370v2CS3ffMNVdl5TzP8zzWXHXm4Z5zh+5mN9mkaFky
QdEDZUEGZEJ+kgEDBizbj4Ye9WT/S/6tvbKyaV18NxAZGZknK/aKtdcevi/+
i5vPw4f/5B/9o3/07T9jM7z+ufD16/WvR/85Lyafvr19/en+rvHph/vX918T
N/8pB//37f/af/rds5dPn7168uzpH//x8++ePP3uybMnT58/ffbLX/zxiydP
X714yZH9757MavVJtRFnvkidnO09fc5Hjl/tH754cfD8JYMjjP1nLxhHL/d4
K3F4fLp/ePLi5fn+0dmrvYMXT189e7r3/AX/yv6Llyd7e2cHB2zPj44Y6aNj
RvLgkG325LRwlsgenVXOM/POYNUfl86ThdNkJZWuZbLss1NNZxq5fD2b65TK
3WK5nS82s/lxvT5tNtvZbCOVqibOGK1UqplO187PO6nzf/L9l7tet5PIDHOF
WaW0bHWnldaiUrtoti/b/VW9yd+4bjZ/urm97nSn5fIglxsXi5tWa1wo1RPn
xcR5/iyRO2WbzCfTqcOzbCLJSJ+eMnLnqVIyU0qky/y2VC53miqep7MnieKZ
jvMu+6mTEy4dI3mcSByeZo7Pc8eJ0lmKv5RzatlCNpEupvPx2Szbaqqw6E84
LX2USJ8mfZAfwMnlVLaSzvFP+OWw3c2c8VYqf5otJDKczMgnsxzsllps02ep
1Ml58uC0ma+njlOZ02z2LJs+SZfOC4WznD9VTuULyUI+lWNgXOyIQZ/+4pff
/QJIPH/yy+9ePXv+5MkTYeDZc0CSPD49e/nq9MVLcHL08qCczftTQsXTF/vf
PWN7+OIVYGDL4F22RsvRi6NiosC/rndf7YEKtkevDg2G5PFx4vBQ2Ng/KJ4n
M8dctxNtD4+qmWyrWOmUa1znSloXHDx4lJOpdrEEJJr5AniopTJAoleqNLPZ
frnczedHlQrbZjI1KBT7xSIgmdVqHxfLZbX2bfP2YbToZwp3k+Xr6XrTaK4b
rct2d9NsT6u1q07vbji86fbm1eqkUulkMvN6/W48GZVrwmS2gBXSR6eZs/Pc
+XnmTCYGJJnjs/RpopA4B8yCARhmBxQlTtliu0IixWkAI1AEPM6zJ0kMAX6a
2WL5PFNJysqcVs0UjYpKupA/S8vQZ2nOx8qPx3NAAiR4hyFsnKcAaimZ4pfo
U+cChn7kaYp/LsvLw2Qv13g9uc4epoUHcKITgEeGl9oBnFzhTMFfdbq///K7
p8/+5Jff/dEvk4lMJpUFFZVCHpYAEgCDWxs77r8QD0AUz3/xlPOx+/nRyenL
/aNnL09e7IGK4+ev2OGIkPByb4eQvacv28VWq9AQh+zt8z3H+3vsnB4eAAAg
ATYgDWAAS4CHbCLB1YYuQMKw0QYVXAEAwwWELqCIynmqmkzX09lWrgA2jAdG
I5Nr5XL1dLpXKCybrXG5xpjVmhe94brTH5ZLAAMA3PQmvAsVTCr1dbtz1x9e
dbtXMFK9ven0l80OwIA3Vq32otXq8IXJJOTTzuSDK5IMUAEYwriCRCkJM2Bl
7v0TMclJBkjoDzlJ5rH+4Sls4JuaLSPgIRNnDhOcUDg5hxLLMXjJt4EWhiHB
mQwsCDAgDY7zDSABBFYzeVAaFyddSGUwJZjhBCCBfWXiZM7/YvL0DOsPi50/
+/SnqYNkVicIEnAFI3mULGeLgMH/qP6c88yLJ9/BAM9/8d2zXzzdf773/OkL
yOHg5SsGeOAtMwYDPoE2zw6OTvYOMHdi79AwAA8HT56zz2AH6wMM6AVgcA6o
O36uc45egpaXL7/7jiOnYCBxVspkQAX0yxFQAT/bj8TlhVRT5sl6rqj74jxT
S+e5E0EF5ABFDOuNVqHIDqNTKLHFlcAVw3J51miMy5VpqTavdf7FP/mbX7/7
PKnVLrrdeaM6LBYn1RwMMKsLJ29ns4fp7LY/vmj1bkfTu/Hsqj9atbqMeaPN
t1XOz0vcdEcnYLJZKPNjUocn3BFxS3KL2Y4pjdNs+bRWOs1jssTRWavUracq
v3v7Qz/fNFEEFehP6JXr/C3wQzmRBhW5o7N6Os8fCB/iUwSngARmEiSOEpgp
Ey4Au5sfuDjtUplbxozBrwIGlUyznG7JOySSfCRMnCmeCSS5ZDZ7nE4dnMMM
eBbe4iWOQ8A41cnirtN0KZHt5YrNVPZpmP75d7988ie/wImwj1kxPWQCMF4E
Xfg4tj57cYh9rRmSB8fs4z7OXh2YNHhp0uAbgA3g4XsYgNzwwJ/i1wAJB89P
jnEf8DBEcfzqlZHA9dxBAq7ACu1SlWtlovBOI1tEUTAgikGtPq43IQpQIUhU
a4NKZVSr4UHa6cykWF002otmb1xpXvUHy2YTVLAzrdc2nc6q1Vp3mh8Wq6+3
Vze90Zvx9H4yh1guupzZWbd7s3qrXyjDRfgOnAL24r7DCnAFhmDLj2dYXfA3
tjLNP337F7VkWX9FIt2tDpqZWj/XqKeKEIuUQ6AaQmDLn1PPFAQGpEgijR/x
u0XLg7O0vHyCK1DFp2BWTFlICX78AC6CODOdAQxcIssMzp90lnfr96njdDi4
DHDluOCRzBbT2UpOuoWXfA8/z3Iif563Kykm8rAcv+0v339/2x3BEhj9yZ/8
8dNf/AlDkuC758XTJHIISHz33XcSn+jDkJH8TrsGLI71AQZgsBMBGMCD+4jj
sAon2JUk9sDPKahAl57vn4wag161AT+cHACSY+nMxDkn80HfccGxXP9kYCPD
zcVFAA/NXInr1siWR/V2K1+WogAVVUFiWK0vu32RRrHES6NiWKzgI9APo1IV
orjs9UAF5HA7Gl/0+6Bl3W5ftDo3/f7NcPhmPPmyXOM45vUGeLgejI0N7prC
yRm+wzfyTiFgDo7sqBsrsF9PlcfFfjNZhspQxbnjJDIye6y/C9j4T7Dd/Rdh
gvxxopbK4UE4AnUAePuFUJVbeIA3o6JRqhiW01ZvPRyxw5l8sFOsBqkW0Iq5
RO7RfWREFOlswCMT2kOkET4oK+pIpC0q/OXAg+P6/tNMJ1t58kd/8uSP/gg/
gqx88t0vQEVq//jdxc3es1ewBMDQePL0eP8AEzvK2CkH8GAw2H0wvG/kiFsO
jkQse8fmCt46f3WI0XElZ0eH6AoczcnBIVtuPf2NmTwXmb8XxuA03QLnmW6p
Bh7489lZdMer/pQdfEe3XAEGgAEk9MtVsDGo1II3CkZFL53vpbOTilAxrVYh
BxTFZb+z7nbvxuPrwfCi3UZbPozHb0eT39/dfl4u7kcjnIi9Ca4ErsB9yPsn
UthREVBSMUWYNSuEJNPmCpFbKo3UqSazfIp/HU9XSilsgTq24UmoSlChnVRa
uvRMGikcYtk+BQLhOsTdkd3qCkyZkq8vZXKA0MwAMvu15qjZ4Yo18iX9vHM0
Ro7fw8l2ahH7ZKxL+bat9ZPSHj4tl8injuREzCE64UziZDNewBJEoS+fPkE5
wAkgAdd/8OTpi++eE1fuPX9G1AAwiCW52Xeo2IYYISfkU56/Ah4MYWPvQB8U
XbBPiIrHIco4qORy/P6zF/voLk5Inp6gKrnL0Bi4aWinW6nz+/G/BB1wBYMo
A1roFqsQbB7q0P2VahVr3HRSFMXSpNHCgwgSpSphApDALnpZLosi8CnBFZvu
YNVpz5sN8HA76F0Nxm8XS1TlD9e3ryeT2/4QVPzzL5++rRbvZ/Ob3uDNZPF2
sYYuQFcrV1JQnNbdXZbU0W3IEbwVHM6P5Ag24i7DQAZGK11oZyRyxPMpfUoh
xnlm0ug0M2XDg7eqwRLIZoBXDTwIeOm8bwFrTgb0jilzKfES9z6Y2YrMdPiF
dM7S4mZ2OWmNFWkmgEGhka/IBwWcqvkyegCLGxXZcCIguZ5vfbz5WkyUgiUI
+Qv4lMx5MptMvfildcUTVAS3LcFIxBrPCBOIX4AEeIA3eNfI4Qi3NqiABMwP
aAw7FIJQWIL9kxcHCitOTs5egZn9Ub3bLtXhjdRZwjIVKihmkvkUYfgpfgSp
iQexeOPmQs8zuOCIh2rEpNsAJJXDZUCzQKJXqYorQmEChlmrA1egARAYDKGi
XJvWmoNSSVmIdud6NLocDO4nU/aRFpe9PuIT3wEqHoaj60733Xj2fjJ/N1q8
GS1v+9NLCYwePEOAjJm4Z8+PlKBQyuLk1NpGoWjQBdYJYChE4t6fVBvQRQud
jNUUz+Y4WczAH5LMzuqdbq4sGKQ1+BPYQhf8dTtIyD2dCRKKRtP5br0JJLg+
lt+SFqjWiC9MBdWUwFDLlmAJBlf7crIBDLVCxYJEuIKgciUwBkJEDqeQW7ld
7pUzwk8ELFnuOJxLtVCBHJ798jtRxNNnMn1EndzpykEdHj2L3IXo4rvnYIMB
SCwm2ZofjAREy+GL7T4OAsGAiXX8iBhTjlLeZF/Bi7IujWa9lCcGATlcamBG
oK2tHHSSy4jdxbHEX4EKyXXI8FwKjSssAilXHIAQkIIH+IEBPKQ5C+VxhRCj
tWr3xtUqUmHZbsMSDLwGVHA/HL+dzhEYsASD4PS627/tDX64uvm7P/+rbxf3
76er6+4QOPFV/HOVCH+wCFgFErAWJGbmL4Z3wF61QiGci+KjQbGCIGHIoYCT
TNYBKZ5IDrFYhUyQE7BQmRs2gDFtdiU+Hwd/r9xBRCK1QmnrOzIKx/i32EIX
DlGtH0AFF5mPsGVgZd3+aXHFbjzKznw+RAXMUEmVcB9IEe+z5YOcNu2P/xB4
Pn8R7kPpiLD7Pth4+eTFq6cv9x9zF/svnoMcJyKctrLGwCMoYpWi4CUxxWFi
b//o+VO0BKTBuwzcBPRyun8sQJ6eA5tdri8yMBnnDC2oQII8LLdJqcZdBkVs
RmNuEMwhmZGRMJParNS4pDgRXEnsizcwJXYBGOtOf2LlWS4vWq1Vq83t/2m5
fjedv58t1o0WatPAeBhNbrr9h+EYMHy7uP2yugIqwAnH1MqgvqQWFDaenOI4
xs1W+vAIa366uUP0AmNIA2+CK2EHc0sAl6rAlaHIIiDBnyy1cJYSANJC2qDS
gDQayRwf4ZcDGP5ky9pyRBBEHwBDcUeuYGCYMaQKEimAASpCjRd65SbRSj1X
NjC29z5IzhbhByDB/g4kxoYQdV6Yd2f1Qh2eUcCSLBZTpVy4GKW1Q1EoDo3w
k+FsJy5DeHiqsf987+DFPucAHpsYGBBwOXdxdnCC6oA3+JEy9HHq7PnJyXe4
hrOjvVecZi/DEHGlC6iI8/0D6wrejcSgcrnwhhgS9xfhG1cJWkBjjxsdEWw2
p1spmwnGyJorRrUGXIHXCLqoc817+RKowIPczhazRqOTy216vVWHYLOD47gb
jF6PJgEAZbmhDnaue72fb+/fTGbCSW/wP/7Vf/X95pLj+IJxudLPl0Aa6tGZ
9mwoYTnBED/VkKAcUSpeuRRoJNvgl+dKjbjrLQ4t56QVzzONyGdy5mV/Mqm2
OM1nVgJ7FqURV5qgEiYKwKDMuXIRKUdDCoUEDKLaoiERIUzJn5Xs5GthpGyR
fRyKsaHzs6XQ9kXkhz8oQZIs8G4pXSIewe52EwgJ8MDtDCSgi+OXJ5nTLGDA
jxwhF/ePD1XL2AcPtq/pIvwFkvLw8OUBAQjYBjOI1fp59/ef/zZ3VODj9hGq
iewdgAd8Cn/RrNsDDBE6AX5peFBRL5bRnLo7kln4gevDQXDCZcQiXASFHsWq
0tqlGk4ESOAyGOzAFVaeoGLZ6hKrcnDe7uJE8B2QxrzZXDSa0AWmR2qCh537
IPR4v1jcDgbA434wfOgPN7XGptWCYfAjBBRdSJs7LrSB7/psIoEisr3M5EUR
hSzu9BQKmf1iJDZDAChm9P7WISbS6M9hqc43GxWg3UFrLWwXTiTpaEJ0+ggM
5SFTkhO8K14NfsC+bPkUeAAkSphvOQFPXdhxhXCC/8qWOG5W8TfwcQ62KjV/
wy//SEWxVxFl4COwILZDWpQSjVnv4hCwPH0ePH+y9/SpYbC78YEQ5nYV7HhP
DkIg2WO7lznIDUrLzFEaBQtsnM5SIuvgmMgXFdGrNvha/lIl6hNKUDif7MSF
L5GvCdec4EWQKJa4zjBDr1RTUYxtQUICPEybbXbW/eGi00NkMi5Hk/vF6qI3
BAw4EbjiZjyGLvAjKAqQgJ68bPeVskBpjEbIzk/rtXZG4+9XG9XIwFWlMq02
ls0O5OMEhQX/zjr8fknNoHS7eAeYSjSFfZW2igjFRRAXs8IQGQcmdiLKYqW2
+VtjRsbNFqwtH/NUkdUMbGy/YRuAbLWiDV1J5jUCFZH4yogBAhhR5nB2C9QJ
MNV0GTBwJ1qrtIrCBtwCAxgSVhc4EWcnTghMnx4cPN9z2oGB0jjZE0gMBpDg
2qgSVi+3pCHYwCoRocT5eztFkTg8jHrHCVzBJVIQqmz8ObDfeRDfhgrxktsC
EOzRLlXbBX5tgV+ulGa+jL8GEpAJrhmEICp2ahN+WDQ7DETFzWiK4AQGm04X
lngzX6A2cSLLZuuqM3i33BB+3vbHiM+78QSu+LhaKTLt9u76A3iDAEQBb6k6
DJXCT4rrVgPPzl+JydOylFKXmZyLmMRKsmyECRiXl85166+LIMt5MCEH658k
O9lSM5W3x3EuS/4xUp2GFibbQcKYdADify68TN7VtK3TOVdIIj+CSskW7Uo8
eNmqNORoUsgh/hzda3xbr9oibOEbpp3usjfiiPGgzPbzF5aUDkmgixdP5FkQ
nIo7FHq8OnguSBgJ3jqtDYqOXzxDSSYOT5XNPjo6Odg/3js6OzqOWvlJAODM
qMDLGBgu9jn04KJxtZFMuJLs0ZlvzAbSsdlWXjdXAhsgWTuRtpKoKIABRGZj
XG/vclmQBr7j9XyDE9l0B7ejKeGGCl6tNmBQzQsn0uqtG52LzmjV7CMv4QRg
85vXbwEG7kOQ6A/7+cKkUh8V66BiUCgjOB+BWmgWytKN6azln92Hc9EWRco8
JJWudwrCjLdjfpFeXlmLWiLzV99+TaAKV4CKWkDCGU4H45HLLW4TvJn8josQ
Wr1y3f8iqsDAeNQhIopSQmLDUhPT4x2MCuiCWJWPdEsCNsc5zdlUDjLY4SAI
2Xv5KoSlwtL96KZ49QJ1cbj39KUCkMAJfGLrK3/1SqlLe42IQfYisjgEGIlj
JaOwO67h+PCIMxN7h5wJKnhL6vToNEq9ogjF/sm0spqnCbOEqmDJLFeM+yt3
nFA5khswpysMgJeDYbtUHtRbgIHhOsiw3sA1M+xHGHgQtISw0SIOHd8MR19W
y7/5/PHH9XzdbAIDsAEwgAeuAbsrbm22QAV+BFQwPkznbyfTYVGStZstQBeD
lGqm1WIpF0JROieXz6eD1bP4axX6bXf+It99qpLLQWe3IWQ2X8hsM1H2EU6W
TsrNbqFOSAL71VNFbmFp0VxewWkUBLkLTDtOZWyBoUQWx3W/cx+ZQByThpWL
1pP9ZncXdwAPrqRjGSsHc86WgfMViIUBZhiNUm0bjT599jyK5s+ePIU0Xn73
HGdhnLgjwhTBACccx8QOS1XCiOhSdn91cL5/pJIH5+8fJE/PuFCcqfaMo2N2
THqwhBHC/rYenUxX80W2vqqOUsFJp9bgr0BUxHVQ2n/RHzFABTcLYCDowIPM
Wj2nuwED3mTW6jDwHaiLd8vVb9+8fTsYPAwUaOA+ZqiOagOnwA6CYV5vRUYr
xCcRSn+AyJwiUNudaSSjlrnyP3v3ZVYoy0DQfjpTyeXAZzkLV6Qwt6+nJF8y
7/IlP/5RzkkQ6jbP/KEpAjAUTsX83NGVRK6ZKbeylUa6VD3PWxI4H+4qWMhO
iQQAw+B2Dj0gKtilJh7tWzIqdmKSn4SJHZ/2COLysAf7edOLc6RGBb+/XW3W
i1XAw7sgzWV0t11ZVMjuz0UOdhxGhVtlcAq8i8UhBye92ZkNRlgT33H8fL9T
rPNLhJ/IYxsMAIahLHfUO6w0IA37WaiYLfrBYZev5DaBnCtwnCOw8bTVCy1U
wM8qAAmp2ctXLC1cBwEVYMOoWDTaV4Pxst2GFpzPxFOwhR9cOFvUuzeDmXYa
bYDB4N2NAtj2Rbd72e7ylrKU+cKHxapflNYNGkdh6nYGpQBD5dREejmYjjtj
J6idJsIij6QhnleokkjboBF94CkUKTRzFUMCoqhnSoodBAx9rePTRrZsnbDo
jlv5agAv7wRmKMaiYeDkhlFhjYFlI/zU4CdFfCpwRrY8F2RScOFJPJbKdWot
OZdCfdGf8HHlEM5TKpd/98SJLKjg9KW8g2of6rd5Gd0yL7GsgLF/4COKWK02
Dw4ZvHvybL9fa4O6w33pjdRZIp1QyUPYCHgABic64Iedn+WIowxuRjymSuch
uf2zuaSdck0l9RCcTuZwDlxBTPd6fjlvDYlVndVEUYglegPggfvAlSAtNp2+
NGe793o2f5jORiEgx+Xapj38ev0aQoA0jJzLRntVrF5GIXXTbCM/xqUG8lV9
PqIIRwQZZbAjA1nN512yCRkgzZ87TXFXSuYFUWwDiri1/Uc5ITlp9otnwoYt
Hinu3Lg+vFvexO2Q3UkUcCLTp8u9cjNoJGeV6KDDMSkCOBRCPoRByfBQYb09
wOE6I+EEhS5yAbYpgpl+rSnc5jVK+lvKlWylW2438/V6tupql9opI8kJKlSu
2j8hglA6K+jCTTgg5PzkFOuzv0XFnvJa7EhtHsrWib3jw32Rg2TG4THAwI/o
U4fHFhicw+2vImNGMYjjfYds/AnoBzMtdLFT3bXsNpbnL2JgnW5FCatJtXXR
mShtVaq5nt4plKAOdjAlVr4YjgHDhUpjqpO+ma8epgtExaxWnzfawQOl6Ney
umh+aY3+9dfffhpMoYslsUxZuU3oqJ7Obsk8lXMOk0CyKbItsoMqUPdgZKhk
mmJVuu48a+lYjSyHRV05KuayewhLha7SCdqHNBq5Wum8EMFFxqyyfdce4Zwf
oAzGP7S7FcKsOwIYVp7GQLwscIdG/LJNWzn2tCbZvbRPgSVARbPUnLRGtYx+
CbEGusIpC+e6YQApgYMTo0IdelH1sCg1M3Dvy6fs7cubHBJxHMplBGawvrlC
ScvEOQflRAIVTm4AFeuubUBXKCLkitkc+wr/H9vY8BcWWs7qIPMUskXign3M
gb2WrT7wwC79ao0BaQyrTbgCzQlLwBVYX9FHu7VoCQzvFpduvRtVKpNazUkq
xrhcxmv8MFr+u7/+u/f9CX5k0WjMylWQs+0DzOkuC8rlxs/2I/DppMtXqfYq
1UQbGMMRkxbcw+BEpbsphCiEdLrg/LYqO/GnuaUke5I0+QsGSkfIBbgeKtmQ
zet2fuzg3SmKnYqwB3HHmjFDEGH2CHKo+kzfU5z2CJ4it2etUGK4jobILKVL
IIqXwsMT6UzowoZw87bFJAelK1T2OnCBY//VAXgAFeKHGOyfHoorAImsf3zi
oMO+wy2O6siK5LY1BsBwpiKbTLFfzhcKmXQulayXK1wEp+xGzY6Vp6+2wzF8
q3L+2ChbxIMwQMLdfD2oNseNzqjexljr/vB6MgMPszrKU/lJ57qhi2iq6RgS
42p1Wq8jPGCPSaWyarWuO73b3kAsUavNq9VRvoiv6WTyDBCIjOmUyq0SyCzg
1JRiTVT+n//p//rbt39WSRSs53fttRafLuWEIxBRDIq133/+sZGxRJQ7sEDd
FrJDi0bSUn3XhaQiAvSAxEBBmNy177rzKrJPzchLoHDyJlXzwDbKCB7Ayruo
E/s64uAllMvXGnLIUZAAKrSNd+UOAABhxZFqE2llGJTbdPXT0gLxufdkb9Qe
pU/SRoW9hnnjVEHoS7XlhFtx1UPfdqKuV2sJjvhHggEFsKdnDJgkc57kCAM9
nzo5ce4Oh6LWptw2lGarhgoYO1PaDOer/rRdqM3bSAi13uE+4Id5Z7DoDoe1
FtSxzVq0uuBh3GxMlehuq7dKylMpC1AxKJVAhbpx6vVeocD+qtEAM+KNqno7
Z6XyVbvbSWYJTkfF+qza7uRrLsnVIxpSgJyqrNLdQaahWDWTi5anrJOxuvET
AgPA4Ey2vIWkHOTr1+MVnC9fkC4Oqu1Qj056bNOY+bP0682bxXBZTMlYjh1s
dMxn7JkfZEE5rIxpNtIadhYYveQPsm/qMFHEtrwLVI2NOHmLCjOJdQWoUNn0
5avnUVKXyIwuC9fNnahEpvKDJTWjSGr3obA9m00eAwOE6N42a3F65kQEhKCO
GvmjIz6i1EQE9Q43QAUjmTgHPDhTdXefJyw2QohGcTAaD+qPxSbgAXu38mW2
jkSGjTYc0qtUQQVxCjIDaQFLQP6j6OFcdDrKfs9mAAAY9AIPw3J5Wq/Nm41B
qdjN5/rFggpqpdIwnxdFFArsdzLZTaOJ9minc610zp3kzXyhlslqm1YBl30J
0eRWRjr0Vl07Akx+cGRiC+ChFi2aeJBxrcuVR232co3r6YXblbcNdedq1UBd
NDIyUKShCsHwRZ/mdJbjUBc+TAKPkMhbPQYhlEIw6LMKXvISnMCDI1w9sNTM
1WqFQrNc7ZRaKLpWpdIs19Ummi6jK9ScH26C4eA07B49eHv7HJRfQD3uHe0/
g1UOzC3uoWI4ccHL5Clx6KHZAxg4JQ4kQIJfGiFOUIhMDo4kJ/KFDBojk80n
AQNRyfm2vUThUiagrgITl1RCIlr1OvqL9KdxD+I4+JO1EyIzeryrk0ZrVK6h
M2/GhCFtuGLk0hiupNttZvOEmcEStUkNeJQEiVJxFudwPngY5fKDQnFcrly1
+r1cEWB0c8V2Ju+Mehc3l1QOCigy3FHDT5r3httSRQghKWSQE6OWVIMWLgPC
cbYKouiWGo40Zf2QB0pHhFmdZIhiVs49V7v0wi4vYU8R0kK5PqtHpEKjBIGU
RS85iUkAYFGB41PROVfEBS+6016j5ZP5nl61sVMXAAO8mSUAA9ZEJb58+gSR
sP/sWWStD40KxOHBCzGDqiGR0fJPxe5Ocqq54mA/nThz+zfWVyo7og/LCTMG
b+1SmvIp+QKoQFpwAqgAEsU05JDKnJ0ZHrtWE7c7Gg9QB+TgIrv6svLVdX+M
N3H2uyOE4FOqeBAwAD+MoQikY0M5TPds98tlvEY3nw/fgTcpsoUf1p2+Tsu3
vnRfL3NDxbD5IowxUiQiYLjRC4pwfCF5ky/wchdcAAlF0KEimkFu0fJRq57n
laeKkjcIqT6WR+UOVAjLbmudWd3acvepR8EZljUVWGm7PGpURKFzmztVpBYe
wbjiiCweti4pfKtGyaAGM7QqjVqp3CyXo+BYgy4sPPSdhYp1iMPMx/Dzxf6L
54iEkz08iPyI05uWlGyBSkwGPNipBbdYBDb2o8dGvXYclISIhKcLrD55l68w
PCQqTs4QA7ezVSFxnk2e44xKGZCQAR6mC6U9M1t+UBEk0t3sAAx3feNExvUm
RIG6GFU7Hy7fIDi5o0HFzWg6D6IAJHgT91YRUwxjfhmMAQYgEF728yIHIKSO
i/z83/+Lf/+r5U+tVBaBodR3ocgHAYaC2bLaaezUZNZMFq7Y1jpdukpnXNuq
ByTsQRqh7YEEO9AFf4L45JH5fRebBzCokjNB+P7Cx8rpNjGF7Zx+dFrS0gvr
b/cLJXPFVlQUsXhx3p0t+3NO41PNfL1TbsibFBo4FP6tVqWGeBYwYJWgC4Yz
2HCCUQEkGOnTU7y8UbFLZCmL9VI7EIImjgVFyCkcnYZHONhOnooZdvYgYEmh
6MmZ3UdMsTx1u4VcyZk4hAvI3aTmt+AKttW8igumI+es3GkPDIgyUBSCRH7b
kOOCSLRS9Df9GXJ0UO0Oyl3V0+t1CctKRfNPvV9Up9awVEV5ggqHIRaZwCMi
kfay2F+mx5NcG+QgSiEcdrRfrHg6kmYyPuLT833UCxRCTpmiXN5wVbHmUQ41
smrhZr+dKRPGNnMVV72VzEzkIstRdmgZjkACgI9YHhA4mGQ4gszu19r2CE5o
bINNfEFkqFRirta5YgEwmbierS7rF4v2RipUoWhlku3/OPpplB8rs1ohIK2g
KwyGyGtJixoVhsSrZ0+P9l4JGC9eqFE/RILLHPYmx6+Us7LjeOyXOPQ0wMTe
PiFM9kTTYZIHx9t+rUdUeH4lYHDva/JY/VcOQ5TkVBeWnAjYUAdOcIUzXQBe
eC5yGRWVOJXUKhTd4627MpPFcRB64DjwFDj92+nVz29/1cnlJC+rjXEFGqk7
3GB/Wm1Mq7VJpYpsYEtY+nFzQdyKxrjqdi97vX6+MC6UUBftrHovTSxyN/lS
TGXNA8hGxAL8MGApVOTyu9QT0asx04q4SX4ki6eDo/i4utPdjwd1gJBJqvpt
eD/Nt5XFiuxuuMUIJNPKgXcr9Um7x44smK/GaRVnG7YgzIe6UESp7CV3PTuO
LuVfiG3PS3/7u//+anTHx/EdlVT5rnn7v/7T/2NZ2+hry2XziWDJLca35aq1
fA1bIwlwHHvP1ZbJ4CWoUAX85JR3MSJmhSLUTnOwzw1uVJgfZEEcweF2Xnm0
3qny5Ror9KLeiVTG0Aqdearp2GfbAjrA4AuRFjEJK6HOt7MzpEU1s61T75rb
ufIwLce9M6w31Nar1qwyWkKpzkYLT6FJZIX6pNKPOSAAoDFvdBfNDs5C/RJR
AQEVLqm7/ZuXkd6sb1qteUwbuWi3J8UyTKIZpvk8AOtkNaGAL+cfBXiRCyp6
BpO8iVRc3vV0MGNn1wxa2EIiJLE5xOUbBbmZ8iLT+Hd/8z/fNWd4FgnCLBK0
FpGsYGC6CNqpcYQvsQCwSHDmYZu1KFSsOkCR+g1CMfpdvqdXbrcKDeGwBLXW
eoXuZfe6mdYRuZ7ofxO9KD0SXqZQjeZMaQmIwjvQBQjBWdhkmMm5CGe84QoM
ap0QTuQAijhVFVWt/iqjH564UA4elNaIFh2O2H24QUiTpolJj0+3IaqK6Wdq
qg8n4jZIpf5SGX5zTEvHvcK02U650q3ws1Wr6lejIyuKIM5gj5SjrivGrGjM
6633y6u//s1fTqot9oGBpyS7T09TC6s13AdoARXTKrzRGJfLcMi80oAueoU8
YAAVjUzGdRZQYY7SfRrREO5MNW7HqtkCVEx0LK7IVVvZCvgc1jpb5GTEEpvB
ZNEZIFxV3eOXozHSVU5Ty3qIZ6El8MP5rpAq+5QXrqwwXfXwjgXn6809N3hI
R03h9wlsfQJvNUo1/Ei9oEBDwMhXxDzFij0OuoJ/TrPw4JLIYoEKz/iw2nTr
1NGzl1g2sXe4/2pPHgTN+Go/fXiQPNw/PNCsHwCQODzUPI6TM0tHT8jd7kel
w+Gns1iuhWmL6lC5PJvSjNeUNYaBoWYb3MdZophM7Gbf40HGre6o2VH1Ianb
sCWLcI9w/RujRpM7t19Vs82s1ZnW2gzPxdBkkBAS7EMUznMGMNrLWsuFD7V8
K7Gp5BU4ASHyLMXyFIxVavgRBo4DderZi+AB61dSaf51h4GYwDnwesz4ULBc
qvLDgIrt6xvckiDu/SJvRQOA4IT1AYbzLezwbeouqzY5E3LoFJXI9Z0rltiC
JBppChUnqx2wcMQwAAOzriZs8vNUUiyrfh2SshpEUYdVtgqzKFTwazmNI+hP
V08m7YFRoTkasaxE9FseuJcGJsSmr7ZQUduVbpZyybBxSip8xIGXoUgFgTgC
dVICQ7Nj72OiUEfWSQL8xJmxMEi89dihd+7ppe2SZu8qaZzJQB2SExldeflr
7tNSORy6uEJtnLk8x/ltikZL1ZgJ0oQZ2EpJ1pryHeCh0UZRIB42HSW9YYNV
vb2oNq+7Q7uSeUwbETBKFVhiVpbqIPoQMHJWmJlqMumIA09h9+G0VTPmjGxF
Trbgyq8lqFxARne9dyxQJ83uuNHhHADAFvZW/jy2Ts0hP5yN6cjjKzNpOeHI
sZp/FAChUdGKoGLHD1YXMWtbtt7hga0h4Zdwmr1GeBxikAaDnUG943NeRU7b
Ra7dzOLQHuWX0VmxLYfFujToCs8wtbTgpZRGrENiqOy0JVteKnedzvqlMHB8
JhY63BZHdqkM5SvOthMJY0LWeSxToLvSy5ioYJp3ZUoZPC5gD/dRVqbR0sJt
FcSky1b/zeLiuj/XUja1JpBgB1EBdWhKSBRPgcGi3PiLd18fBvPrwVgCoyLl
yQA2F62OGYOtYlKAUSz2EJ8Es+VqM4jCjXmOnd157mynq3g2qIvg8vulBje+
gWGnQyQFJNgxKiwG1J5aqqpRWZXfmj71iJZgEpk4UFG0flC1q8yRUtzv1Ufj
yuiGhO/6ECF1w8bHIwFeCroQVJSyiNMgimGja245iGSF+mpi1o+LYocv9l0g
c08mriQWnTjYxRRmDISHCqaRr8D07qeyue0dDAZHH97xvmYORt7bJ4gujo5N
F5VcLrhi292t+eCRSNTMvuy2LyuUVb4dtSq4ggEeuJ4jvEOrN6t3Nu0hTgSB
se70QQJxxLzZvJ1MFo/FsnWt/dv796/704tWDySs21vxua2zV0QaS6LdSs1T
zxzeggrVQQIVbu3epheiY3AnCew+uMF3VW/tR4+Na3yL7nDW7jtjj33lRKoY
C9Mo5XU1mG66I4AkLOVLW/8SvAFRGAMugBpLvut5GRDa3vUYdzmYGhhCheRu
TT8gUMEHwQMY4CU7KAp22LLvEzD6ttsqUOEG3aOXB6fHJ7lUWtRxdHwQOQq3
YGHrfrPtzhnEZzGb22WwsfUuL2Ft6cwVH9lxyOMSQGfObPOuw0+vXCE8pAUA
IEFgrvAqJy3XCi0BOUTHr6qHuA8pzyqQkPy7HC/fXz1MG31FqYUyLKEg1B4E
DVmt3k2nN+Ox0lYNzQpRt39v+PvX77fThTody04rT/gBJ7Ko1jeN1lWnxxHL
V5VCKlUHIP7ZTkPtkmyyXdRJoxukumuk3IaZEV/AEihSFfIi8cKWIwBD93u+
TDD1er65Hs58MsBwPIJNbWtwEpKy4gTFTiTAGwGP/x8tmASmneGginqBnVpc
VWUvFXc0vb8DElzhT/GWu2iczXbBy6IRMBy6KnpycnSgVky/9PRAlbqid2Iy
GEbq+9h0IY+wf2QqcJZbzXhBHQ5M3O1vEWICcZOeZ/SjKtlpaJpe9mZ+FWG7
JiC7DgU/2CI7aYGNmsV8zA1pTJp9/nbNu9G007KmGRKZ4kQajbvxxN0Unii0
ra232u8ns6/rC3XuDTWrFEggLThhVCoDCYhiAVdUdAS2UU2tpCnPThypkhs7
yjFG2S7S72UjpJF9zGBHKtJ93b7l1UUGAltt1f0bHYa8SbXWjOjGs5xwfKOa
ioDT1uDr68/L3qyRVWxroeupEPY4jNVwIvLE0HXd9djaVpYTKdW8Ax5Axaw9
xPRCkfKZW8zwEeONI+gKn4/7sKVcOfU6FZ4g5mkg7po4FyT23WG1LWocn0Rn
xZHXRNqyxKHavBlOb/5D/eCdXRXVItN5rZgipzBEee+T0+j3LvsjSvITfcQV
c3ec6jvVWngThQbdKFFxtZe9ETfgbukbZa4aLS6vwBA8gCOYPJbJJDAaLYji
h6sbzxuy7xgUCs5xeQk1UAFpABL3YyhxUShF2FiIjjhP6LOwLBoVsl10aklm
ZEteroeD4HbHD7i5ZXdolgDJvCWNUcbQ5cfsvZJy8AZvXU02885k1Z/OOwPd
C/lqOJetTHXW4vH2r+9UxBYSFc1e8b8OKuREglsUolabO5nxD/2OQeW5gZ5I
eLSnJOc2oR1ddopQ9g8w3LTdOXz10l7DugJRodaaw4N8OpU+9TQQoQJ679ea
sUBQytIiiAL38YcIxfAwt7i1W/N2s+p/89RCriSuJGYaugcpo+xQRKYwRiyv
p8xzPbChLqyykOB5hbjmtqi4uoyJonCFG67Ag9ijXjdjbLSgohr+4Y2b4cho
IVAdxGJr6r2p1hnsgAq4YlAqMVC2DkJ3an9bi2l0rCsit/CYebBUCLvgBUJ2
CsCYe1htijQkhCZQQSzmoKh2UFN7ITh3sY9vBnJmGPDDabYvxxWwhKKwvAyp
UN+5AJe9XOPgs9wyPl+ypFpntCqNmPEkbrGu4LPsQBfsH7544aJ5JqXZfyDE
9QuFG9FFoymBe/vOX2WT54ljzf1Rka5UtkMppHSPiyJMDkenXmjOM4Mcpbqd
2/veZs4Z24YKc0W4D8UgzXwd9xEzpJL2npi+nJXadGyonHMUKxlaGqvVtjfR
PNNo1YvWzVao0CZhqQUGwYgTXFgf3kBkaoGCkfrAp1o+cfxutlBkWq6M8kXi
U/ZhDLagol8sDmMdNhVPi+VezDgAFVicKM+9YVomMZSnb1huzPjxMVMvr1jS
OoER6YiqgtBy/eP15093H1XKLG6nM/DLwQxeBibpRpRq+cG9xj9njeog16kw
t0CHI5B3w6zISIc2kpS1Du4jdAVGR1I2OrWG2iqCHzS/Rvhsd1K1bqHVKrd8
nJCTcxycOjuhEueJFiYqZLIKOkQI8iMBFbXWABiJ8GzOzdsihHAcKApUonKb
x2eWE17jyPJypzN3DTm8mzt3XittlvAiilqXo9iMPrfHCVmxOFjVBcpUmkvN
kN6I9UAcn7r5f9Ls9qMsIn9d01wAUOEo9WowVs9e1EndmOfZZByBKDQ1YLBN
X0R6szaLdBYeZFhUo47bt0BFK6fuYn6MkeDcY2SlalEFU/c+d7RNb0Fo24UR
5RR6qvO2L4ZTrWWRr2K4cavvLBanqQJYrTl09RHIwR/3rAfjQR1HNdQCGKsE
DzSV8ag1nZcQfiq69/XljZ6kZk3sBEs80kVTMU4FT9S8LM/+1Zf/7sfu+35+
+3G4QkFoJLTdO6FcVrTmcjs7121guFk34tPDbU/mWYKDvUYrWlITO6fgtNWw
3Y2lSs/tR6wTTBSOSmIV1q0cFcw08V9I8DQWd1M7RyFFEVlldkJxqSAFKoDB
BXI+lfFCFpHOkvuGabkCo0YTYGgttVaXEBVgTCr1Ta8HBlwqxXfAFaBirbpY
31NQOajZZM32Gp4pV521UCmtVoM0uurrznMjyy6pQk8iUCVyM0D1vPjT69/e
L143Mko4cI4oolT1Xc9PAgZ4t2gCadhBSBtX9ZZ9BEZcDsbz3tBGj5RFE5xE
BCFDc9Duw4lQA9KoMBXAFYDBJAZpcCnQ4bgJbhMDg+M78CBQ2bkpr//ff/Mf
/surPwcV8dlWrFu171keXs7OCtONl8eHR/vRpSlVGS0WgsThQfL4mJN5qUkf
p4loH8rKxGjFlJpqvIbtrlRqnLjfxiOiD9VMy5HCjYkesZpQYCNaC8QJLkfu
hrWHpYVQUVfDA2aqJtNs2+pGKyPMuLxcBAiEEzQfudODNCCKcVlpbeCx6Wq6
0Io4BRUajCE8NDS1kIDlotsDFYSlAOPTamP20AKeXOqiBIwymcnCX7378dd3
H6vneZUjI91NFPnx4tv9/O2yOwcV7gzXvVkgqq25KSjm0UtazNp9TGwJasyw
zy/HrLJsuR7JOrXPrQezQIKsGe6gqU/VmmYJw8P+xfLV50SHc48BKgAb7wpd
1YaSq62ushOCRL1bbo/Lg16iPSz2YrJAk38dj6C0pOd07B84ySC/kEyV8wX7
DgtLk0bq7BRgaLXM0zPIxJTi2x/GSB9pOeJYpFRdFlrKOFp2dSRiDTjBHwwI
CXjVQqWOcFOPVtINaW5ijPU2i1EUy5dj+c0tezzyRtTWtfCmKxEcxONjCK4A
N4hEHQKj3kBaTJtdgDGu1O8n87eLNQHmOKaMLWGVUtVTTS87nc+bDcBgH1Tg
OHAfEAWeBYpgROVdfTsKQ0Bgpriu9ObljlLZ0VojbanQoxg5zKahoiRG5ORB
gvxFruS6Px4kMCC/Lw4pbenCneqEG6IX/rmatEHoipb+oposzuDfGjU7TpIb
Tv74FlfV7ZcvumO+XwPS4I9tKv07bfU4PuuO5Kr0hRIeiA15nLK+n6tH3OE0
BaLCczc8HcwzPqJ/e8+d2O7UtQdBcwKPnWcxS2imW0K9E9Hef+R+Xff2azoA
p52eoVXUU5FKRyvvWQnpWGnktJZXyhrDRR8YAwFpeen5FM5u7QBQCedSyog9
qnnN78NfaLXex0QuF1a1pzpOvEKIOm93AYMzGEBiHPMKufdXre6P92+ipN6G
FiAN/Mj1aCRgaJ6IusHVplWtmSvUvRmCU7bOFTtZdRcjDtEY1gzQSKiIujOZ
7ZDBnvboLdjYuY9wDXVPW/BdD5I3g8G01cB2k1Y73EFjG4pGDlzOMRYWCCZp
ODwxNuynsPhmOOc0/TDwEIwxrPBVLYCx6A41X7veW/cIdUcOQERBNX0cVAAn
/mms7N4Jl0IsIN3Pb36IxrwT84njkejVBxJHydOTRDRnSnJs+7o1p2NX7cL0
ymGm8C6pXbe/X6qSfnoC3sa9UbSdV6IFKxt0kTZLuPxRi1XshISdB2Eb/kUz
PTlYKMSyjYXIeVYcD3qxVjXcRu3MC1yYJbws526hJKWMIjABD6qUEcBGykud
e2KGAgGITtC0kbqmqEdDV69UipllJc+FH5YU9cSNr7RAZBWqbr9xwQvr2HcM
texGDb8GVlU/rda2qe8QEoTYd/P57WQCJOxiQp80IqfRcj7KwSOQmHUHLqz4
40ALbExbA4ARlNIQaWja1AivYb+z7A5VFGgOJlURCHiAJdjyy50Dd5mGGx9j
uXLqBk4pzKiIHW+Tmcf4fe5lhSeBFmCDTQWMs5OzU3kBvTxRUit5In+ROTjq
ZwpVrUhwZhUxaHUiFE0SubDl/DxxaDqlbXRnQV9agC5biBJDGqLg5a4xUknv
XMHOwo03rq5qCnA4Fx93N4JTBNuoraSHRICHdZ+r0XHjJVfe+Q2M64UZPUdg
GA17mkNUbdj68dmyJws4zTWKhT1H0afh1eMhEKSssWFC4DtxWwPNUKhGUrHu
1Zlgbw6CB4mcluYjcBAbgQ3VcSpVz59VQafcmLblSpygaOXrGNo6ENQ9li00
pEiDLpyUiPu96UxmOKMu3nMcSdT4NlXlFp3BtNEXThSW1v2v9JttNS3EPlhy
lHHg9v5Xr7TMUUwN2zGG2myCELaLHW35RE6EEJWtJ4Akom4if3FyVk+k/pvf
/K6fL4UuPTVLxFQg8QZDuYvE+W5hW+sNN/9z17tDb0sLnufrRWAiZ6UUVklh
iGZClfKWH7vApBHtc1wrFy4NDGc7hYeiMg/dYjGqJwV3xMEG7UKuF0kqr+aq
FVwrdXb8Uus0blNh8j5u9ouKieYfLTRpsUuYo4afspbyi0x1zwGyeowj/6B6
bnc4jnnu67ZWgl00O9DFZiBsABWlVtrdRXt0M7t0eoH7d9GeBKv3LsdLVy4g
CtewtgmosubMPkxnEiHhg5xCdyA2rmnYX0RFwMc1w44twNC23QMP8i/NjrZ8
qtHbf/Hck4URGNzvsLHnkWF9LZoalXRLAmcmo4FK/dhBMidoAytPByNOVamT
MxZp5wRlKpIphinCO2rxOk8++guV2r08iBRCoQAq2FFiqqpFFEuJNNeZ379t
ecqo5V5rNcei98DAoQoocnFEbxW0mLMmAMY6e36sjIc5JPJOeT8pwGQibOTz
djFe9QijO9eh7j71+9UkRaKw4mcKGBIMnzmpttad4bytCt0uOgAS3K0MgBEg
Uc2OkzXLQNPnR/BGUEdPOrDZ5kbGgsNQCI++QHJx2QMeTVk2WiCgeoZcSVHz
Xwip+tsVG+pIiMe0lUjjZrJedsZXo+Xd4tJRqr6nTmDSVYEgCjGgYthoGxg+
HpMB9+KWl4BslEq72aMSnwGPKHkcepV+dVMootTA6IVMmuPse5EoBlqR78mk
lbqMNIXaxcv5HEOOhujj9My6Yld23K6x+djzH23/22a8ejS0OE+lAoQeHqTw
U5XrQs719IZTnbG/VXe1uhfvdR5DJFBWqkGSoFz2snuaAlCFPZR/iGXh1ayL
mOScYaH22OHZcOJL0w/VASgRYi/DCX5gBMNncu+rH6yCjUbDbfZJsQaGfpyu
osy8eUMzo9uKjDaDUYBkuGgOvM4bXzKPPAPM0y81L4crTIngjCxlwy1VsIQf
nnI9XaqkUq7GPKmmVGW55YDU0cf1eAX/mDQACcdH1Q5fi/UR5EBC+rPZhTH4
QqGi3QMeUISmBb14jt0ZgAQkHEUM4iw3rh8r4ywEjOi88tQ/IAEeOCiEaOHl
U00RTaaIMmx0cBKpjLwm/pwTnJzHFGONxwUV09tzMl7fT+6DGETQim6KnWDw
gt6R+i65F2VbSi5uPQiQYAs5gAeuPLeh1y7gckleFrdSgXHRbm663ErlZj5n
1RFt2zm4QmjJFRGQXg5Lho5sOTfj9XBiOdHJFpCjKqGWa/N6y48GYLv1I83O
3WCGiaOwVTNdIxvgCrb8Kv5F9enFuqC4DCXeuyPg9Hq+uuyO17GuwrIx0AoM
2LHSBiq9YsPBZmQ4626HwIIRODQRnBYMQGIrIWpyAcJGrTtvDUPJtLxOlL0G
ItZKQ2EOPNbqeZYuXzXvDd17o8j0ULri9PjkJPDAjtUmN7W5wmRilxEC8tjc
Aio8tQefAjB4q1OreWJgrDsqGLilH1xxgvNU0U2xXQFm9xgFTeCNYgc7kWNR
VdS1sMfOCvUlvt7cc0F23ZsxyTrv0QqX4TrIo/YTV2xREe0W7N8OBuuYZrid
PhBTPOCfQaViDxITTqUZQk9WEABX46mWCq+3WumcFv4N5sEFaIJzswMSwINX
c70fTr+/uFvUhQEuuPMPGAtaUNa9uW3BipmwnVV7NCx2bgebu9Fi09FKj9fd
4W1/uq4PGKt6d1Hvz2s94MHdHSnrtlki2mPqTltJcDY0RwbYRxeBpkrZNYgB
AgOSl/oNffZHka+w4+AlAjXSF+oC0rvQXafP2N97eXJ8CCoOI/Q4ipUoLCnN
FU5rGwPih6MjPX8tgZA4zaWSIMRuhX0AoFbtZDK8RhJIQBEGSeQikl6SWi1n
MXmKv8jtW49z8NNwRbSfVW10FTsi4nDiop0btbJD1SULea/j3YxzfGYvKqdw
BUMNWiEvtVJWtcFNzY3P/Q4whhFTqDs3lxuWS6MK/gVgFDjI1svC4x3cE66O
C+BRb6prrlj5fHWrl1V1da7aPVfcuMEZt32tEH7V7l62h1e9CYLBE5ocfSy7
Wm8Hu7gvaBBhzrQ8/Lvf/6uv198uu9P3q4uAhJaMvulNLtt9OOeqM1q3RrO6
sg3ORLnM/ZhhECq4mEZF0Jpk5MRSodFZj6acgzK5nq4JRVfdCUIFZ2Q9ad+x
6o93kPAOHoRxsP8KVBzGYjVsX718Dnu49c4D0ijnCz6iTIX6cnErKRACUQAA
L+SuyOI8EUVS9U6cB5ZickdmW+ZIP65LmcxejeedaGYrJTNOim5LYLmcdQVY
ajzWzZ3fLp8X/vTDP/v28Ht2MDpXyQvvW05AJqYUR52ROKp5MrJcgNtv6mq3
GNfrW0dTLC5a9Y8Xi0Epj8DQo6li7QILS4ZW6WyhFYkxxTmgAgyAGU5QhtxE
EajwYmuX7e7DaPJxecFdfzOdIxhc2XcODQmBABAwmm0cBxS0bk7fzd7fjq6W
rb4eVdMd+0FXQIKdt9P1m8kKbwIqFNpU248ZJxRF1910qM3ASQ1O+PH+zZvF
xc10idFn7aFbeuQRmn38CEPRaL0HMIwKMwaoMJlYZtinMEBF8ICKpPCGp5bD
5E5m7qqlDASDZvS43e7sVFFnOBR360lYJlOEJjF3OOVFsQoRfnp2+W7hei3Y
ksw2U5pm7nVuvT4DXMG/66mmnlTI1rYObKAwm818I9qx8lrNOytF0akoGBk2
ml3F+2U/SsZVJxvFeLifLhB1yhVUdbATZwZdqKNGN28EGspLtJqunLrJcxzz
lwGM12x3C2isqNa76o9gfsbtSEs4Xg+Geo5ALP267g9BhTIkjdZj1Nl3OWbV
G/BL+D23w/nb+RWEz7+iL+lPgQF40Aqxs837+cXb+QW0s2wNLRRDXXR3HREq
lyBim70IJ9vq1am15rJvn2GNsYzVG0Lc9j3sMgwA8HAxmqGEhYpG52qy8Lsc
1/zivZfQBF4AVZBKJiIRoRJYKMyopJ8cOQJ1oNGu1pOPKU2sj6HjGY5/aKeJ
fpuEH/QZU0e1av1uPX/PoZ72x17IRcvbCgx5T65nRCCTb1UqzmVF/1X+H3oT
js+6XA1NH8NxAIl2uWhgePaQ1japaqFF60xJzWjNMk5UyMgX/CBUt+lidE1L
Z79ajeU3UQtIQbVs8SUjwUbZUS3m2Wzy7vVgAAwY98Mx/MD2qj94mM4esPV4
Bg9c9kcMrRcdsa1zaBF49kAFQiUC0u7FcOrFxhGo1/3p3YCvmr9bXG7aw5/v
3vzZx2/309WqLZO5uMPWtTMzhjUnqIjZSSaBjpUDdmeAk0nExeKoRzAIM62B
tCXBUUBl3R9vBhOiV77B8gM8vHr1Sj2ZISRUIT2RktxlvyOTKRXhKokXSAQM
xCbFbO5xEZLtRDCjwvCIpKXUpilC65MQ99VbfoxULEGvfAXWrxeLqmjE7Da3
00tgFIvTThe3AgPsJhK6s6Jhm4a0sKPRLICYLQJIcB/DCANjLkDTSAAV3ncu
qxUBi1ctcPYSh4KMxOgQRSyJQ0AaySs9j6bqJU34Hj2NaDR6u1jcjQWGt5Pp
p+X643L9ejzlCHQRS79OoAJkzKY7ABvOSCAt/hCNdgdaTbo3QByCVd69HS8e
JivAACTux8v3yyscCkRBhOJ0RxRKIqMeLGGNoUx1o+1Y0tGo4xH5jkd3YHj4
pXjA2OgMcS4wg1HxMFuDPVyMfA0RSqMT08H2z05OX714ube3tyugH77aMyGE
ujiIuHW74hnD03/c3R1N3ScujrsF1JDYtunGXACHG+gHfkwtW3CW2wuVD1pa
aAVUeH69FtjMFRolEFIEG/IREYBYgno43GhHwmqHB0a/Vu+5FysK6Pbpvj2B
0KTVjhXVJDYcgMSTDYsYPeyufehiKWC0Lnu9y4GW0kKB9KsSKpqhVm9dDYf3
k8m7+fzNZPYGYAyGbyezD/Plx9XqzXyhdeMHQ3jjzXwFNkAIADAkQlf0GRdD
MQnb68mMl+FTRhgFABCcflzfgIoPq2v2wcnVYLqMfIJWJ+5NLAkcPI5bfVBh
SLiQYSXpcBjpaCpwiGG/gKfgC2GG5WBsecmXc/B6OLvojYmJNv3ZKpyIA08i
0uzhYfGY/+J5DV4O8Vjlb1dFGZDDbn2S/6hBV9FHZK137f3OZj+uZZRxakIH
Y9K6xQaoaJargYdi5K+yXqKZETPoS/gRUwTm9jwIMOAcJiAJunCGs8JQvwF+
v9HsuYDe1CK97sLCIqACSAhFhVIUKeRHvPQ3iiJ8hFwJ0mLd7cRz65qbHvd1
R7VsQpVwIngE7H43Hn+7vgYVD8PRn75+8362ABXfX16+ns1CV0hjfLq4vumN
3i03Wsux2fEi0s5pA1HAEBWQDj8SvOEgwjSLTXdy2Z/cTZbYbtXsY6l5Q5SO
ldeDyfV06WYJtbK3BygKJyQ96TKIouvowyhCSS4DGw43YAk07f1kzj9houAE
dAUgCUgM1h0wPHEYu7+/72fGvW4P/vzh3fHzFyKHKG3ElLEjPy/Ma2buhGUk
qLMmgXjMR3rXoLuzuBWmFqsplnUkl9+2T7DNxuMMcoVRp+c14ryeW2iMfNAF
BwuWFurlFhVUd4xhfmgUcs1iXvAIVHBxuAJairNWV199Q72aBIxXnZ66cMsV
tehUKztf4CpqPHSmamkBMHAZq45WYhQkWk3FJsEVIEe9Or0eiuJhOt0+w242
+3Z5xYA04Ao8C0TxfrV6u1iiORGQxJsf1pdgCXDCWl6Th2uOzNDyjz2VqKZt
GZHI8WIwJ3gk4kBjYKab0fzjxS3CYxLpJvfn7CKIf4gB6wpXwB1BiAR6o9C3
A+AkRaHYp4uHIlQBcogKcwXv8qs4TXFQZ8zwL0RDEoY40NBSJNEI4eYKDKQl
lGNRne0CNScJr4/qCcUmDTfzezGr9NFx/izB7awlSWO5FVOH1ifJZI0TrTEe
CNk+/STIwUv8QR1QBOKT/X6zbcEAGCwtnAN3Cst0sXUlkEalqqd8DibhQUQL
aBJChrvB6M8/fNIEn0p5l9Z2ndQJDVCh55/WAEmZ7TjWWpzGKigLSU31+M1i
psDjaGP9T+s1jAE23i8Wn5YrOZTpFLQgLdi+X63xIMSnzk3JlQwhAdyE3LoN
5zua33wxnojhG/1FEDjwkPkGk89X95ejmVu2QLvVQngEFAK3f8/hp7UlfkSp
BvA2mDye1oMH5vFZuw/FGk0NYMAd5K+Ff4SZ1pB/F2LBfYAQRiGK4LEe79F2
4tjevte52j3rCrtrsaN4fEOnWNV69Zlc8vh4W/BKbKcS55N6hB+WupzOvByc
ja6VlwBIcvv0BCyeUxDqVWEJQ/4ADNfIQlQgEprR9FhuRSFspyjMHuxHn5Im
g/TsGorVWUcyYN5VH28sZ1F378Qgpn1FsaDmJXwNCbt1iwr1SwRpBG94OkZ5
UFNJResutto/Pbz2gq7EIPejEerix9vrd/MpCPnx9vbTevnlYv15swEeb6dz
48HJcHgDukBj3I1n04CEUWG/v+wPsMWyM8Y0696UHchhFXe6Bzzv8OEx1zQO
PHQjlOj5q8DGVkIgLB8TmPYd7uzS93Qn0ZMWYqPTt/Bgy1fxj4JJOzIrDUTF
6b4WOosV8DSZVCVUzTE/3k0J9NCjGc6TrXzZT31VNBqlT2FDGuPUjwTyDGJN
3C6WrSpj5fZMXmsnJv28FU3Ei/Jor9Fg6xzFI2Pko2C6bZ6xbFBkEaMV04Ls
NZAQUhGVqueDeAdPPW5KVExr7c1gxI56ZR/bsYIZGttMeKQc1blXr5suIltV
2T3xUAFLteJ1cjQ1NZZyxbPcDLn9h3fD/pvpGDB8vwEV1+x8u7784er680rx
CBhYtbrAQM8oGaPlhgQsHzdXKphGysj3L5yAK7FnARKL5gAhMYtI4Wa6XD1m
D2xxq4V5Z+QUpdJT4SA4aOVgl2HLGkXbpHerh2gx5LA+b/ERPng5ngeTDHSw
JaLgg/wYDlptRl/3gRopj87cdsVLr2K0ndpzdKynNOpB1Zr6oSdDqZnqzHM6
+KCTV37ip6YEprOdWsOL9psixDzxjIxKQa2/WsMnOOSRLrYLzEZBRGwAWqwt
JRtKZRt9EFGG4TFqthjNfMEBwqM7aDjvDQmshyP3eBsVgIQdjm9XNqjW/TCR
nQeBLhyoztvti+FQSqOmGWdvlot4NJWemIz7+NX9W/mL8fjtbAI//HBz9eXi
ArX58+0dGoP9D+sNocq71QWouAyWIJpgq2cmujzR6OAdbD7ZlDu93lGXVJNI
ZGJdIZC0R7YU6mKXX9q5D1DBCeqqCuFhLFkkOCtl7Ck14YAUu6Nb2sNtISyI
Yt7ZOg59sC3K4iDj8NXLarnW70zTp8l+q+4eGy1XEjJjtyJiuI9TrKCW3dME
5nZBHIXgZhsLyyABRZTTft+hh12JsxDA5nE9ye2agbEoR8FZzWoG6VjH5cUU
zqLr41vvEH4EitimtWPHmQpQIdPXG257i3UU1ec2ChpxMX2XvzIPGBWGULxV
86PVw9GUnNmYRVYTkakIotkkTiRghCIIMX68e/dmsvh6dQEkPiznXy823y4v
fri6hDR+dXf7abl4P1++mW1ux8QUI9zH69kcaWHGwF6rEP+Mu/labNDu4Pgg
DSGhoxrKw4hvuAAV6M9lNNe5yPWYmxpFvhoq2CaxF4/JKE9U1FcNp/MgCtOC
AxCd1kRIrCPIHX19eGfIbSHRGfBBXl6N53xcfd2JVPY8d3agfv5KvlzOF/7w
aI9IULhdardgEe82qzX1VmWypXiqTjLq5tYhEYOk7CCwPrB02srexGsyOzXB
ZzniZQc8gRSvgZyIZUO2jRM7BxEPEmq4MmJUWGrad4AKi4Gb6XxbMI2DfSe1
YoFWH/dETu/Ypzj6mFQbPie6goUTrfvdbHqdnF+/+fJnH38kxLifTN8tLj+s
rj9vVt9fboAEePjp5pqdn29vfrq5/en66uvF1cNUUSpqHysrBTqZwx6gIp5J
MbDJFmFB4tN5t3ehZ5/Nbgazu87kw2B52x6jPN1AhcWhep8f8BhacGJiq8Ro
3ena7uaf29lqC5XHlIWFynowu19eKe4YTIhxroezh9maHX7G5jEYuZ4s4LGj
w30kgdauOdj3tB09l/Zwm8PczeLZLUfwD5fgdh+FequisUqrtQd+3DyjlShS
qXmv7wSFF5j1g3UUj+QL1WJJT1zKFuQIpCS3S37JucTMYga3kjNUJgeDwdhw
1trVc0zpvKVJwGjhIBd8NRhCJpejiblCFNFoSnhEAsGJ6CiN1f1oVChiFkUx
retbr6kFotfjZtf9PhpBF7/7+OXz5Q1xB9EoAcifvn4DP4CNv/z08ct68/3m
4uNCUQnuBq9x1YcuxoQktxMltT4uL94u1mrPe0xqYQis4MTmRWf0ZXjxzz/8
5vcP3+Q+uhOYYVfZ3HkQoAJmgAREwTm+5YW0kKkYVxh4VKcWJMDAJRLE6jxo
AUjsQuC7yZIt5MaAKBjKWO4dnuwBg+OYGAhC/DzBI03qOTjWJMFYv8hpTzfj
FbM5d2tDFJrckTjv1pt4BBdKYAniEa+GJ/0ZyyRadm6TEvmCP+uVW4gmdotN
eZFJTx6sR8LKTTXOUbggsvMd26n9pW2p1AhRaii0B5QyDABEflKQUDap3Vn0
+p/u7pUoCM/ihxCh+lQcb7XQljHHsLFoNdlequShfCbjNkIP7n3CT6TFh+WS
8ev7hy/rFePjYvmru3uA8XVz82l1iZcBDGiMN/PFw3RxP5uBq9+9+/T99Z0y
GF2kJmEgqnKuf7rZxy7LxuBXy4e//93f/OP3v76ZrMODTMwSGNfRhMMQKYQo
jssfgYTONqi0R3BAat9h8bDtq2kjY+QmIAR4DGBc9pU3E6fFgGSAKE7kcO9Z
8sX597e/qRU6Jy/20Fdnh3teTVfTvhCWST2FVsmryGVtWzTV470thRgemNtZ
rABG2qvh8UG126XSXoXA6U2pzWwO91Evaym/WK1FnXhWm14XQg9S92o2wQzK
TqAQwoOMW+0tToIQiDFvZwsMbd4QACJiRZ9sxhNYqB8dF85iqV7Z7Snt2emK
XhrNaL1uepIyACDKQBUQbL6Zz1eqmTa508HA/VQsoRzFbP56NvuwWb6dzSIm
vf7x+gqd+fXi8sfrGwSG6eL9bM4OIcmn1QZi0SMyJ5OH+RyZgcB4mC1xGS6L
gBB+DD/sWtWT1ZvR+i/e/vTt8t3lcCEnMpjZvrtap0LaWG8WSEgfdnW/wzNe
nc9EYXpxmWP3QTugi9ECo3MOYAAVBoP2JwslOYMo+CqFos9P1r3rfLIMP5QS
aRU1TrXYyO6ZUJ4YaOtHH0XSi2QaHlotUze+2vjdmuvFM9vVarRta1oxFmm6
1apAZFvYPtIiFrSP+blFJbeLZTsRtljTOQpDQms7+PEckbtwGnw11F8N1XuJ
9a3GiPCE7ajZAVpAYhizh6QWqvVvr9+CCrFEJD9tGte7b0bT8BSjH+7uP19e
XsSKrJtO5244JNyAGWAJUKHE5mwmBzEYEXf85s0DGPi0XH9ZXxCAgBD2f76+
+zS+fj+4+Dy/AGPvVxdwxfVoBDAu+yOXxq7iAVjKc3ZEGjg4h6h3kzXj3erm
erwCGM5ObCIGWUXMOHOWMlDBceTEl+uHf/zlJ4elyyhtGEUOP/8j0ridX6BS
DAAxxnguchhMnWYHJ9YYunmT2cJZTksYRf3r9OTIS3DvljLzeqpu1faaun50
lGf6+IEv2eR5dN140f5zBaqpZDGrgLRV0APuPXdYqMjmHW7gdFqVWqzAUI5W
itJuOFW1ExLKY1caroU5DNlmtPIqhXRK245N29p5Lc+H6qqzVyMCDU/MaW1G
49eb9bTdWnS479p+JK6eUNYdXPT78ZTk0dVwcD0YaPmC+fym338YTd4u8Ahz
Bkc+ry+IT79d3SAt0JY/XT/89U+/++nq9lc3d0DiH7/59b/5i3/7b//p//Z1
huRYQS9fb25uxmM5o8DDdRTOYIyf33z8evsGRcr9voz8M3cxeHhYXOFBGG9W
N/iRi0dUQB3L8BRyHOqtksJEjbydrh073C82Tjg46e2tCyKPsc8ULL2/ugMM
7y5urC3517+/ef1mceEqDL4s+iJOY232w91S20puCwCnWoc5Hgx0cnwYMziy
6uyVwDh2K6YWUE0lcyllLUo5CQZrThRFlMwASSqMqKxFLANYAAlKZiIYyuVY
kLm4XV1814FZKGqF1QKyQetqNkolByNOZ1ljeGUYASafAxi9Gg5CRbGYllvn
paWmFglpNPEvbFeDvmRku7Xs966mE5U2mk0wgJ6UvcZjgg5eAgw0AGx/1e8z
bgd6DvL9SFoCYLxbLgHGl4uL39y/eztefNncflvf/eby4X/41e//4s2nP3/7
/qerm19ff/+3P/zLf/nbv//5+uOPt7ffX998vLi+nSmjhfi87A1VeEVpTFe3
wzlbiEItfL3RzlmAh9vpBjxcjZb380u2JgdUAV4jMlHiAd/vGFewiYgGg75b
XYA6vKrIZziK520NIl3GR2ZX4SmEhHAWjBCZMz4CHjgOXXDk+NUrWf/w0E8m
9aK77uMVYII9PHk8pIUWSh0Wi4taLe+Ve88TRoua/1PJmAuWjAd9+nGfWT8t
0cuLuSnL1ZBy1s+9KjSLDkvzjfI2cwXnR6u/mjN/eP/BzOBAY+dBXAexg+hV
G9NOd9JSzSKSk1ooBkgAhpmOt9nqmVPtNgNIAAzg4UeHzNVd0wYJoAKSBxUg
hB0R/mgEKpAHeBBQ8cPd3U8PD6aLj5vNx9Xi43j+L//yv/27X//T//Nv/uaf
v3/969uHH69v//Tu3a9v3nxZXH5bE6je/er+9c+v34AlWOJuMn89X71ZEAwi
VBZY4e3yMsTeOH6egOF8I3QBKtgqDInskxaujwEGnFgAFRaHtjIHARjMw42P
ib/ePgA2fJNL9pyzba2ZLByA3EyX5hZ+TEgaYYOfxJYj4EFrs8daZ7vZYZ42
jvm0DHs8jjYnpaEGfjzORVsVotThkZ72klJLfzlXsuxUi2/ozMhVChiOKfQ8
yshx+fG7fJATKnrOdX3S7jhBUSvmYknhkBOPA6XqI+q7U7m8vi2KRS5L7NEU
WpTbVOZTqUhuc83ZCWeBwndaGyf+sFyuej2np2btJkMgabehCCDBuJtObydj
vL9yC11lttGTUox4gckEMBgVMAaoQF28ncw+L29/e/v2rz+8+/Pryx8vr4lS
f/Pw+ufb+x+ubvAsn5eXXy+vP27QFbOvl/dv5xcEC9zFqAsuvsLAnqrYbiPH
BdzN1xZ7ETaOQcWn6zd4E3HFILh9uny7uQYDnMn5DOcZdNdHjAkw3q2uQkPq
O0EFUAQVfzgtvh9/ASBxGbwLBoxY7wNaXBs8cH50tF0p0asux9PigMTZSQJv
oZXYDzStOHl6lD5TLqJwdJQ70WpI0Vpzljw/y/l5QOmMJn3ErEAvu625orGY
mBY3jnL5toczt330HooUJpm2Ft8//OSaqWePYn0HmFEQUbzpBbTVvx3uw6Sh
6litPCzVV43FrDYeVGrc4whyYkx3Xrn3yeNiiBJD4DUnzTpj2mqAEAsJ8IDX
4LPICbiCg5GwEhLAA7riutcjGCFCYQseBInF4u1iidT88eryh5sbOOFXt28+
zi+RHB8Wmx8u7xhfNkLF+9UawflxeaEns7dVEnUSO3pdlITkdsaIr1eXGH0d
GoC33oS0QHDKm4xFLA+zNSa7jdqKdQJbcf5k8XquWx6wOTfF1jIDuoAHgIdd
xsPygpNhGM4xLfhd/nWBZ4i8GQIJBlzhJm0viakVEaPfpt/on0pwJutH1eva
u8pZVdMDzxK5s+NxMd9MJiEBACNdenoGHgyMmPGRtOuPp7XqARblcz1Ry6jA
a2B6RAUj6ukZXk6ay4fVB3wKEsLpCDfPsBMLfKlBFxfpKMNduwQpj8029Xaq
9ff/9f/ymzd/pjJHvaaFsPSwGC1m4ogDVxJxR3Pdl7QY1avLXud6Ol7EUr3A
gC0ByOfra7ABJOCKayWsRpHiHqE52b8bTzxQj/eTKcHFx8USgcH4dn0NFXy5
fHvXX9wMVqtm/91sAR4kRyNt9WG9uZ+gOe8/bK6UnYiwEb/w+eIB67xbbj6s
5Uq4i4ExFmR82Nxw5NPl3eer+0hCLl2UZwcAYF/wY28CP3DjywXMFgAswCCo
mBZgS7DBETUBLi9wGXIc0xW+zG2EnOBeU16iSdjyT1hU6AkgkaNwo6Yb8xKn
56n900V69X//6/8wKsxSZ8ccyZ2d4EFGBT3n6N3tu+V4qrkej1PLEZDwAxIR
YOB02FcckctjU+Wm8kXijna13m226uUKo9foaKk3ZGNK4jN6OQhRi1YXwQkV
uw/MqgCz2bLjiO6scCK12mZwue5czRrTWFnRzZZqxDIqEBXOTiAnAIarG0PU
aa2yDHkJJOCKy9Ho2/39x8tLJSFHozcogfFYpGGNEdkGUcpk+ma+eD2eflis
IArwIPBwWh8eXmoB1cHqboSLufp2dfft6uHnu3dfr1/z8i2m31xx/TVjSNGB
qlGfNvcfFpfvRgt0yOvZMkSCmsOxuPkBnQAqRDWbK04gwr0bzz5e3OJH7A6w
KQRyH4qFfW58PmuiYAs2lAmZLBggAbYxV8gZgQfQNVvyEb4BPLC/Uz7uxFYy
82j7+NrtXOOT47NTrXyVP84WT6qpk/NUMpHXQxxS6cODSioZOqFwRcRcLEla
pNLRZV13ewyjeJ7czQj20jQojV0vlh+V2Km1tk9P44R8plaST2lVlLBihN1j
8cDHeWGzbq9V/ENXnuGhlX+Uqoo5QQ0nq5UXUm7qUXOy9VMs9by5WJQAbGwG
iHP5CyzOuJdfWMIGWjltNIJDFCwEe6w67U2vGxJ0rD7eyfTtbKbtVEmtd2v5
Ym5tPMLVYK7Gy7V6LX68efir73/+889f70LIyYNP59ytxIZ3i0sMtOmOOPl3
bz7+6vo1lAKo3q/t7pfB8AsAhhrhrS9Xt99uH0Q7q2ugwl1vdYEdQeznyyvu
cex7N19y0EyCP5KTCurY+SCwwfhyeQ/A5LbA0mgqzM+WfINxwtCk0bMzTwPx
qolensKPo90ut+s8pxIUZzAAYjJ1elROJ2PpknS9yA3bcH3Tvf3xcHA/7zvj
FRExK0e0dGp0Y1YK+XiKQWXQGHewarFUL2vUSmVQAU4Ahk3vGVLt6Ocft9rW
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
5lJP8ymwRC0U3EsmxBVSm/8L9eTCPw==
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{3.7643360098461857`*^9, 3.7643490360166845`*^9, 
  3.7643491429263563`*^9, 3.764349445524665*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"42da2733-0e0c-4712-8515-4187436180cf"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.762816695245718*^9, 3.7628166952517185`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 15580, 334, 1169, "Input",ExpressionUUID->"9f1bdff3-9970-414a-8286-e19159d1c708"],
Cell[16163, 358, 756, 12, 52, "Output",ExpressionUUID->"2c043a2d-3dd1-4e89-9eea-4050bb261767"],
Cell[16922, 372, 396, 9, 22, "Print",ExpressionUUID->"5dfe0390-f1a6-445a-af04-44778c7ce5e9"],
Cell[17321, 383, 12257, 308, 180, "Output",ExpressionUUID->"7874bb2f-55e2-4cd6-a354-69b21b67f402"],
Cell[29581, 693, 7531, 200, 98, "Output",ExpressionUUID->"f32bbe5d-5b5a-49d9-9827-419cde2380ee"],
Cell[37115, 895, 73527, 1209, 195, "Output",ExpressionUUID->"42da2733-0e0c-4712-8515-4187436180cf"]
}, Open  ]],
Cell[110657, 2107, 173, 2, 28, "Input",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    125636,       2469]
NotebookOptionsPosition[    124326,       2444]
NotebookOutlinePosition[    124667,       2459]
CellTagsIndexPosition[    124624,       2456]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\Edits\\\\IMG_1739-3.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fileImport", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<compressed size is \>\"", ",", " ", 
    RowBox[{"Length", "[", "fileImport", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "16"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", "32"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockFactor", " ", "=", " ", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"fileImport", "[", 
       RowBox[{"[", 
        RowBox[{"33", ";;", "40"}], "]"}], "]"}], ",", "2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"decodedArr", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"mSize", ",", "nSize", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvertToInt", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateDecodedArr", "[", 
    RowBox[{
    "blockNumberR_Integer", ",", " ", "blockNumberC_Integer", ",", " ", 
     "blockData_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "m"}], " ", "\[LessEqual]", " ", "mSize"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "n"}], " ", "\[LessEqual]", " ", "nSize"}]}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"decodedArr", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", 
                "blockFactor"}], "+", "m"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", 
               "blockFactor"}], "+", "n"}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ")"}], ","}], 
        "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", "1", ",", "blockFactor"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "blockFactor"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "decodedArr", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockNumberR", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "41"}], ",", " ", 
     RowBox[{
      RowBox[{"i", " ", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "fileImport", "]"}]}], " ", "&&", 
      RowBox[{"blockNumberC", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], " ", "&&", " ", 
      RowBox[{"blockNumberR", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"mSize", "/", "blockFactor"}], "]"}]}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockDefEnd", " ", "=", " ", 
        RowBox[{"i", "+", "3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"blockDef", " ", "=", " ", 
        RowBox[{"FromDigits", "[", 
         RowBox[{
          RowBox[{"fileImport", "[", 
           RowBox[{"[", 
            RowBox[{"i", ";;", "blockDefEnd"}], "]"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "+=", "4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], "  ", 
          ">", "nSize"}], ",", " ", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"blockEnd", " ", "=", 
            RowBox[{"i", " ", "+", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"nSize", ",", "blockFactor"}], "]"}], "*", 
               "blockFactor", "*", "3", "*", "blockDef"}], ")"}], " ", "-", 
             "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"block", " ", "=", " ", 
            RowBox[{"ArrayReshape", "[", 
             RowBox[{
              RowBox[{"fileImport", "[", 
               RowBox[{"[", 
                RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"blockFactor", ",", " ", 
                RowBox[{"Mod", "[", 
                 RowBox[{"nSize", ",", "blockFactor"}], "]"}], ",", "3", ",", 
                "blockDef"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
          ")"}], "\[IndentingNewLine]", ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"blockEnd", " ", "=", " ", 
            RowBox[{"i", " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"blockFactor", "^", "2"}], ")"}], "*", "3", "*", 
              "blockDef"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"block", " ", "=", " ", 
            RowBox[{"ArrayReshape", "[", 
             RowBox[{
              RowBox[{"fileImport", "[", 
               RowBox[{"[", 
                RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "blockFactor", ",", "blockFactor", ",", "3", ",", "blockDef"}],
                "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"i", "=", " ", "blockEnd"}], ";", "\[IndentingNewLine]", 
       RowBox[{"block", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"ConvertToInt", ",", " ", "block", ",", " ", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"UpdateDecodedArr", "[", 
        RowBox[{"blockNumberR", ",", "blockNumberC", ",", "block"}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], " ", ">",
           " ", "nSize"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"blockNumberR", " ", "++"}], ";", " ", 
           RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], ")"}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", "blockNumberR", ")"}], "*", "blockFactor"}], " ", 
            ">", " ", "mSize"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{"do", " ", "what", "??"}], "*)"}], ",", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"blockNumberC", "++"}], ";"}], ")"}]}], "]"}]}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"decodedArr", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"image1", " ", "=", " ", 
  RowBox[{"image2", "-", " ", "decodedArr"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Image", "[", 
   RowBox[{"image1", ",", " ", "\"\<Byte\>\"", ",", 
    RowBox[{"ColorSpace", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.761915909234584*^9, 3.761915945225686*^9}, {
   3.761915976074218*^9, 3.761916041505572*^9}, 3.7619161536818895`*^9, {
   3.7619161868020067`*^9, 3.761916189881773*^9}, {3.761916324010002*^9, 
   3.7619163258738403`*^9}, {3.761916434394074*^9, 3.761916471002392*^9}, {
   3.761916520418024*^9, 3.761916630994892*^9}, {3.761916672459764*^9, 
   3.7619166797950573`*^9}, {3.761916753099653*^9, 3.7619167567879405`*^9}, {
   3.7619167874662952`*^9, 3.761916801777837*^9}, {3.7619168364229546`*^9, 
   3.7619168432048225`*^9}, {3.761917188715124*^9, 3.761917211860736*^9}, {
   3.761917344117229*^9, 3.7619173701786556`*^9}, {3.7620352280630207`*^9, 
   3.762035285142975*^9}, {3.7620353446814604`*^9, 3.7620353456319427`*^9}, {
   3.7620353866643996`*^9, 3.7620353881419015`*^9}, {3.7620355510170765`*^9, 
   3.7620355515436363`*^9}, {3.762035724264174*^9, 3.762035724614146*^9}, {
   3.762035764512288*^9, 3.7620357660541663`*^9}, {3.762035805736526*^9, 
   3.762035806270074*^9}, {3.762035986880591*^9, 3.762036056895671*^9}, {
   3.762036124368055*^9, 3.762036215446495*^9}, {3.762036246975264*^9, 
   3.7620363330475993`*^9}, {3.7620363657593937`*^9, 
   3.7620364217189245`*^9}, {3.762036583103812*^9, 3.7620366863598256`*^9}, {
   3.7620367423362026`*^9, 3.762036766847391*^9}, {3.762036836367826*^9, 
   3.762036836952262*^9}, {3.762036886918659*^9, 3.7620369153772745`*^9}, {
   3.7620369512000084`*^9, 3.7620369543116636`*^9}, {3.7620369943112416`*^9, 
   3.7620370233759255`*^9}, {3.762037054230365*^9, 3.7620370794389668`*^9}, 
   3.7620371548961034`*^9, {3.762037245494923*^9, 3.762037360324458*^9}, {
   3.7620897637853975`*^9, 3.7620898289164324`*^9}, {3.762089862061322*^9, 
   3.762089973326563*^9}, {3.762090206984684*^9, 3.762090304951667*^9}, {
   3.7620903416354294`*^9, 3.7620906480959744`*^9}, {3.7620907091070805`*^9, 
   3.7620907613034477`*^9}, 3.7628008266824484`*^9, {3.762800876177598*^9, 
   3.762800898995886*^9}, {3.762802884495431*^9, 3.762802925898389*^9}, {
   3.7628029950179358`*^9, 3.7628029993932285`*^9}, {3.762803052406331*^9, 
   3.7628030774090014`*^9}, {3.7628031178827963`*^9, 3.762803126529443*^9}, {
   3.7628031738346233`*^9, 3.762803187161753*^9}, 3.7628032655997863`*^9, {
   3.7628033035001583`*^9, 3.762803303659605*^9}, {3.762803373963948*^9, 
   3.762803388705331*^9}, {3.762803625077796*^9, 3.762803664688888*^9}, {
   3.7628037211420584`*^9, 3.7628037650742807`*^9}, {3.7628038362099724`*^9, 
   3.762803889082398*^9}, {3.762803941604073*^9, 3.7628039451665754`*^9}, {
   3.762803978104051*^9, 3.7628039902292414`*^9}, {3.762804031897544*^9, 
   3.762804232426301*^9}, {3.7628042772139997`*^9, 3.762804307706689*^9}, {
   3.762804339912141*^9, 3.7628043426846924`*^9}, {3.762804383156049*^9, 
   3.762804385176282*^9}, {3.7628044857509584`*^9, 3.762804521421652*^9}, {
   3.762804955295542*^9, 3.7628049554550805`*^9}, {3.762805100886068*^9, 
   3.762805120883278*^9}, {3.762805260548588*^9, 3.7628053265073967`*^9}, {
   3.762805419571955*^9, 3.762805446238001*^9}, {3.7628055710172477`*^9, 
   3.7628055803191476`*^9}, {3.7628135718098965`*^9, 3.762813575263863*^9}, {
   3.76281361696049*^9, 3.762813626885763*^9}, {3.7628136973731203`*^9, 
   3.7628137222003365`*^9}, {3.7628137572732844`*^9, 
   3.7628137593432317`*^9}, {3.762813852176456*^9, 3.76281385660472*^9}, {
   3.7628139201628885`*^9, 3.7628140261268563`*^9}, {3.7628145279849944`*^9, 
   3.762814577117319*^9}, {3.762814668197609*^9, 3.7628146774300528`*^9}, {
   3.762814844202622*^9, 3.7628148768241835`*^9}, {3.762815187665943*^9, 
   3.762815234441351*^9}, {3.7628154210480237`*^9, 3.762815423883071*^9}, {
   3.762815494817131*^9, 3.7628155108076086`*^9}, {3.7628155776733313`*^9, 
   3.762815610045987*^9}, {3.762815642976008*^9, 3.7628156688327203`*^9}, {
   3.7628158638615856`*^9, 3.762815908364915*^9}, {3.7628159389513836`*^9, 
   3.762816014435466*^9}, {3.762816087841111*^9, 3.762816093561097*^9}, {
   3.7628161377621593`*^9, 3.7628162108306856`*^9}, {3.7628162667046566`*^9, 
   3.762816282613068*^9}, {3.7628163834813957`*^9, 3.762816438591365*^9}, {
   3.7628164991068068`*^9, 3.762816499304267*^9}, {3.762816547662633*^9, 
   3.7628165659034977`*^9}, 3.762816632657556*^9, {3.7628166739984975`*^9, 
   3.7628166976323614`*^9}, {3.762816865203922*^9, 3.76281687320656*^9}, 
   3.762817118001831*^9, {3.7628591768346148`*^9, 3.7628591773573456`*^9}, {
   3.762860093909568*^9, 3.762860109318041*^9}, 3.7632026107211065`*^9, {
   3.7632974604280295`*^9, 3.7632974613206186`*^9}, {3.7633355471917396`*^9, 
   3.763335561217513*^9}, 3.7637537564996376`*^9, 3.764335975234499*^9, 
   3.7643360484469776`*^9},ExpressionUUID->"9f1bdff3-9970-414a-8286-\
e19159d1c708"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
           "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
           ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
           ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
           "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
           ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
           "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "1", ",", 
           TemplateBox[{"403040"},
            "OutputSizeLimit`Skeleton"], ",", "0", ",", "1", ",", "0", ",", 
           "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
           ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", 
           "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
           ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
           ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
           ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
           ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
           "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "0"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 28420670457473331213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 28420670457473331213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 28420670457473331213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420670457473331213 === $SessionID, 
   Out[22], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643360098461857`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"254a647e-3093-4bd6-ac57-657c72b874a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"compressed size is \"\>", "\[InvisibleSpace]", "403256"}],
  SequenceForm["compressed size is ", 403256],
  Editable->False]], "Print",
 CellChangeTimes->{3.7643360098511705`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"402fb587-d4f9-413d-8e7b-51560096eeae"],

Cell[BoxData[
 TemplateBox[{
  "Do","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"m\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"blockFactdor\\\"}], \\\"}\\\"}]\\) does not have \
appropriate bounds.\"",2,32,9,28420670457473331213,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.764336009879097*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"03daf14f-10c2-4c70-bcc6-d553a6b14b3f"],

Cell[BoxData[
 TemplateBox[{
  "Do","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"m\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"blockFactdor\\\"}], \\\"}\\\"}]\\) does not have \
appropriate bounds.\"",2,32,10,28420670457473331213,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.764336009906044*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"060c32a5-08bf-4db7-b4bc-8e5d6ea2682d"],

Cell[BoxData[
 TemplateBox[{
  "Do","iterb",
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"m\\\", \\\",\\\", \
\\\"1\\\", \\\",\\\", \\\"blockFactdor\\\"}], \\\"}\\\"}]\\) does not have \
appropriate bounds.\"",2,32,11,28420670457473331213,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.764336009930975*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ab6c02d9-8947-4df3-9c9f-0f64eedd0dbf"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Do\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,32,12,28420670457473331213,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7643360099539146`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"a3f0b08e-df95-4ad2-9f73-dcf5fd8a971e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             TemplateBox[{"128"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 28420670457473331213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 28420670457473331213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 33, 28420670457473331213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420670457473331213 === $SessionID, 
   Out[33], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643360100097666`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"72c994c4-e3f6-43aa-a2de-6318eb7fe356"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"36", ",", "34", ",", "35"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"42", ",", "38", ",", "37"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"44", ",", "40", ",", "39"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"41", ",", "37", ",", "36"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"42", ",", "38", ",", "37"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"44", ",", "40", ",", "41"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"44", ",", "40", ",", "41"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"48", ",", "44", ",", "45"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "39", ",", "41"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"43", ",", "37", ",", "37"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"46", ",", "44", ",", "45"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "43", ",", "44"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "39", ",", "39"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"60", ",", "44", ",", "44"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"111", ",", "91", ",", "92"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"57", ",", "47", ",", "48"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"45", ",", "41", ",", "42"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"50", ",", "46", ",", "45"}], "}"}], ",", 
             TemplateBox[{"142"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"68", ",", "64", ",", "63"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"67", ",", "63", ",", "62"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"56", ",", "54", ",", "55"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"61", ",", "59", ",", "60"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"58", ",", "53", ",", "57"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "59", ",", "63"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"67", ",", "61", ",", "65"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"57", ",", "52", ",", "56"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"61", ",", "57", ",", "58"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"58", ",", "53", ",", "57"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"62", ",", "56", ",", "60"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "59", ",", "63"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"60", ",", "54", ",", "56"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"61", ",", "57", ",", "58"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"59", ",", "55", ",", "56"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"65", ",", "59", ",", "63"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"67", ",", "61", ",", "65"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"64", ",", "55", ",", "60"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 28420670457473331213, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 28420670457473331213, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 34, 28420670457473331213, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420670457473331213 === $SessionID, 
   Out[34], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7643360100985336`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"48ef8c2e-f462-4798-bb55-0c4df16b5a8f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxUvVmzI1mWndcmvehRf0HsyoyM6c4X8zy4A3DM84w735gjMyNyqKzqIXsm
u4vdMrIlUmYiJVEyY5v4QumVT/oB+k369l4OVCrtlJcDcOAisNdZe+3hHP/v
bj4OH/6rP/iDP/j033AYXv9Q/vbb61+P/lseTD58ev344f6u+eHz/eP9t6mb
/5on/6/4f3b+q3/2h8++/OLFV0+efvErP3nKOHnx8uWTp8+/+OKIk+cvXj55
knvx4uNqnT4+efn02dnRy9OXL06fP+ey8+OT4+fPGDyjk5dPvzp69jRxdso4
Pz5KXJ5fnp6lzi4uj09Pnj1j8Mbj51+dvnx2efIyc8Hzx8nT0/T5eersLHd+
wTOMUjJVSiTzZ4lOJVgNJ61aUEyn67l8s1iqZXNBvsB5mM81i4WoWO5V651y
ldHMF6/G46hYbGYzjXSunky2c/mI6zOZRiq1bbR+uLnmIU9Og2Ddbs8bzWm1
vm23V1G0ajfnjcYsDB/nE8ai2eyWSv1KZRG1hrVamM1W05ky38pGppzK5s4T
jEIqk0uk8sl0NZMtp9JcUEmlg1Kpks5xTTGdLWTSlbRdryvT55c8yUn2MsnI
naeKibRfma8VKuVUvp4r8/mlTI7PzFwkxt1+tVhKnl+kLi6ziUw+lcvwsyT5
KYrVTN7/aJa/1QmjZqXJ87w3n8zmUulsMpFPpwp8bKlYLRZSvCuby1ymy9li
NV9OX6Ty6QwPC6kcz9g/IZ3JJlN6tZTMPfniS4yITZ8/+fLZl0+ABHY/evb8
5An2xYgv/PgsTKfPn36VODFU8IdyqaTZF2y8PBISTl481+cwOGcIJIzEyVkl
V7o4Ojl/+fL0xdPjZ0/OXrw4P34hGGTPDA8XR0fZy8tiIgk8cokETxYuLqNS
jdEoVuxHztrPXs8U+IeDimapDELalXK7xM9RbOQK3UoNYACJQb3eLpV4iCk7
xeKoFvJqlM8/DEefr64Xje6nmzeTemNYqX5387BqtNat1jbqrA0b4KRxPRgw
eDgOAt4+rFWvJ5N1v98oFPm7oAJr8vszCqlU/uJS5ua78RJfD0sxDDyXdg3/
ono2hwX52oXLFBfzdju5jNHVrgb86ypp3oj5AbwhCuRUcoVyNs8nY2KGoSJp
5wCmmi/aW3KFat4+lvNSpsAv7FA0Q+dThbwdcwVHEW/kWExkp81+mKtlL7K5
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
t+UpTSARVmuKT6FWneinG0ddvqd/pn2IIMHRU+gBFwMGLpO0ADnwCWzMd7a4
wgcYsKzmi2diCaxvvsM1gzXsvXhp56enGeb66RlPAgOA4UnOYzCQ8uIILHFp
UYnBwAbuA/+SSPK8HAdD2Ri+hkqNnpjNGXWk02viyCDw0lhWwQhMe5hNiDe0
BP9M4CEPwj9hNZwQgyjLbfmreqCQBN8BJIhGiVUJNDzu6P5w9wA8Zk1zEPNG
NPDggliDh5bEqDf+evvwF7uH217fEqGBVdX5zE7Z6tdQmZk1E2erjCsARrbc
LQYcbRZnjOexMhZUxIqwtOGOg0+QlfeOPs5KWb3b/E4lKjfDfF31CE12ySrN
Do83DQbyL0KL5nuzHsxGY833gzvQyaI/ki8zfsjjGgJnDOCBv2ggRw+eCF/T
svCqhxDln4CisLj0qy8tlW1h6RNLTCEOLxPiBBMbsIdLDj2UcjCR6TGIA+BM
XsOs7/AAGFxWKhQFDBOcFo+cgwoViPkmufMLjO7pSlOPSuruo3KEWRbZIzz4
j2C1Qs9f1XV9p1rDp+BZMFC7VDLXEFhwCh6W/cG01XKB0UNIzJvtRatjjROD
0f1stmwTg7RG1RrAECQm9WDdjO7C6D//zT/8u9/8vGm2kKZcgHPpVqziFnr3
V+SZdjDMX5x12r1CbZQM1tnusND8fbq7UN2Lz5yyXpIflRw0Uqqns2HWsppI
U0zj/ahx6pI3ChKljLxnWfwv6hBI7MQlh6SL5ri102Sy4gfhgdEOGvaq86rP
o5DPx9yMWKgUJTCqQiDn7aDFESaBRiQ1nz61RPfF0UknDK2fymPMI+cHU57P
PQtxfCIaEUVIT6oakr68SJxZakKkodCDh1wMKi6dN1IXVvVInp4iKhSZqlfE
U4IZHAQI0T/fYZNuwvPtjlSZ/YsKRcINuIJ/pkHdC08WjzAjzGt01GwzarbG
rebtYi4/IlGx6g3m7f663wch62533moBA8a80ST8hEZG1eoybCInHgejXdSe
BsG0EfbrVk9pFQoWiRDR1+rgkPjXomPIudXsZEp/ff39//u//5d+KkavktX+
78ordcmX5Jt7Xczw8GF3s+OvJdPQTlzp8OmvN1posC9o5i5z6IE9t5u+iu2u
kMTRotQT0QeiolKIA1VZWRfzDD+sRAvAaBZqDEVJ8IYBoFgT9g6JCwbnWP3p
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
et4=
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{3.764336010103514*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"0590e9a4-97ff-43ba-8898-74490c069862"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.762816695245718*^9, 3.7628166952517185`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 14906, 324, 1131, "Input",ExpressionUUID->"9f1bdff3-9970-414a-8286-e19159d1c708"],
Cell[15489, 348, 10101, 235, 200, "Output",ExpressionUUID->"254a647e-3093-4bd6-ac57-657c72b874a9"],
Cell[25593, 585, 333, 8, 22, "Print",ExpressionUUID->"402fb587-d4f9-413d-8e7b-51560096eeae"],
Cell[25929, 595, 445, 10, 23, "Message",ExpressionUUID->"03daf14f-10c2-4c70-bcc6-d553a6b14b3f"],
Cell[26377, 607, 446, 10, 23, "Message",ExpressionUUID->"060c32a5-08bf-4db7-b4bc-8e5d6ea2682d"],
Cell[26826, 619, 446, 10, 23, "Message",ExpressionUUID->"ab6c02d9-8947-4df3-9c9f-0f64eedd0dbf"],
Cell[27275, 631, 443, 10, 21, "Message",ExpressionUUID->"a3f0b08e-df95-4ad2-9f73-dcf5fd8a971e"],
Cell[27721, 643, 12182, 307, 180, "Output",ExpressionUUID->"72c994c4-e3f6-43aa-a2de-6318eb7fe356"],
Cell[39906, 952, 11045, 279, 180, "Output",ExpressionUUID->"48ef8c2e-f462-4798-bb55-0c4df16b5a8f"],
Cell[50954, 1233, 73180, 1204, 195, "Output",ExpressionUUID->"0590e9a4-97ff-43ba-8898-74490c069862"]
}, Open  ]],
Cell[124149, 2440, 173, 2, 28, "Input",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
}
]
*)


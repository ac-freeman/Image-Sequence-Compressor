(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92934,       1935]
NotebookOptionsPosition[     91982,       1913]
NotebookOutlinePosition[     92354,       1929]
CellTagsIndexPosition[     92311,       1926]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\AcFre\\\\Dropbox\\\\Samford 8\\\\Senior Sem\\\\Images\
\\\\reid1\\\\IMG_20190415_184903_003.jpg\>\"", ",", " ", 
     RowBox[{"ColorSpace", " ", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"image2", " ", "=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image2", ",", " ", "\"\<Byte\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TemporaryDirectory", ",", "\"\<test1\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fileImport", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"file", ",", " ", "\"\<Bit\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<compressed size is \>\"", ",", " ", 
    RowBox[{"Length", "[", "fileImport", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "16"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSize", " ", "=", " ", 
   RowBox[{"FromDigits", "[", 
    RowBox[{
     RowBox[{"fileImport", "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", "32"}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockFactor", " ", "=", " ", 
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"fileImport", "[", 
       RowBox[{"[", 
        RowBox[{"33", ";;", "40"}], "]"}], "]"}], ",", "2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"decodedArr", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"mSize", ",", "nSize", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConvertToInt", "[", "mat_List", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", "0"}], ",", " ", 
      RowBox[{"FromDigits", "[", 
       RowBox[{
        RowBox[{"mat", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], ",", "2"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UpdateDecodedArr", "[", 
    RowBox[{
    "blockNumberR_Integer", ",", " ", "blockNumberC_Integer", ",", " ", 
     "blockData_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "m"}], " ", "\[LessEqual]", " ", "mSize"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", "blockFactor"}],
             "+", "n"}], " ", "\[LessEqual]", " ", "nSize"}]}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"decodedArr", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"blockNumberR", "-", "1"}], ")"}], "*", 
                "blockFactor"}], "+", "m"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"blockNumberC", "-", "1"}], ")"}], "*", 
               "blockFactor"}], "+", "n"}], "]"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "m", "]"}], "]"}], "[", 
            RowBox[{"[", "n", "]"}], "]"}]}], ")"}], ","}], 
        "\[IndentingNewLine]", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"m", ",", "1", ",", "blockFactor"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "blockFactor"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "decodedArr", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockNumberR", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", "41"}], ",", " ", 
     RowBox[{
      RowBox[{"i", " ", "\[LessEqual]", " ", 
       RowBox[{"Length", "[", "fileImport", "]"}]}], " ", "&&", 
      RowBox[{"blockNumberC", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"nSize", "/", "blockFactor"}], "]"}]}], " ", "&&", " ", 
      RowBox[{"blockNumberR", " ", "\[LessEqual]", " ", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"mSize", "/", "blockFactor"}], "]"}]}]}], ",", " ", 
     RowBox[{"i", "++"}], ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockDefEnd", " ", "=", " ", 
        RowBox[{"i", "+", "3"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"blockDef", " ", "=", " ", 
        RowBox[{"FromDigits", "[", 
         RowBox[{
          RowBox[{"fileImport", "[", 
           RowBox[{"[", 
            RowBox[{"i", ";;", "blockDefEnd"}], "]"}], "]"}], ",", "2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "+=", "4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"blockDef", " ", ">", "0"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], "  ",
               ">", "nSize"}], ",", " ", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"blockEnd", " ", "=", 
                RowBox[{"i", " ", "+", 
                 RowBox[{"(", " ", 
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"nSize", ",", "blockFactor"}], "]"}], "*", 
                   "blockFactor", "*", "3", "*", "blockDef"}], ")"}], " ", 
                 "-", "1"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"block", " ", "=", " ", 
                RowBox[{"ArrayReshape", "[", 
                 RowBox[{
                  RowBox[{"fileImport", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"blockFactor", ",", " ", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"nSize", ",", "blockFactor"}], "]"}], ",", "3", 
                    ",", "blockDef"}], "}"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"blockEnd", " ", "=", " ", 
                RowBox[{"i", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"blockFactor", "^", "2"}], ")"}], "*", "3", "*", 
                  "blockDef"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"block", " ", "=", " ", 
                RowBox[{"ArrayReshape", "[", 
                 RowBox[{
                  RowBox[{"fileImport", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ";;", "blockEnd"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                   "blockFactor", ",", "blockFactor", ",", "3", ",", 
                    "blockDef"}], "}"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"i", "=", " ", "blockEnd"}], ";", "\[IndentingNewLine]", 
           RowBox[{"block", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"ConvertToInt", ",", " ", "block", ",", " ", 
              RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"UpdateDecodedArr", "[", 
            RowBox[{"blockNumberR", ",", "blockNumberC", ",", "block"}], 
            "]"}], ";"}], "\[IndentingNewLine]", ")"}], ",", " ", 
         RowBox[{"i", "+=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", "blockNumberC", ")"}], "*", "blockFactor"}], " ", ">",
           " ", "nSize"}], ",", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"blockNumberR", " ", "++"}], ";", " ", 
           RowBox[{"blockNumberC", " ", "=", " ", "1"}], ";"}], ")"}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", "blockNumberR", ")"}], "*", "blockFactor"}], " ", 
            ">", " ", "mSize"}], ",", " ", 
           RowBox[{"(*", 
            RowBox[{"do", " ", "what", "??"}], "*)"}], ",", "  ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"blockNumberC", "++"}], ";"}], ")"}]}], "]"}]}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"decodedArr", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"image1", " ", "=", " ", 
  RowBox[{"image2", "-", " ", "decodedArr"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Image", "[", 
   RowBox[{"image1", ",", " ", "\"\<Byte\>\"", ",", 
    RowBox[{"ColorSpace", "\[Rule]", " ", "\"\<RGB\>\""}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.761915909234584*^9, 3.761915945225686*^9}, {
   3.761915976074218*^9, 3.761916041505572*^9}, 3.7619161536818895`*^9, {
   3.7619161868020067`*^9, 3.761916189881773*^9}, {3.761916324010002*^9, 
   3.7619163258738403`*^9}, {3.761916434394074*^9, 3.761916471002392*^9}, {
   3.761916520418024*^9, 3.761916630994892*^9}, {3.761916672459764*^9, 
   3.7619166797950573`*^9}, {3.761916753099653*^9, 3.7619167567879405`*^9}, {
   3.7619167874662952`*^9, 3.761916801777837*^9}, {3.7619168364229546`*^9, 
   3.7619168432048225`*^9}, {3.761917188715124*^9, 3.761917211860736*^9}, {
   3.761917344117229*^9, 3.7619173701786556`*^9}, {3.7620352280630207`*^9, 
   3.762035285142975*^9}, {3.7620353446814604`*^9, 3.7620353456319427`*^9}, {
   3.7620353866643996`*^9, 3.7620353881419015`*^9}, {3.7620355510170765`*^9, 
   3.7620355515436363`*^9}, {3.762035724264174*^9, 3.762035724614146*^9}, {
   3.762035764512288*^9, 3.7620357660541663`*^9}, {3.762035805736526*^9, 
   3.762035806270074*^9}, {3.762035986880591*^9, 3.762036056895671*^9}, {
   3.762036124368055*^9, 3.762036215446495*^9}, {3.762036246975264*^9, 
   3.7620363330475993`*^9}, {3.7620363657593937`*^9, 
   3.7620364217189245`*^9}, {3.762036583103812*^9, 3.7620366863598256`*^9}, {
   3.7620367423362026`*^9, 3.762036766847391*^9}, {3.762036836367826*^9, 
   3.762036836952262*^9}, {3.762036886918659*^9, 3.7620369153772745`*^9}, {
   3.7620369512000084`*^9, 3.7620369543116636`*^9}, {3.7620369943112416`*^9, 
   3.7620370233759255`*^9}, {3.762037054230365*^9, 3.7620370794389668`*^9}, 
   3.7620371548961034`*^9, {3.762037245494923*^9, 3.762037360324458*^9}, {
   3.7620897637853975`*^9, 3.7620898289164324`*^9}, {3.762089862061322*^9, 
   3.762089973326563*^9}, {3.762090206984684*^9, 3.762090304951667*^9}, {
   3.7620903416354294`*^9, 3.7620906480959744`*^9}, {3.7620907091070805`*^9, 
   3.7620907613034477`*^9}, 3.7628008266824484`*^9, {3.762800876177598*^9, 
   3.762800898995886*^9}, {3.762802884495431*^9, 3.762802925898389*^9}, {
   3.7628029950179358`*^9, 3.7628029993932285`*^9}, {3.762803052406331*^9, 
   3.7628030774090014`*^9}, {3.7628031178827963`*^9, 3.762803126529443*^9}, {
   3.7628031738346233`*^9, 3.762803187161753*^9}, 3.7628032655997863`*^9, {
   3.7628033035001583`*^9, 3.762803303659605*^9}, {3.762803373963948*^9, 
   3.762803388705331*^9}, {3.762803625077796*^9, 3.762803664688888*^9}, {
   3.7628037211420584`*^9, 3.7628037650742807`*^9}, {3.7628038362099724`*^9, 
   3.762803889082398*^9}, {3.762803941604073*^9, 3.7628039451665754`*^9}, {
   3.762803978104051*^9, 3.7628039902292414`*^9}, {3.762804031897544*^9, 
   3.762804232426301*^9}, {3.7628042772139997`*^9, 3.762804307706689*^9}, {
   3.762804339912141*^9, 3.7628043426846924`*^9}, {3.762804383156049*^9, 
   3.762804385176282*^9}, {3.7628044857509584`*^9, 3.762804521421652*^9}, {
   3.762804955295542*^9, 3.7628049554550805`*^9}, {3.762805100886068*^9, 
   3.762805120883278*^9}, {3.762805260548588*^9, 3.7628053265073967`*^9}, {
   3.762805419571955*^9, 3.762805446238001*^9}, {3.7628055710172477`*^9, 
   3.7628055803191476`*^9}, {3.7628135718098965`*^9, 3.762813575263863*^9}, {
   3.76281361696049*^9, 3.762813626885763*^9}, {3.7628136973731203`*^9, 
   3.7628137222003365`*^9}, {3.7628137572732844`*^9, 
   3.7628137593432317`*^9}, {3.762813852176456*^9, 3.76281385660472*^9}, {
   3.7628139201628885`*^9, 3.7628140261268563`*^9}, {3.7628145279849944`*^9, 
   3.762814577117319*^9}, {3.762814668197609*^9, 3.7628146774300528`*^9}, {
   3.762814844202622*^9, 3.7628148768241835`*^9}, {3.762815187665943*^9, 
   3.762815234441351*^9}, {3.7628154210480237`*^9, 3.762815423883071*^9}, {
   3.762815494817131*^9, 3.7628155108076086`*^9}, {3.7628155776733313`*^9, 
   3.762815610045987*^9}, {3.762815642976008*^9, 3.7628156688327203`*^9}, {
   3.7628158638615856`*^9, 3.762815908364915*^9}, {3.7628159389513836`*^9, 
   3.762816014435466*^9}, {3.762816087841111*^9, 3.762816093561097*^9}, {
   3.7628161377621593`*^9, 3.7628162108306856`*^9}, {3.7628162667046566`*^9, 
   3.762816282613068*^9}, {3.7628163834813957`*^9, 3.762816438591365*^9}, {
   3.7628164991068068`*^9, 3.762816499304267*^9}, {3.762816547662633*^9, 
   3.7628165659034977`*^9}, 3.762816632657556*^9, {3.7628166739984975`*^9, 
   3.7628166976323614`*^9}, {3.762816865203922*^9, 3.76281687320656*^9}, 
   3.762817118001831*^9, {3.7628591768346148`*^9, 3.7628591773573456`*^9}, {
   3.762860093909568*^9, 3.762860109318041*^9}, 3.7632026107211065`*^9, {
   3.7632974604280295`*^9, 3.7632974613206186`*^9}, {3.7633355471917396`*^9, 
   3.763335561217513*^9}, 3.7637537564996376`*^9, 3.764335975234499*^9, 
   3.7643360484469776`*^9, {3.7643491394832697`*^9, 3.7643491399827757`*^9}, {
   3.7643493761656675`*^9, 3.764349401760637*^9}, {3.764349434641889*^9, 
   3.7643494397965603`*^9}, {3.764362675180808*^9, 3.764362684664425*^9}, {
   3.764362721144924*^9, 3.7643627727461634`*^9}, {3.764362855830496*^9, 
   3.764362856022387*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"9f1bdff3-9970-414a-8286-e19159d1c708"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
           "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
           "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
           ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", 
           TemplateBox[{"246788"},
            "OutputSizeLimit`Skeleton"], ",", "0", ",", "0", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
           ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
           ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
           ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
           "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
           ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
           "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
           ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
           "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7643360098461857`*^9, 3.7643490360166845`*^9, 3.7643491429263563`*^9, 
   3.764349445229719*^9, {3.7643627462702804`*^9, 3.7643627824311733`*^9}, 
   3.7643628591474752`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"0076ae23-adca-4e0e-9d7d-77c896ea34ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"compressed size is \"\>", "\[InvisibleSpace]", "247016"}],
  SequenceForm["compressed size is ", 247016],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7643360098511705`*^9, 3.764349036028733*^9, 3.7643491429332376`*^9, 
   3.764349445234624*^9, {3.76436274628414*^9, 3.764362782448127*^9}, 
   3.764362859164344*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"6290625c-a875-46a8-9e21-38520df5375f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "86"}], ",", 
               RowBox[{"-", "170"}], ",", "149"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "170"}], ",", 
               RowBox[{"-", "252"}], ",", 
               RowBox[{"-", "254"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", 
               RowBox[{"-", "5"}], ",", "9"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "5"}], ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", 
               RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"13", ",", "11", ",", 
               RowBox[{"-", "15"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
             TemplateBox[{"142"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "3"}], ",", 
               RowBox[{"-", "218"}], ",", "294"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "362"}], ",", "290", ",", 
               RowBox[{"-", "511"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "162"}], ",", "341", ",", "425"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"329", ",", "383", ",", "346"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "42"}], ",", 
               RowBox[{"-", "127"}], ",", 
               RowBox[{"-", "122"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "9", ",", "90"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "170"}], ",", 
               RowBox[{"-", "170"}], ",", 
               RowBox[{"-", "258"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "165"}], ",", "341", ",", "320"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "42"}], ",", 
               RowBox[{"-", "85"}], ",", "341"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"149", ",", "346", ",", 
               RowBox[{"-", "84"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}], ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}], ",", 
               RowBox[{"-", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11093", ",", "8789", ",", "11605"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2394", ",", 
               RowBox[{"-", "5460"}], ",", "597"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", 
               RowBox[{"-", "7"}], ",", 
               RowBox[{"-", "15"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "5", ",", "10"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             TemplateBox[{"177"},
              "OutputSizeLimit`Skeleton"]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 140, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 140, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 140, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[140], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7643360098461857`*^9, 3.7643490360166845`*^9, 3.7643491429263563`*^9, 
   3.764349445229719*^9, {3.7643627462702804`*^9, 3.7643627824311733`*^9}, 
   3.764362859328473*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"448d94a8-95a5-493d-9968-c63cd6d784a7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"89", ",", "127", ",", "164"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"91", ",", "129", ",", "166"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"91", ",", "129", ",", "166"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"90", ",", "128", ",", "165"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"90", ",", "128", ",", "165"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"90", ",", "128", ",", "165"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"176", ",", "298", ",", "16"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"260", ",", "380", ",", "419"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", "133", ",", "156"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"80", ",", "130", ",", "170"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"91", ",", "132", ",", "166"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"86", ",", "129", ",", "163"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"90", ",", "128", ",", "165"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"89", ",", "127", ",", "164"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"90", ",", "128", ",", "165"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"89", ",", "127", ",", "164"}], "}"}], ",", 
             TemplateBox[{"147"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "243"}], ",", 
               RowBox[{"-", "259"}], ",", 
               RowBox[{"-", "185"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"127", ",", "250", ",", "282"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"86", ",", "115", ",", "71"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"255", ",", "293", ",", "418"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"250", ",", 
               RowBox[{"-", "218"}], ",", 
               RowBox[{"-", "160"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"127", ",", "208", ",", 
               RowBox[{"-", "181"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "63"}], ",", 
               RowBox[{"-", "222"}], ",", "245"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"85", ",", "124", ",", "155"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"87", ",", "125", ",", "162"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "11007"}], ",", 
               RowBox[{"-", "8665"}], ",", 
               RowBox[{"-", "11444"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2308"}], ",", "5584", ",", 
               RowBox[{"-", "436"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"85", ",", "123", ",", "160"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"85", ",", "123", ",", "160"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"74", ",", "129", ",", "174"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"75", ",", "118", ",", "150"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"176"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 28420704531582222259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{58., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 28420704531582222259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{43., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 141, 28420704531582222259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{72., {1., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28420704531582222259 === $SessionID, 
   Out[141], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.7643360098461857`*^9, 3.7643490360166845`*^9, 3.7643491429263563`*^9, 
   3.764349445229719*^9, {3.7643627462702804`*^9, 3.7643627824311733`*^9}, 
   3.7643628595300856`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"061294af-9c17-42e1-b731-5157c2276ee5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AMZRIXl3ZpKCRslLxYtIVSVVtRQdD9ZGK2Y9olwkoxhBqUgtB3rJe3m1hwhI
bHkfeNbia1losz7uO/D5cO7L8661y77VS+7Xl12/LNu+mir8YqrwD3Ml35+1
/bxo+3my6PVcyevZwi/P+HqbThxy9dCnTW5bf+akbT2lPucBThZ0d5xiJial
onRIQ9JbqWCdDJK3Gs1GxDvUIemXwkAbuH+row+MJRWsgJWKgJimipIif1eL
XtXhK8sWVFXTlteMi28kXvSkWUEoeuPV6ANj7N7e/mO+oWM58627L7bnzPpS
bx1L++HMoZdjuS+mi74fL/ruTN4vEwU/TuW9Wir+cTzvq76cr/r2fTdZ8POs
5cfpkmejvpH2Rouvm3wcxcOq5p82NfO0w8McTLaRGUepoA+fPXmzwMH1411s
jASMgX59OoAYTHnDmiRdSkK3gcywCydSo7uQUYBxikEu5VA/wjGoWiTQsGSD
LW7gdBRDxUxb0BCjEpYjls3qXwR/NW1WGsONqDY0kUB1EHlbBwXpTldXR03w
Ul/phb4DXcHU4yWfjZXHftlxYG3eqjyoVu4Hwnf9yt3K8MNa5WGd8qQB8s/w
nRrlhn912fbdwIFveg/8aaTgl1kLhJX5Tn9KWY/2uep6vhos+hL0NID6VM3f
DPMap6bRAeA6aRt8QZ8DVgnxRDbT2QPU7kF3OvO7tI2pYGpAlYHykOw8rSNB
DHYZPywpZUYc6uSlhnWKTo+wpwODx3AjDdib/BaIUaEnJyQHSHKSLXzHHXnB
yaq9l3sOjFelzTjjH7XtXpsqV+ZsoUXn+o1g+GYgdAtyS1/4dhAa4TtVYKHL
/vULnvAlz/oVN2QXP4/kPu858PXA0ZrCrITyDlqPsIRWd8cgdreGKH35az2J
HUe1gnpBpIJjhkFCkWBThpvgODFgCDEqgFLR+xgVrofBkOYcpHhQBow8nKZF
Clgk0Kg9nMiIWQrbckUu6xdlitvlOcFxR5b5UCqIrNl7CRj2UxsOV+1P+HCo
aPPnXTmrczZlwRaeKV2fLF9fdIXvBsh7sVuB9ZuVkFiGr/iU60HlVlC55F87
WxFetitnK5SLvvBNPxxq3/ObtNhPIeGMKBgp4QcYEkZHa4iqfjmFJyYnCKIy
cBFHd/QA00/sZexQHBG0x6Xdp+EQxwB1NCYEYKA8MAMGUlxDrGJlEkG9wxyt
+VSN/lBoRNQGGkbP4vHMy3iXM7N+XB3TRkRq+EyGJJZgpMR29ccXtf2L/+ff
ny5OVi741mdL1yZL3oyVrE6WgRSE79eARJCX6dd961e8ykVXeNkaWnGHr/mV
y+71hfK1xVIy7LwndMXduPejrR9/BBGEaJF9kK37sQdOK1bd9Vo446TejAoz
/7JT6KoCW2EAR3POJYMdA8T0VITRqw1waEZJYEhIOdHVgMBAt4wKBgZb0wAA
MAPirGcxRZo5RElCpLkHbaTqnyKCIS1ttF1VWEiSbO35l//2r04VblXmHGtj
hcps2eszJS8mSpWLfhIyrvlfL5e9mDj8/fCe708febNUGl4oVVY8q+etynJ5
6LxNWakIXahQLjjaDn+a+NHvU8o7UkEZQIisg8RTcH1jUGbpHC32ufoCjRyk
ixLIHafB1M4BIakYUEno11M1QoWW3BoDgVlQYAAgWSCZAPkg++kE8o1Osxtg
PKgkDDI2mKU6qA1g48oWxgZDCEsEd6IYJsSgw7UN8BgrFLNlMUBiq4MkhKnq
Kf/vX37YvP8zZcG6NlX609DRxx2Hfj6Vt7bsDT+oX7vgCj9r/tM1/+PJwrWH
zT+eyV87Z19fAiR8n7cffNSY/ctMSfiqB6SjIev9+PgMej+qSpwmznKc4tyN
PBKhQkz4KRVgW3V3MKfonZGgQxmg+qAWGrQfn2jKhpnpgeN0on2IGewmOYZE
DFJcg2oKKueBGRd3tIjgNIDB5bH4FGnuITH28kVvS6td3KmZrY8uuJG1TefA
79Ot1bs3hi84IaO46U8qjv3LIQgo51yhBzXK09blU7kP5xxfTlfMNOz7/mLl
2jmncsH1y6x9Obhv1pXw00DO2iWHctlXuz8+9nAAChx9CYi4SU2/ORhME37j
oUFsmAozX6v5CfEaB9JW2xCXGHDRwexosnMYrsZRAQZIpFYMk62MAZZ1iAyQ
Hmc/7sF5CE1FOGExkw5uJB7PvZIz+B11Stiwod+VOU/GWU50uyzKOQekDfc6
9ubF/qp576bQnDV81bX+qOXhhO27OzU/3Wm8M+H84XYjoWKl8vuxkuM5ce2H
tn4zkq+cd4auOCfrqwAG+NbxWmGuZXTSZ87lfkLaMCgAwAlFhAocYgxHbUNg
idbTYBxCXAKJy0ljHTGcqGvFVscw2RLANK0AMNJdwxSMdNdp4vEKIhq6bkRI
UIVlwMzoeGpcuOHYYCWPGTCYCuZrmtVQo51aniOgQgbY2CGyjneht0VZca5f
dY4WJzUcTjpVkkLWK65539yvG3Zsu3Wq9OrxvCFH0t1JR/hKpXK9+vlo4YR3
z3Tlnhl36to1n3LVvdTTAPEoTU3IaYCgbLw1sgtyoTk3QaCCmlEN2NVEJeHP
El0fhQrVhlQqTgMSSc4RhgfQQpMKaijnHIFDquHgMiQd/C6G01q2+oEt8saW
O+TqT3JGeBDx4GSEApNk6yEMwyEX6Ukv67030gqefbHs6ilI9m7f0LH/s9CC
C8rSta9a70yWfXs1+O0F36NJz/ObtaQAuVP1h9OW44fi6w+nzNfsWVu2hc+W
XelryaCXJXNzAO6Kru3Q5J8sbzr6OS8wbLQByK1SoWANBoYYL3CPSsKQAMYQ
tUQi4OBlwdiJjmFNIlQqWBv8nloxip2uw0CBGeGM9YvM/Dewwa2N6Mo2wJZH
CCQqFbAF56a5TlEMGA8iFdRgZJKTvlhR27behfa68AX7d2PF7tSPypI+OGVJ
hwii3AisPjveZ0+/fzrvfvOufue2a9MlZEXrmvdP4yXjvr1tJWnd+RvXFstD
i9aJ5mCWndxAmlN9+BoVagKvFX39pO5zDoLRNeEIFXqeT426UpptMio4d3Nb
eYKhu5vCQEVANNX1Q8bdYQYGGPgXqKCpBVMJ6nQOA2mbJahJLkN5y5Uz7OKs
H4sMQwUvmnFyAcbBwAUOTka0dAU86CCng7NO1tQpl/zfz1ibDiVUbIurzvpE
pcKz+qzl5ljp8yvV35zzP5mv+vZ2feiGT7ke+HIgrys/7qQ1Y8q9B2pYqE+H
W5rhghnO4a3OU+pjJ2tl6lMljk5wnCavrVUq9DUBjQr4XowHzVmq+2gdwQFg
pglS70sb2njVSCeklHDPaoN1Uip0HuihiOleJqmFlnZWjDJlUIEZNdEKPqCI
8YUTB3yU9dO2UUMkSJCJ6TQEDowBF1a4XdAKyCv6Go8DFS/mHG37N5QkfNSR
l7o+41Suu1c/bxzzpt0fLrp+fPdEcNe1yZLw7SDkFd8MFUx49p127KjfFfvq
XEV4xT7RcTzVNpgGquU4Td7Lg9Od1N3qxFRjhIpEP+ChCt0gWyJgVGhsoEmN
fcq1qdFKIcVOjDmd7ooXERVjq0PT/yT7cLJjBCwJYZDsGmUqIWjFKKOC9kjD
h2BD3KzHrpf2iONFJdF7Blm6S+pcMfV1naIBhTUwD+wQ7Yc5S6hY8b2csw6U
p/r3J9bu3hhadCqX3OtPGu9NWJ9fr/3mvPfJYvCbW3VkAfxW4MvTR5t2buwr
y56pzVm/4FUuec+0HQflUSuvYe2loYulasMsdmjrh5E4gvVcaySicMC5kiUV
HBucmckFRSiCk54MkB478Tuhwj6s5xikhxpu60iMihLBelgioWKjDcBUsPKW
AwA6Ob+bZLZ84sqRw2UjkQoaIcGxgdu0HqFUfDdR4t4Va92xqfNIMmgFJJZr
z1qGq7bfn7E97M2bqT1wdaQkfDeg3Kz801jRtG/fsGvHicLk10sOqF+Gjx8n
P/lwnCbapVOhaTIJK4OEDacBAGYsfDAZR0o+xCILG6bNcdWD1JuGzBDcaiNe
ZgzgBm1zDWKOEUaF1k/bOgyYCjFSpLnPSJVB1ZNRnIdECR/R+zX/ajFrmLU5
ihgVXI8GBsoxMAMECVVM6BiwJOvJk01tQMUP0+Ut+emVh7b6Mz98M1GqXHOH
nrbcG3d9e7P1j2f9D876nl+vWbtdp1yv/MNw7qnCxFOuzLm6/avLLsgrTrc1
gVZkqNkUBZWSEInXyOPYaL9IRSTNMJLDUkENCURFZEbbkQhg1zMYsPeNVNAg
ojX0i0MoYVRI8weggu0ixXhLIsHZO5JjtqUNtMRKjB6CEkC1QS7NYPpAs022
Cw2IIP3N7UDFL7PWlpwN3uzNbYfiVqes4Su+0LPGs517ny147pzInW89em24
bP1eLWjFjxNl84E9QxW7qvdvebnoUi77hjvb4LIZ6noOw1VKhRkeW/XcTxyA
JYIF/QgVCA/iWeJBIwNGKsyAieCkIpHiHKWo6NeURxAsHVw/SjwMfqf9IgOs
XxpczDTEuNBKTGeAmLFTX3dVYweOIDivSHOoWuE41dvUEV7xvViw95QmVB9K
HMiNfzNnV+761h4fezxW+v15/1fj1i9mKp6f84Tv1yn3gq8WPafyUxY9O88E
cl/O2ZTzzqHOlvSKgfSKU+rnktugaQPDQH2kwyIVHAZSKoTxmjhEZrSaK+pa
oaGFikG+bSwVDQNIsuocZQY8UCMqofZwADCVkNJC5ql7RHQ3zh9YfzLcA1jF
ELUU9zAY2yVfCopZegjhke4axhhQY+uuIiTaSqyaZkBb2zVSAa4E9xEqrgS+
m7L7Mjb4d37ysOPw+nKFcq+K/Jugx/XrD2vDj+vJ773v14QfqD+6uOj9ZdZ5
t3lva078y1kHUDHa2QkRalsFfEeW2xAwyEx3ksmOqWDxQsoA66crinr+j3Um
Ei+41QY+DVCBQf3D2Dg2DMsLCAwqGswYCYwKtovbuE6RigDu0XhwkTukjRQ4
F3IVKG30Q8y0Tp0WEQlKhdiJOREFhKxnVgxQKjLcpBboae6AevPHOfu54Pbv
R0rWpm1rc461e1XqD/OCyv2q9ftBkmfeCZDf2Fz1rC9ZyS8rblT/vGh/c8Gt
XPNO97XDNbPIwv6Ielen6c9RKBViBGGugS/IduljoTyw5F/0NccAt/ZoPARz
/EyiY3Sr88xW2oCPc40kwj24tDBBJzVea4rMd9cZMoBuKzRCqOuZgVtBDdI9
0A/ZxQiZ4DBSM3DrmVSPphXkKBcm1MHgfWbU47Al0OrX4XnQ29pg9zB9KSPA
MCIFBv9qCBpUKwCGlIpT4MFkdz9cMN05CMnA3Im20Dn36wUHBA5AIrzkCl3w
gEqEP68PP20IP6sBU+7XKvdqwnf9RCsuVCjnXKtLduWif/2ST7lS8Xy+Md9L
Lqve2GCaHaRJFUlV+thEkBoGA8PDjuLT1cYIW0kwZoMGflgyoGNDCCF4qGAk
VahbOpKTCKb/NGS4zjA8iBH/nkn3jFEMqFGnk4ZHM+ZTPIxRQfmhGDBZ0Byt
xw5yERZEVO/TQ/xWDSKMCkj40x0RxdA5GcRm4EFFAizTSYQC1D6pglSpR529
fxj1AQ9vZhzkp3fnvcoFX3jFrzw7FvqyUfm8QXnWEv78mPKoLvygXnnYQBay
VjwKSMQ5m7JUrpy1r593vJx3Wr0t+ptEYGOULnVCQFG/kZoPIzCEYCE1g4uZ
l3HuZ1xPGGZHGTOSwa6IqZflc0UmC4yHCBIuJg5jXMKgIYEcTU0KD6HCCAMz
chbiQdqABAOnHPSxM8NxhLqDMaC6ZpilE9TUhHAgXR2T4SLJBlCxs6zzXleZ
ovIAOSdsfzpT8lXX/teXXcqjmtCDmvCdmvVbVT+ct31/zv7dRNHjlszvBw+S
V+oXfcp8qXK2HKLJH4aLcstqM8H7FafV6Ubuityzk96Amu0LcsEFU+HoqNSt
nLsZMMmutw5QGxXEKBKUpUhF6eR5iMCg44HdZ3ClZmMkarjHVDuTgpINvE2N
nE5PwRfkBYQ+GfZZtM0lGDQesWiFix1x+VSPOIMMD6CCdKr1wraKAbCs8hNX
O63ExcveX8bLnrbtu1qZcL82+fVk0fpSWWiplGQR8+VvJvNfjeU+acm8Vbn1
eefOb7qyvxs98Ga+dHXZoVz3fTVacrCsIbNiLAuuSZ4wuasE17j6qwMIcGrI
RgAYGRgxeE3wPu7EqLACQasRKs7gHnEMM21kxXiya8zYCbvgo3Hdzqg2TjtT
XappHteMXgqRMKY7+gwzNgB3ssEMDD1hMJzIUgjKCYMhsnUbpAZXKBweeFcX
lohokKPugW2OIZALyDEOOnqenqpdm7c+78+925DxoDEThOLz7r2ryzblMlmh
Cq24lUuVsF0/Z38xXfyofccPQ7k/j+R+37vvl8HcN/PF6xftP827g8Em0Irk
isGMCpJtZtBKyn2G+N2YNYlUSCc1di43RkqFGRKQTmDvq0a8n2QAYDxFg2RM
3MX9HBUcIcQ8nLvPcG3DYOMu5Qf1n+GiDAcGJ1ypmhDxhY8hzOltRgW1LBdk
mKdASfZ6Tve0dN8crP3yZNHXJ/O/7N37fCj3wfF9M6Wbz5ZvfNa14/uhnJ9O
H/xx6PD3gzk/jub8MHzg6659twMpt6tTHjRk/DRU8HrWuj5b+nqs4MVU/vez
nssDTfUNJ3e4T0PCQ0oSNUeCO9nqHUh38BUWMh4AKRVmc1+UCOpEvMs8G8Uw
DKnuCTDcz4aBs9I849jFdJdzOo+K0M9UBU6nA9h1jJeKlCfiVoKHbHWdq4hp
YsNRAYeO+Pq62rrvDVR/eapgpX3HSvuu70Ytz7oOLjgS5ko332/IejmUqyxb
lUvO0EWbctGxfq6cNC6UK8ulymIp5Jk/jxx61pwJbHwzUvhm0flyxvLTeO76
dP6reduDM3XdbSfyvBCeBtO8EL9GkulSD46GRirYTBHVQHQ660EyO4onmnC6
wfV4a3T3BDVVECY4GWGGfccMOjmfimCwYToGo8YBozgtEWSET2DENFVa9YgS
oWXLKhJE1dVUc5tvtLP5xK2eyscn8+937rndc/Bqf9655h1T9rjpkk0PCA95
oADhKwGyePVVfejrurU/1CtfNynPm9af1yvPG8ifsLjXSCqR8/aXI0Vft+25
U5/1Re/+lwvlb85aX40XvB4/ujZT8rC/ptzblUEU9QzUIMnG5BwX45z3mX+j
pATwrHAn3eUgMUbnUZYhaEmC7ndjIkH7qTt4MHRsYFLzGDDF4LZqQ6IStF8m
IBFZ4BpiqcLFDiQXBgD4xVVVvSG+Z1TADD0F32W381SLz/foRMHTrj2323bf
P1VwqXXnmD12sjzu0bGd3w8cfjVjDZ91Kxe86/NO8k/GHleHHtWFHgfXH1Wr
Fgw9CKwvO0mpAoXJQ8AjGLrsXZ+xfNOz705d2sPWfX8at6wt295MFP/Uu/dO
85HB2oDddwJCSTJaouEWZ8TpL4LB9TBJ4fwrhgMuPYh0gjknUiumUlyT1LB6
YNHQrGKKNlQkIrMeW3QBMYsgmAfOuDUuTIh0PKuF0z2jbGENJ5m0fKZlEWR0
kFgG7c5B2+4Vf9KXvfu/Gy681rBnqjzhkjf5D905P57JV5YBBnfonCc0Z12d
Lg3NloYvVSh3/OHbvtCNSuWaW7ntg1pDueILLzvXLzrJPw2ALPSGX3nYELpf
B+euT5d9czLnaUP2w6asP57OBdFYHc1/dXL/ufqCA96erea6R8sHLj8Xe6TM
4IlsliTwUUBlALycXDGZ4p5iYFC/Y8xUBiYjYCAqcDjAlu6dYEhAm1GB8dBp
mRBVgi5/ac71RFDRUeTh4Xq0YSoVeG0E47HNTcXkdKJ7ZI/9RFdR0iMi9Qcv
B7efKf5szh4HPKzNlIWWfcqlIGzJr/KW3Osz9ldnyn4eOBQ6Ww5hgvxz49vB
0L1g+H5N6EHV2mL52phl9UwBwWbJET5fsX7Fu3ojEL4ZUG7XhK9DnWJ9cfro
H9r23Aumfdlx4IfT+a2BygxXpH4XlDAyZcQ8XJq0G9ngiwjseqIATkMg0GZ9
xVSaexqooGDQLTGdDSMGk5iNdC+PAW7AlvVgrRDbwgBicHHJ3Ff7RUjkQgH9
nhGOBywdYAQMj7o+4xnzexsHCuO79v9+0Rr31Yl9r8dLIFiEV/zAA5CgzDvX
pm3fnipan7b93H/4ccP2P3TvDV2yr90LrN+rDT+sXr1frdz2fjd06F7dtrXp
4tejR0BSvus/+HoJ0lHf+nkXkRpINh7VKXerlXOO1ZnCS5XJBzb8aqejWyQf
6aGp06XZu/GQjAcVCep6TQT0cKDpANKKCA8gGp5pumUwYDAYHuAgzu8cHjip
kJJAyZFGGawJYkOqG2yXKhjTnDTvqIiHviY/lEyyCxJrst1Df/fX79Xs/N2b
qbLQRW94JaAse9ZnbetTpW8mSp+eOLLiSbnfvOdqww6aXazdcCtPa5THtZBa
QIKhPGmA1EJ5Vq9crgQZ+eVMwZOmvS9mS79ozv7jyUOv50reXLStnbOHzrlJ
xHlUo9wOlMT+7Wf/9T953fXZcD/6F+HSaX01jwdAqhV6A+d+EY9zasCMgYGR
IP0qDBwYxOiJSCg4KjJ8k9SzzKivaT91NLTBaFaJHadCNc40Qe3hcBozOloI
EEZaRPDMUhTtjV6FJiYQR7Z7xo5Y3P/h3/9lxt/9RWipYn3JrixYlUXbz2PF
D5t3PW3ZAdHkp5G8R+05y7708GIF2PpNX+jJMfJ33R/Xhx5XhZ/Uwlb5ojF0
3qtMlazPlr4YLQhdKAtdqAhfdP0yUfRV684/nToEYSh0waMufPnLE35duOG/
jroPZ7t6Mj3jIt56QmWaj+kwTIgMcJ0G02ME28pNZYATCoyHARXPdJp3Coxq
xVsNE0IxwEjQXZy4ygKQXBDEXJcgUaGaTgVOTth10uEGVD3J8I6Q30e5R7IC
IykHyv/v/+tfF8T9w5sztvCs/dVEyYOmbEg+vzuVtzplfdR+cMGd8qwr95eR
wjcLnhDElIt27T3IQ4gL9aEn9aQGeVoNuYQyXgJgKOetkLU+azvwvPvQLzNl
wMZP04Vfn9z70+nDJEU55+o68MFw4RZPZRPcUoZnKt0EfrHATzUsDY1jGZeV
igYYOAMqqOFdRgXnd009vNNJHrLFluKbSYUb8ExyfkcG+hCBgfboCI1zPCAq
xjkqjLvj0anQ0lq3ZhGt8IyIUFEqiI5VkKOZnjPbyOmT//m9RGfyb1cny8PT
9p9Hj343madcDCgL9m8GDp4pTcj59G8sKR8968hVFnxQUCgXHeSPID2pImw8
JqEEsgvlYU3ovEMZLQS//zxuX6zKmXQlXjq2+5uBol8mCsi/LLtb+3I092V/
Tniq6POOfc6jZdvdgxmeCTXbOZPOfzt+lY8tGyJCDCFeXUeaTJWVCQwAphLU
wNGoZ5Yike6ZiSQSmhTMsC026En3zad6ZqlWsBnN2KAm7uqdhBZOKKhBP4sm
XLrCSGP8GOOOpPxBNsYlqDh+qXioSYUXPDKU7Bsr9XZ/1VPy88DRLzv2/zx2
ULkZDK9AqmkZL02xJr6ft+nXez/62678FGWhYnWyJLRUFrpfCRisPQwo96uU
O1Vh2D6sCV9whibKICe531OYn/TBsCOz357eU5DwcqF8bbk8fNP/w9jRP57K
Cc2XvBjL723pgkR3m3cyw3smA56D9jUj8igu/lBT8zFDWJcaJkHkgRlhQO2n
DYyBaNAPRiXC2E8jCPb+BLJJbIwKelRXEl43cFpi5IGnggs3YrETESLVyKNW
t3QyQmMbwKnmFWSGesaz4AqesRTPiLe+//bx0rWJstVl19ol1/r1AKSO97qO
VGd/VLd3S11uui3rs8r0D9bnPGp64FQe1BMwyJKFL3TLT36I9bAaIkVokfze
ZqQ8pbk4s9ee3X40vats56grK7xiVy55oQYJL1uV8+6llso8Xy8IBb2lDG/k
G+HnoPJgSOrUrSRzMEAS1fsGTjyzqixQBmY5ccAkUKM9NGqk+2ZBKNK8c2C0
n+OBzXq2u80/iXs4KrgTxZTVzKRVDzoxEpsyBAMYGCQQaDL8o1Cc0giSqQaU
utouZdGvXPYqt8gfQwMq2nM3Hy9Ibcrd6j+Y5MjeeLo4VpmtALkIXfaH7lUD
CetXXSTzBDCuVYQeBICK8LwNksmLtTnHy1IHndt7LNnHcjOq9sX/sOQMX/OG
rrjCsxbIPSbb2jIJk6OARHok2YaHNkViNOghmBqsOUuBAAF+Vxvi0TQvTg5n
VEcTw23ViWRLOzUk3HMqAHNEBPyzjAHMA9sCEjR2UCTIpVTb5p8Cv4uzPjoV
JmaIPlKPRyHETFKoVlBliMCgb4lKuM9s81HZGYPbgKfhDxwHKVAukD9vFb5V
/e2YpduS2lKQ5N0dH8xJrtyX3LwnNjTjVWadkFVCyFD/YJqf/GjzOpEL5VEV
RBAoZpVLlX2FiZ59KS1lO+tytp4o39lv3bncuE+5G4Q0dX2qCKj4dtgZrOmB
yJWup+7aZKdU6A0tXuudZjDQTtV9dPA0c7qIBKMi0umZZ2Bg70tNlQhibDfD
j6mYYp4FBqjhHsoGhocbjMZPinXuu5iRHyOcNFLrUYPDAyZplmck3TeiceKd
SnaNFmbvWJuyqqsKPuVu5eWGbFvyJ4EDqdYdm/Z9/Jvy9M+qd25anXOHZmxk
Tfu+uiSlLm8q1ysJIZB2XnaH5x3hG9WT7p1laRvyMj527/i0tSj9WGH6qGeH
cq1KOW8PzRZDkXKr+WAw0AYezIR8z0eFzoCBZr4JEA0DG7qMcLSouzOUDUoF
dr1Zg853hMSsCAAHA+tkW7BU3zyjQgVjkjlaJIRDhQ0wDuMzVTGPFatdWfkT
YY8c9RCjIZuqNGWDtjPd6p34JrK8ED5GYGSiZ9xRHoA6lPzq8rJbuV11vTXH
uyP+8ObfHkl6Lz/5fffO+Nodm1ZnPMqc+qbjXrVyo0a5V0PYgO2tIKHiqj98
3qPcrp2o3N1kSW+0pFYeiM2P+1VZ0qZxa6ay7AjNla3PlCgzxVMdzSBW2300
yVQJ53hATpceMhqv8yIDWCX4tmdePX1OjwsGj4sk0MEwklqq3gCP6EgYzEjL
pNkwNpJlpNx4FhpEZtgFpahwV2O5HKT61AgqXvKcVUJGSTRRWQX1DtT2vZn1
KSteKDAhr1iu31W89f3S1M/cOQnOzA2AR/7Hv1qbdStzDmXeFSJ/iJX85VXy
51jv1cIWss3QZW9oyaXcrpsN7Pbs2nJkwz/6dqc2FmxrPpg0XLaVvEI9Zw8v
O0GOZnuPZ8KkqCQLfXA/6X5DsMDuFnM/5iZZNjgruh4HDnyIGfWpvjsjPUoH
ZPgXiPfp1reY7l2AbapvgY7kXI8dnVk5TQ8xQjhIwKQksDbvWWNFg4mS1juc
4cUTNJhUH9m+kUz/eJqPRLpkz6y/vndtsWr9ij98jTj6RkceZImFCR9v/+RX
jswPHbtVrZjzKwt28odYYQwEmjtVoA8hwAPiyIPq0BU3+atZt6rnqvc2FmU2
HE6yZmzKT/mwYu+WwdJU5U6tcj2wfrYU9ORsTxvRKN9Epm8qww+OJsUdbFlD
q/W01YA5Xer5ic95GWeAtG30+By+FB7Dnc5cDzICrpcapSLNT6hI8UIEmee8
iWGIYiInZmiJnczvDBva4AZzesLpTKTHdwaqj+2w9Y9nqhENErZA/cnQYqVy
JRi+VRN6VHe9+0hZ+vslKR9C3lia+sne2N8f+ezvXs66yIvUiz7yVxOhVHlQ
rzyoDd3x0ZenULaEQSuuVY3ZMgvTPs1P+Kjx6Lb28m21B5Nadm6Cy0IZsr5Q
Hp62Lfa0Qa6bWTmVUQnfdwZhMB1hQ88bRaM8cD5lkHAYCLTQcGAQAcwPaVDX
6wNYD5BAwo0nskvZADDA6LMFEqhhd0tNpEIcIKIiJcRMQMzEJ8NQQesNHylA
sv0TQMU2NckBL1TW9b1Z8CmXvOEbtcqjxvsDR5oLE607Nx7J+mR/7PsFaZuq
9mx5OeFUQCjUt+TKdSChmvw179sB8k9CAIyLUKFYoTI9G8ypL0qvzknyZm2G
MqRqb+Jg6Q7lBvlH6yA1QM753g5IKrIIElNqUNBgoLqBqZA6TirvKiez2hxX
j0IbDA9TjQagealpCHkMYDDv0y3jgRlVDBYsMBVR8GAj2XgMSYY2ZYydRirE
MBTlkJQNXTH0lBjUW6uPiOCAI9S8glSm5I+3P21YCe4oivv90eSPKo4kFmdu
se7Y4kn7+OWYVZlX/xHQRbJqodzwh865yI9w7taq/2DEsz5erKx4BkqSc+N+
79u9sbkgtbV0O2hF9baPATbQivCSQzlbcbHvODC5nd6kP0IFDiVqewYHAt53
ej9yvUYFB5IZANEDBIaBmioIGhgknVBhgC015mip0836RUhom1KBbVuAdEIO
RnbVhwZbZvgZsimGhzE11jrxYD3EkOQT1cUwHqhYna1ULgVCt6uVx/XXmg80
7E0MHEw8kvr+odgPgIrGQ3GvpmzrCw5l2U0Wt6/6yBLWWcc6EHKTJBhr591k
veKs80LNgYaCjPrcLXmb3z+65SPvni0jtl3hq8H16/7VJTuMWeps2OmfzKLf
l0S0ae7b6WzM8n4UJIK1qTJIkwGq8DT6p/qWwNL8Z9XOJampR5foWbrrz9JO
/ZDB0iuXoZ96MyswwzxLjfZwVECnlBxmIhXUCBX6UxJ5wBhg7Y0y9ajRe8vy
T2dqVTMtkKer6vvXFsmPLcnCwuOmpcAOR8b7np0fO3LiAzkJ3sOJpWkf/jzl
VGadobM28lusu+RPKUIoWbtD/ishoBjkz7lPlClLzuHyTEvq5sDO+Iai7YED
qe6sTQ25G9YuqXnsObcyYz/f1bDDR+5hWyVZBTL7jiIVPACCGpB+ISdUYVgw
epxvi1SkeBdpmxq4Hu9G2ioSYFFczMURM5Uw9AemqThwWoH1AUx9gBLdENui
mETMTyPLBMzTTG3NhK7TTtccGwgvVSmXKlev+pW71eeqd9Xu3dxSkJQf+7vA
no3OfYmBvQm/TLuUObKKpUBu+bBGeVin/qcJq0MPqsIXXW+WXEAF1J6XWnKa
CrJdGVtyUzaDyNQdTBzy7lq9EgQ9If+RiAXrjf6m3f7JHfCl4G4Ds+zb4ZtX
aZEnAKxCZNUiyxkYMEw0qPJTrRBJwArADjG/0zbwQNUAU8H6mUWnIgotWFWY
hmAqaFtKBacbUYwbhne3EZvS84pxqAKopataEV4g/40P4rt7waWavd7MDxr3
fViW8mFjYZJrd7Il9vdARfis+p9+uOUlGebD6vDjY+Q/JPSkYf26d/2Cd3W6
PHzFN2tPcW/bfKJ8e2NJJmhFUfwH9rjfrIJKrFSszVvDcyV3hxr3VI7tqCRv
lCgVwleY5aig7mbG9WiQMAHxGhIAFEEWsa85NRCNjaRtzACmhTZYpMAufisP
dBg3kmHAGSGkcpbNINpmPbhhRgUezy6SCbu+6UxVKEgBospFVmBazTb712b9
5B+VQwS5W70Q2O7buaEpP6Usc3Phrs+Obv24JP73LyZhpnvIH2cGfXhcQ16b
Pqoj9qQBEtR1iBHTNuWs/UbTobYjGVX7Nh+I+61/V2JPeXZPfuorKGlXPOsL
NmXScm+4aa9/Ijs4k4m+IPo6c4wKvHDESNhWucj6UwEDlYc0rb2IKwV9PWGR
Rf+ISvjOMY9jDLgeEQO8mxE4x2lFFBIwBmxX0wp4FKqlB0gbADBeahamM9uK
tk2b7zN0QFZgDvdLT2SH0MUnYZ7uCJzZWUnkIotoxay+tulTrpFX3o+6jgQz
Pz742W+ObP0gcDgpeCR53Jr5csL+y3De2oobClLy6+7bwZ8nSsjf677uW79c
AQXI2pglNF/y7Uj+vG9Pn2NXU1Ga/2BycM/G6oRfvya/ELaHoXSdKrk3ULM/
OLEzMAVCkemf14VxLkP3L3h8m3+JkQAY0PY2KAB9qiD4I8k/TgsJA/4Flh9y
uSLndK0NePjOpXqXYZvuP09pibSZGQkBHpiJVDAFYJ7FtLB+PJhSQTVBIEpC
AvYv18ZUiNgwTtTGNBsDzz/bP7UrMLFLXUSC20gn6xW9oRkveR96maxV/nH4
0Mm82GM5ifX5yVV7N405s34cKv7lTMHLM4VQdKzd8Cq3a6Baedi8fXXFvnbN
AyeuThe/mShdO+tYnbN9O1xyqXHfQElKb8nefuuuvoKkl7MQfcrXZsrCk8X3
B2sOVI7thPv3T6dVUumbpwqgGsEDvM8CREQcvPO0H1MhGqLCMOU5HiI92Ps6
AFgHRK2gA7BhDGhje3AW48Ed5eDZFphmYAj8RBxthoTZAK7fSIUk0c32T4Av
IJSAdzIqJ4M1PRBByOstKEPuBO52HBi0JI1YE6627P9hxP563vV6svT7/iM/
nDq6Om9Zu2iFYd9PWlYCyX8aKSCh4Zz15VQRUPFmoliZtpE/gbLieX229PMT
uQuu9Blb8qv58vDZijdTlvB4yZORuoPVs9mqUGQGluA2sPcJIb45jgrNSD+V
FMzAkmHuCzyIDmXznZ3ClAEazOnY+xgG1tgWPI+p4DCAXSkYPB6cSiAwdIWB
68xzvqaG/c56osCjkjArpQI+C5DIVjuzfbOZvhmYerW1A6HFIPnnG1e94Wv+
++37r9XvfD0LFYd/dd7+YtTy0xkLWfy8WkPeaDxpvNt98PiOf+zN+fDkvt8/
7MpZ/7wpfKtOuVIdvlEdvkD+YRH5Ld9cGYSk8JLtxWQh+cMFFzwKsDFX9my4
bk9whnzTwEIWVPoaDIuciVRoy5UqDOmVEA6W0oToLy0QsH/Fo2bjOSo4TgAJ
algrKAkUBryVGhxiGQU1KhoaIWwX/IjcjZHg1IBrC8kDxYxjJrJ+Ahnm9oCa
dgYnYc6m+8cajg2szvigclxdKPt5pvzVjP31rOPlZBnw8GreRv7I1fVaICR8
Tv3vVD5rvdy4q2vvB7PO5ImyTU/b9oQf14dvVpHliKvB8J3a8L165U7D6kXy
i74386WhszbyGn22XJm2rI2WfNlvDR4byoJUARIGUAwiF4t0Cz3M6cz1zIRg
YZAFNvdx/kD8CP0AA6JC0xBkqXTlAbXpWdi4kMGooIaRwGYaSoJyY6EkYuBf
ISiYZZ5ScjgABIqmt1fO7Kic3F45B1SoGj4Jn3soMH2+q+HnsWKST46X/DBc
8sNgyQ9nil4vQppRo9xsUm63rq8ElHlXeNlOfr/3tOn5VPnp/I/nXYkL9i3f
T5Qrz46tX/GGZx2hG8HQ9SrlXgMB4yacWxe6XEn+nMV4cWjGFr7ofbXgeN59
5E6XrbmhJztAIggNIqAblArGg0iFYGi+I3nH0YTzPsUjDaHCHeUG0F1GBRaH
CB6Bi2CUgeyqOcYDtMG4gMIOZVXNglFBMKNFL0bmophZUoEzT30wTmYM/UAF
5QG2O/yknRsYG652PWo9/P1wwYuJ0h9GCn8aL1095w1dCSjXasBCN2tD1+pC
y761ibLwrJ38jP+r1hdX/QNHN8y7klY8Ka9XghBTwtcCb8atpIq5Ur1O3psH
yb8buhRUL1IFR9fPu5U5iCYlr4bzlfmye6cb9/rms/znsiqXsioXtgcWs4JE
MQCMjABM/LMiBsZOrPPk0Da/QfYNwCAAuLaZJkhTSkxFRChkVFAk2K5IBeGh
ynCIS0WQwsBF5jkYoIcmG2bRhBMN/axZEiZgqycqlIosUopOqDyAShA8cv0j
9/srfjid/+Op4pdTpevnPMpKrXIFrE65VqtcqyMG6cS85+VICfmb/9cDv1w/
NujNsaZ9MFWy5Ul3Dvl3ZI/qyPsvYGbJsX7eoVyvDi+Sn/6uLzjgFPI69ZKf
/JPD6zUQjNYWHL+Ml3U2n4J72161RKnIDi6BQYNGE2ZQopIqVfU7RwW4JrPy
HO0Hywosiw7FEQRPfDb3o/idCxO4MytwfnvwQmYVMUoFBQCTgDnBVHA9IjAC
JBIeNE4qF4yz3jQLhehAtoFF8DgRjcBcdnCKqsS2KrjajDpgBjoBDJJd+Oc7
mk+STPJ8JfnHQTC7L9SQv6BI2SBUHCNacdFH/lUy+P2it7ssc9vHnxYkfjhR
uuVZf47y4BiULavzDqhT1H+p6gNxWD/nUy5XgT68Hiok/xRxzhmetpN/j7xk
B06+n66pqBnZFViA28sILmz3gy1tq1qEBtwP+UaBpawgSUQpFQwJ1iALVhok
8kmdIYaA4HlOEzhfc2DQBvE7bIMrYi6hHdWpwCYmGJyMSJMQLvro/Ej8TqmI
4IE6uTYeA1SQFJde0E8SGJ064GFmV3AWPLI7MLuTLBTMVwa7n/ZYfjxjBc9C
SqmsVJP/uoeqEuGr1cQukpxhdcLxaqwkfLb8emdexc6NlVkfHct+b7I47rux
UpCLF7PWPw4eVS5VKcueEKB1R31Lcr16baHihxHLt735n3fkfNWZ803XkQe1
WfcbsuaaKg9BfRpchrsCgDVCAmfTgIfAeYgs4PHMSqoAZ41CsczSS1EcOEe/
NUvEMJBG5QUWFIihGEGN4FF5Aba0zQz7mssuOEeLJh41hpKIOLC2WQ93lBtA
JKJqQZMOenrl3DYIZJUz2dUkcOwNTAMbME8twVPtR9OHcj/pPfxx3+GPOvZ+
OFIUN+9Pe9yV/+2o7Zc5N+SZ5OcTc07IGF+eKfyqa/9sIL0y/W8LP/t3hZ/9
m4bt/zhy9NNb9Tt/GrZ8P1ykXPCGz/kh03gx7/l6yPJF16Hnvbm3arKX3cmX
/BnPO/f+MHD4x4Gj33XvedZ1uK2ha0f14g7QiuDMjuBcduXy3qqF8roJkl0E
CQZABZhOBV8hitouuj7KIepNcC54mcCgO51riMaQwGDsrJrfUT0fxePSo2Kn
jBCJx8G5uAFbatwAg1aQtI0OgLxikVQc6uJAbf0pR/0YuZngwi7Ao2q2yNd/
s6X8WevOZ905l6qzJsrjalP/1hr7n0o3/vvqrN807vh1MPXv+g59OmndOm1N
WnanXg5mDhz9MPfDf7Xj13++8+///OBv/gXgUbntH07sfe96Vcp5Z8olb9qS
I2mmbNOiNe6sK/HBsV1PW/dfr8n4onP/z0NHw9O29WmSka6RfMN+r2VPg6/2
YPX83srZnTXzoG/FnoEGX8u24FkIH6ASlApo4JxB6ms22TEPTORpFOBN8DXj
BDdgm1V1ifXQNmxxG4xQbeJZcD01rieKehhtATPAuR7vRhMNyEDUZD67clHb
hQoosADa2xHw+mtOAgxABQhIrvfEXODAy9NHQtNlr2asT08c+qbf8qj94HJF
+rw7Y6hw07QzvnP3B9Xp/xBI/XtHwl/lf/afmnf840p1sifhvx763V8c+OBf
eZL/pi797/3Jf9O+5zcrFXGt2X83mLthrGTDkm3LzZqMP3TnrC+6fp4o+bb3
yJPWA2d96b05H7Zt/4eJ/A9+OF0YXij9Y++ha7XbG7z+vdWL26uWd1UvBIJd
o/XVBdUzaka3zExVDJQwGBMJjgfKAJcYcHiQNpIF6lyMBPU7PsQaIhKECpnr
MRLcANzgOsXBTDHMNEFsazwEF412Nq2apBaQ4W9XFfiAf+ik33q8rulg1VR2
zXyeu2PYuufrE7tfDx95NVV+zb+t+MN/nf1X//LIR//l6Ia/8qX/pjM39mbL
wUs1uxa9WbP2lIG8uLqs3wzm/O5hc9qV6jR/2t8f+Og/HPjNvwmk/uOp/E++
7jt40Z/Qvf/9a9Xbvjxx8PvuI0/b9l2u3jVYnFiX+WtX3H8OJv5N7/9f2Jl/
RXFmffzPeH+a8553zjuTNzMZJ3FLJnFJjNEQHSUGFTcUFVm66YVVFGTfaZbe
qxcExTUuQRMUZRPonV7YcdeJmZhoolEEpJd6762neSy6IXPOPc+59XRVQ/f9
9PfeW1X9dPqmjso9D44nP7t0eKAm+ufm7PErefePCUeMCSfkyjR1T26++mJ2
vFOZaNLkFqmaE9RWYrSuoLEOLw+wH+EJAvX58+FUzGkEBhp0PhVgAq07ZB5m
wERMLz+UMPJn5gQmnAo4JFxbZm/2huAx3wyO0N+poSaHEt1MqOBmLAJNLxT2
IMjJhacr47ZfL9rhUscZyguyK5pO5h+43yh5ci7jVUvevxqEE9ezHp3PbBB/
mb9jjTRi5f4VS3Z/uHj38sV7VywojV52JW+rvTahs3qfWy14fO4QOIJVCyL/
8oeDny8s3rSoYOO713O29NbGXkjZ4FIk/qsp9YdzmVBFNAnXthRGjxxLedJR
/NojZ28x3jt6vPvXUztlKhmsi71vED+9kPPwmHhYn9ysKFcId/SU77jXmP7g
ZIZSboTSAoyyweExd7k4R18wl8+fJL3DfGBQo1LAVwZggD9PqQhXBpgk8yTi
4boxnzjMtyc/9HPam7TCnf9JwDeQM02QCphP1FiFqp4krT0+m1ElrHPX7f33
6cyusn0n07cOM/t+OpsOEXnYkORrO4KnmKCk9Kj8jurxzsofLhVbDelGyZcd
Ffuet5TcO5PZKP2n5FMoJP5euXlRbuTSE+KInvKtP13KnugpundMaC6KOp30
iX7fCtnmhUzMx6baA+PdMtap9HdXTHQVkKvz+HtDY7iyAXtTz3qqfb3lnto9
rtr4n8/lPDoheX45Z9AoNcv2PDiWevd4aq3+YjxG0JqosQnUaOCQgBIwgg1j
2IiXJLR94EMjQ6JPNuk+b2Z44kBjTUPPR4KqBDFKApiQ8RBnzjiGKAaNeAgh
FIP5yOHsTZkBJToJPXXCNwkSAEASV6SBA2AkayyJWhQKodqcqDULK87JEzdb
FbG3jNIB5b5hJu7H06mPmjJGVLvxOqa1zNunZPtVeBLSo3ptlj26mHX/RLq5
Kub7szkXjmzP+HxB6pq3GwVrbx1LfPx1yvNvMwLWKgg6O6z33TXgulg31dO2
0umOvOetWYOqvWeSP9fv/rA5e5NVkfiwKd13oxTPbjlq2UHsWNnbR9lRxueu
8pkrRlX7HBX7p9pKptvyx1uKB5RxN42CG0xulroDtU4NAFiBanhRyZrg6SP+
5z3EyDwJevhu9NEgNto+IUbcHZQFbn5OcSBI8JWBQkJnqDLwbU5I/uM+8xnV
CmzcOACIw4fhzYwWJSIeMUAA8FwQPKruhbcRew0V1hVQW5ZIUlpyt5xOWd2v
jHvWXPD9iQx3XczrtkK/vRy/3zGigw70SUsRdA336kV3G1LbSvYUb1qS8vFb
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
KUdHyEjs/wHcGooP
    "], {{0, 178}, {178, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{568.5263157894719, Automatic},
  ImageSizeRaw->{178, 178},
  PlotRange->{{0, 178}, {0, 178}}]], "Output",
 CellChangeTimes->{
  3.7643360098461857`*^9, 3.7643490360166845`*^9, 3.7643491429263563`*^9, 
   3.764349445229719*^9, {3.7643627462702804`*^9, 3.7643627824311733`*^9}, 
   3.7643628595380645`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"d729b497-54d6-4faf-a90f-94443eede4e8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.762816695245718*^9, 3.7628166952517185`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
},
WindowSize->{958, 988},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
Magnification:>0.95 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 15745, 337, 1108, "Input",ExpressionUUID->"9f1bdff3-9970-414a-8286-e19159d1c708"],
Cell[16328, 361, 10407, 241, 180, "Output",ExpressionUUID->"0076ae23-adca-4e0e-9d7d-77c896ea34ea"],
Cell[26738, 604, 480, 11, 21, "Print",ExpressionUUID->"6290625c-a875-46a8-9e21-38520df5375f"],
Cell[27221, 617, 12387, 321, 162, "Output",ExpressionUUID->"448d94a8-95a5-493d-9968-c63cd6d784a7"],
Cell[39611, 940, 11226, 286, 162, "Output",ExpressionUUID->"061294af-9c17-42e1-b731-5157c2276ee5"],
Cell[50840, 1228, 40946, 677, 556, "Output",ExpressionUUID->"d729b497-54d6-4faf-a90f-94443eede4e8"]
}, Open  ]],
Cell[91801, 1908, 177, 3, 60, "Input",ExpressionUUID->"db3a7546-dac8-4997-8fb3-3c7392c01df6"]
}
]
*)

